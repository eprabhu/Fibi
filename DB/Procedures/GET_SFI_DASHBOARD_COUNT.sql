DELIMITER //
CREATE PROCEDURE `GET_SFI_DASHBOARD_COUNT`(
		AV_PERSON_ID                    VARCHAR(200),
        AV_SORT_TYPE                    VARCHAR(500),
        AV_PAGED                        INT(10),
        AV_LIMIT                        INT(10),
        AV_UNLIMITED                    BOOLEAN,
        AV_TYPE                         VARCHAR(1),
        AV_ENTITY_NAME                  VARCHAR(90),
        AV_COI_FINANCIAL_ENTITY_ID      VARCHAR(20),
        AV_HAS_DISCLOSURE_FLAG          VARCHAR(3),
        AV_HAS_PROPOSAL_FLAG            VARCHAR(3),
        AV_HAS_AWARD_FLAG               VARCHAR(3)
)
BEGIN
DECLARE LS_DYN_SQL LONGTEXT;
DECLARE LS_FILTER_CONDITION LONGTEXT;
DECLARE LS_OFFSET_CONDITION VARCHAR(600);
DECLARE LS_OFFSET INT(11);
DECLARE TAB_QUERY LONGTEXT;
DECLARE JOIN_CONDITION LONGTEXT;
DECLARE SELECTED_FIELD_LIST LONGTEXT;

SET LS_OFFSET = (AV_LIMIT * AV_PAGED);
SET LS_FILTER_CONDITION ='';
SET LS_DYN_SQL ='';
SET JOIN_CONDITION = '';
SET SELECTED_FIELD_LIST= '';
SET TAB_QUERY = '';

SET SELECTED_FIELD_LIST= CONCAT(SELECTED_FIELD_LIST,' , ');

IF AV_TYPE IS NOT NULL AND AV_TYPE <> '' AND  AV_TYPE = 'A' THEN 
	IF AV_ENTITY_NAME IS NOT NULL  AND AV_ENTITY_NAME <> '' THEN
		SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.ENTITY_NAME LIKE ''%',AV_ENTITY_NAME, '%'' AND ');
	END IF;

	IF AV_COI_FINANCIAL_ENTITY_ID IS NOT NULL  AND AV_COI_FINANCIAL_ENTITY_ID <> '' THEN
		SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.COI_FINANCIAL_ENTITY_ID LIKE ''%',AV_COI_FINANCIAL_ENTITY_ID, '%'' AND ');
	END IF;

	IF AV_HAS_DISCLOSURE_FLAG IS NOT NULL  AND AV_HAS_DISCLOSURE_FLAG <> '' THEN
		IF AV_HAS_DISCLOSURE_FLAG = 'YES' THEN 
			SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.NO_OF_DISCLOSURES > 0 AND ');
		ELSE 
			SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.NO_OF_DISCLOSURES = 0 AND ');
		END IF;
	END IF;

	IF AV_HAS_PROPOSAL_FLAG IS NOT NULL  AND AV_HAS_PROPOSAL_FLAG <> '' THEN
		IF AV_HAS_PROPOSAL_FLAG = 'YES' THEN 
			SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.NO_OF_PROPOSALS > 0 AND ');
		ELSE 
			SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.NO_OF_PROPOSALS = 0 AND ');
		END IF;
	END IF;

	IF AV_HAS_AWARD_FLAG IS NOT NULL  AND AV_HAS_AWARD_FLAG <> '' THEN
		IF AV_HAS_AWARD_FLAG = 'YES' THEN 
			SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.NO_OF_AWARDS > 0 AND ');
		ELSE 
			SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.NO_OF_AWARDS = 0 AND ');
		END IF;
	END IF;
END IF;

IF AV_SORT_TYPE IS NULL THEN
        SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
ELSE
    SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
END IF;

IF AV_UNLIMITED = TRUE THEN
        SET LS_OFFSET_CONDITION = '';
ELSE
        SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);
END IF;

IF LS_FILTER_CONDITION <>'' THEN
        SET LS_FILTER_CONDITION = CONCAT(' WHERE ',LS_FILTER_CONDITION);
        SELECT TRIM(TRAILING 'AND ' FROM LS_FILTER_CONDITION) into LS_FILTER_CONDITION from dual;
END IF;
        
        SET LS_DYN_SQL = CONCAT('SELECT DISTINCT COUNT(*)  FROM (SELECT DISTINCT
										T1.PERSON_ENTITY_ID, 
										T1.VERSION_NUMBER, 
										T2.ENTITY_NAME, 
										T1.INVOLVEMENT_START_DATE,
                                        T1.UPDATE_TIMESTAMP,
                                        T1.CREATE_TIMESTAMP, 
                                        T1.IS_ACTIVE, 
                                        T1.INVOLVEMENT_END_DATE, 
                                        T6.DESCRIPTION AS ENTITY_TYPE, 
                                        T2.EMAIL_ADDRESS, 
                                        T7.COUNTRY_NAME, 
                                        IFNULL(T3.NO_OF_DISCLOSURES,0) AS NO_OF_DISCLOSURES, 
                                        IFNULL(T4.NO_OF_PROPOSALS,0) AS NO_OF_PROPOSALS,
                                        IFNULL(T5.NO_OF_AWARDS,0) AS NO_OF_AWARDS 
										FROM PERSON_ENTITY T1 
										LEFT JOIN ENTITY T2 ON T2.ENTITY_ID = T1.ENTITY_ID 
                                        LEFT JOIN (SELECT T1.PERSON_ENTITY_ID, COUNT(DISTINCT T1.DISCLOSURE_ID) AS NO_OF_DISCLOSURES 
												   FROM COI_DISCL_ENT_PROJ_DETAILS T1 INNER JOIN COI_DISCLOSURE T2 ON T2.DISCLOSURE_ID = T1.DISCLOSURE_ID 
                                                   WHERE T2.VERSION_STATUS IN (''1'',''2'') 
                                                   GROUP BY T1.PERSON_ENTITY_ID) T3 ON T3.PERSON_ENTITY_ID = T1.PERSON_ENTITY_ID 
										LEFT JOIN (SELECT T1.PERSON_ENTITY_ID, COUNT(DISTINCT T1.MODULE_ITEM_KEY) AS NO_OF_PROPOSALS 
												   FROM COI_DISCL_ENT_PROJ_DETAILS T1 WHERE T1.MODULE_CODE = 3 
                                                   GROUP BY T1.PERSON_ENTITY_ID) T4 ON T4.PERSON_ENTITY_ID = T1.PERSON_ENTITY_ID 
										LEFT JOIN (SELECT T1.PERSON_ENTITY_ID, COUNT(DISTINCT T1.MODULE_ITEM_KEY) AS NO_OF_AWARDS 
												   FROM COI_DISCL_ENT_PROJ_DETAILS T1 WHERE T1.MODULE_CODE = 1 
                                                   GROUP BY T1.PERSON_ENTITY_ID) T5 ON T5.PERSON_ENTITY_ID = T1.PERSON_ENTITY_ID 
										LEFT JOIN ENTITY_TYPE T6 ON T6.ENTITY_TYPE_CODE = T2.ENTITY_TYPE_CODE 
                                        LEFT JOIN COUNTRY T7 ON T7.COUNTRY_CODE = T2.COUNTRY_CODE ', JOIN_CONDITION, ' WHERE T1.PERSON_ID = ''', AV_PERSON_ID , '''', TAB_QUERY, 
                                        ' GROUP BY T1.PERSON_ENTITY_ID) T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);


SET @QUERY_STATEMENT = LS_DYN_SQL;
PREPARE EXECUTABLE_STAEMENT FROM @QUERY_STATEMENT;
EXECUTE EXECUTABLE_STAEMENT;

END
//