DELIMITER //
CREATE PROCEDURE `COI_SYNC_DISCLOSURE_RISK`(
    AV_DISCLOSURE_ID   	     INT(30),
    AV_DISCLOSURE_NUMBER   	 INT(30),
    AV_UPDATE_USER           VARCHAR(45)
)
BEGIN

    /**
    COI_RISK_CATEGORY and Codes
        High   = 1
        Medium = 2
        Low    = 3

    ENTITY_RISK_CATEGORY and Codes
        High   = 1
        Medium = 2
        Low    = 3
    */

    DECLARE LI_RISK_COUNT VARCHAR(10);
    SET LI_RISK_COUNT = 0;

    SELECT COUNT(T2.RISK_CATEGORY_CODE) INTO LI_RISK_COUNT FROM COI_DISCL_ENT_PROJ_DETAILS T1 INNER JOIN ENTITY T2 ON T2.ENTITY_ID = T1.ENTITY_ID 
    WHERE T1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND T2.RISK_CATEGORY_CODE = 1 GROUP BY T2.RISK_CATEGORY_CODE;

    IF LI_RISK_COUNT != 0 THEN

        UPDATE COI_DISCLOSURE SET RISK_CATEGORY_CODE = 1 WHERE  DISCLOSURE_ID = AV_DISCLOSURE_ID;

    ELSEIF LI_RISK_COUNT = 0 THEN

        SELECT COUNT(T2.RISK_CATEGORY_CODE) INTO LI_RISK_COUNT FROM COI_DISCL_ENT_PROJ_DETAILS T1 INNER JOIN ENTITY T2 ON T2.ENTITY_ID = T1.ENTITY_ID 
        WHERE T1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND T2.RISK_CATEGORY_CODE = 2 GROUP BY T2.RISK_CATEGORY_CODE;
        IF LI_RISK_COUNT != 0 THEN
            UPDATE COI_DISCLOSURE SET RISK_CATEGORY_CODE = 2 WHERE  DISCLOSURE_ID = AV_DISCLOSURE_ID;
        END IF;
    
    END IF;

    IF LI_RISK_COUNT = 0 THEN

        SELECT COUNT(T2.RISK_CATEGORY_CODE) INTO LI_RISK_COUNT FROM COI_DISCL_ENT_PROJ_DETAILS T1 INNER JOIN ENTITY T2 ON T2.ENTITY_ID = T1.ENTITY_ID 
        WHERE T1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND T2.RISK_CATEGORY_CODE = 3 GROUP BY T2.RISK_CATEGORY_CODE;
        IF LI_RISK_COUNT != 0 THEN
            UPDATE COI_DISCLOSURE SET RISK_CATEGORY_CODE = 3 WHERE  DISCLOSURE_ID = AV_DISCLOSURE_ID;
        END IF;

    END IF;

END
//