DELIMITER //
CREATE  PROCEDURE `GET_COI_OPA_DASHBOARD`(
	AV_PERSON_ID                    VARCHAR(200),
	AV_FILTER_TYPE					VARCHAR(10),
    AV_IS_COUNT                    	BOOLEAN,
    AV_SORT_TYPE                    VARCHAR(500),
    AV_PAGED                        INT(10),
    AV_LIMIT                        INT(10),
    AV_TAB_TYPE                     VARCHAR(30),
    AV_DISCLOSURE_STATUS_CODES      VARCHAR(30),
    AV_DISPOSITION_STATUS_CODES     VARCHAR(30),
    AV_SUBMISSION_TIMESTAMP         VARCHAR(30),
    AV_UNIT_NUMBER                  VARCHAR(8),
    AV_FETCH_ALL_RECORDS            BOOLEAN
)
BEGIN

    /*
        This is a single procedure for all opa related dashboard
        AV_TAB_TYPE : Tabs eg : All Disclosure tab,...
    	AV_FILTER_TYPE : can be consider as sub tab or sub session or major filter
    	    eg : in All Disclosure there is two sub tabs of a status/any field of true and false
    	AV_IS_COUNT : if true it will return on count without considering pagination else will return rows considering pagination

    */

	DECLARE LS_DYN_SQL 					LONGTEXT;
	DECLARE LS_FILTER_CONDITION 		LONGTEXT;
    DECLARE OPA_SELECTED_FIELDS 	    LONGTEXT;
    DECLARE OPA_JOINS               	LONGTEXT;
    DECLARE LS_OFFSET 			        INT(11);
    DECLARE LS_OFFSET_CONDITION         VARCHAR(600);

	SET LS_DYN_SQL ='';     
    SET OPA_SELECTED_FIELDS = '';
    SET OPA_JOINS = '';
    SET LS_OFFSET = (AV_LIMIT * AV_PAGED);
    SET LS_OFFSET_CONDITION = '';

    IF AV_TAB_TYPE = 'MY_DASHBOARD' THEN

        SET LS_FILTER_CONDITION = CONCAT(' T1.PERSON_ID = ', AV_PERSON_ID);

    ELSEIF AV_TAB_TYPE = 'NEW_SUBMISSIONS' THEN

        SET LS_FILTER_CONDITION = CONCAT(' T1.OPA_DISCLOSURE_STATUS_CODE = 2   
				AND T1.ADMIN_GROUP_ID IS NULL AND T1.ADMIN_PERSON_ID IS NULL ');
				
		SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION, ' AND (EXISTS(SELECT T51.ROLE_ID FROM ROLE_RIGHTS T51 
					INNER JOIN RIGHTS T52 ON T51.RIGHT_ID = T52.RIGHT_ID
					INNER JOIN PERSON_ROLES T53 ON T51.ROLE_ID = T53.ROLE_ID
					WHERE T53.PERSON_ID = ''', AV_PERSON_ID ,''' AND (T52.RIGHT_NAME = ''MANAGE_OPA_DISCLOSURE''
					OR T52.RIGHT_NAME = ''VIEW_OPA_DISCLOSURE''))
                    OR (''', AV_PERSON_ID ,''' IN (SELECT T54.PERSON_ID FROM PERSON_ROLES T54 
                    INNER JOIN ADMIN_GROUP T55 ON T54.ROLE_ID = T55.ROLE_ID WHERE T55.MODULE_CODE=23)))');	

    ELSEIF AV_TAB_TYPE = 'MY_REVIEWS' THEN
       
        SET LS_FILTER_CONDITION = CONCAT('');

    ELSEIF AV_TAB_TYPE = 'ALL_REVIEWS' THEN

        SET LS_FILTER_CONDITION = CONCAT(' T1.DISPOSITION_STATUS_CODE = 1 ');
        SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,  ' AND (T1.OPA_DISCLOSURE_ID IN
                    (SELECT OPA_DISCLOSURE_ID FROM OPA_DISCLOSURE WHERE 
					''', AV_PERSON_ID ,''' IN (SELECT T54.PERSON_ID FROM PERSON_ROLES T54 
                    INNER JOIN ADMIN_GROUP T55 ON T54.ROLE_ID = T55.ROLE_ID WHERE T55.MODULE_CODE=23) OR
					(ADMIN_GROUP_ID IN(SELECT ADMIN_GROUP_ID FROM ADMIN_GROUP 
					WHERE ROLE_ID IN (SELECT T51.ROLE_ID FROM ROLE_RIGHTS T51 
					LEFT JOIN PERSON_ROLES T53 ON T51.ROLE_ID = T53.ROLE_ID
					WHERE T53.PERSON_ID = ''', AV_PERSON_ID ,''')))))');	

    ELSEIF AV_TAB_TYPE = 'ALL_DISCLOSURES' THEN

        SET LS_FILTER_CONDITION = CONCAT(' T1.OPA_DISCLOSURE_STATUS_CODE != 1 ');

        SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION, ' AND (T1.OPA_DISCLOSURE_ID IN
                (SELECT OPA_DISCLOSURE_ID FROM OPA_DISCLOSURE WHERE 
				''', AV_PERSON_ID ,''' IN (SELECT T54.PERSON_ID FROM PERSON_ROLES T54 
                INNER JOIN ADMIN_GROUP T55 ON T54.ROLE_ID = T55.ROLE_ID WHERE T55.MODULE_CODE=23) OR
				ADMIN_GROUP_ID IN(SELECT ADMIN_GROUP_ID FROM ADMIN_GROUP 
				WHERE ROLE_ID IN (SELECT T51.ROLE_ID FROM ROLE_RIGHTS T51 
				INNER JOIN PERSON_ROLES T53 ON T51.ROLE_ID = T53.ROLE_ID
				WHERE T53.PERSON_ID = ''', AV_PERSON_ID ,''')) OR 
				ADMIN_PERSON_ID = ''', AV_PERSON_ID ,''') OR 
				EXISTS(SELECT T51.ROLE_ID FROM ROLE_RIGHTS T51 
				INNER JOIN RIGHTS T52 ON T51.RIGHT_ID = T52.RIGHT_ID
				INNER JOIN PERSON_ROLES T53 ON T51.ROLE_ID = T53.ROLE_ID
				WHERE T53.PERSON_ID = ''', AV_PERSON_ID ,''' AND (T52.RIGHT_NAME = ''MANAGE_OPA_DISCLOSURE'' 
				OR T52.RIGHT_NAME = ''VIEW_OPA_DISCLOSURE''))) ');	

    END IF;

    /**
        Filter Conditions
    */

    IF AV_DISPOSITION_STATUS_CODES IS NOT NULL  AND AV_DISPOSITION_STATUS_CODES <> '' THEN
		SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' AND T1.DISPOSITION_STATUS_CODE IN (',AV_DISPOSITION_STATUS_CODES,') ');
	END IF;

    IF AV_DISCLOSURE_STATUS_CODES IS NOT NULL  AND AV_DISCLOSURE_STATUS_CODES <> '' THEN
		SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' AND T1.OPA_DISCLOSURE_STATUS_CODE IN (',AV_DISCLOSURE_STATUS_CODES,') ');
	END IF;
    
    IF AV_UNIT_NUMBER IS NOT NULL AND AV_UNIT_NUMBER <> '' THEN
        SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' AND T1.HOME_UNIT = ''',AV_UNIT_NUMBER,''' ');
    END IF;

    IF AV_SUBMISSION_TIMESTAMP IS NOT NULL AND AV_SUBMISSION_TIMESTAMP <> '' THEN
        SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' AND DATE(T1.SUBMISSION_TIMESTAMP) = ''', STR_TO_DATE(AV_SUBMISSION_TIMESTAMP,'%Y-%m-%d'),''' ');
	END IF;



    IF AV_IS_COUNT THEN
        SET LS_DYN_SQL = CONCAT(' SELECT COUNT(*) FROM ( SELECT ');
        SET OPA_SELECTED_FIELDS = CONCAT(' T1.OPA_DISCLOSURE_ID ');
    ELSE
        SET LS_DYN_SQL = CONCAT(' SELECT * FROM ( SELECT ');
        SET OPA_SELECTED_FIELDS= CONCAT('T1.OPA_DISCLOSURE_ID, T1.OPA_DISCLOSURE_NUMBER, T1.OPA_CYCLE_NUMBER,
            T2.PERIOD_START_DATE, T2.PERIOD_END_DATE, T2.OPA_CYCLE_STATUS, T2.OPEN_DATE, T2.CLOSE_DATE,
            T1.PERSON_NAME, T1.HOME_UNIT AS UNIT_NUMBER, T3.UNIT_NAME, T1.IS_FACULTY, T1.IS_FALL_SABATICAL,
            T1.IS_SPRING_SABATICAL, T1.RECEIVED_SUMMER_COMP, T1.SUMMER_COMP_MONTHS, T1.HAS_POTENTIAL_CONFLICT,
            T1.CONFLICT_DESCRIPTION, T1.CREATE_TIMESTAMP, T1.CREATE_USER, T1.SUBMISSION_TIMESTAMP, T1.UPDATE_TIMESTAMP,
            T1.UPDATE_USER, T5.FULL_NAME AS UPDATE_USER_FULL_NAME , T1.DISPOSITION_STATUS_CODE, T1.OPA_DISCLOSURE_STATUS_CODE,
            T6.DESCRIPTION AS OPA_DISCLOSURE_STATUS, T7.DESCRIPTION AS DISPOSITION_STATUS');
        IF NOT AV_FETCH_ALL_RECORDS THEN
			SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);
        END IF;
    END IF;

    SET OPA_JOINS = CONCAT(' INNER JOIN OPA_CYCLES T2 ON T2.OPA_CYCLE_NUMBER = T1.OPA_CYCLE_NUMBER 
        INNER JOIN UNIT T3 ON T3.UNIT_NUMBER = T1.HOME_UNIT 
        INNER JOIN PERSON T5 ON T5.USER_NAME = T1.UPDATE_USER
        INNER JOIN OPA_DISCLOSURE_STATUS_TYPE T6 ON T6.OPA_DISCLOSURE_STATUS_CODE = T1.OPA_DISCLOSURE_STATUS_CODE 
        LEFT JOIN OPA_DISPOSITION_STATUS_TYPE T7 ON T7.DISPOSITION_STATUS_CODE = T1.DISPOSITION_STATUS_CODE ');


    IF AV_IS_COUNT THEN
		SET AV_SORT_TYPE =   '';
    ELSEIF AV_SORT_TYPE IS NULL THEN
        SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
    ELSE
        SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
    END IF;

    SET LS_DYN_SQL = CONCAT(LS_DYN_SQL, OPA_SELECTED_FIELDS, ' FROM OPA_DISCLOSURE T1 ', 
            OPA_JOINS,  ' WHERE ', LS_FILTER_CONDITION, ' ) T ', AV_SORT_TYPE, LS_OFFSET_CONDITION);

    SET @QUERY_STATEMENT = LS_DYN_SQL;
	PREPARE EXECUTABLE_STAEMENT FROM @QUERY_STATEMENT;
	EXECUTE EXECUTABLE_STAEMENT;
END

//