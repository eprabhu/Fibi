DELIMITER //
CREATE PROCEDURE `COI_EVALUATE_VALIDATION`(
  AV_DISCLOSURE_ID INT,
  AV_PERSON_ID VARCHAR(45)
)
BEGIN
  DECLARE LI_QUESTIONNAIRE_FLAG INT; 
  DECLARE LI_SFI_FLAG INT;
  DECLARE LI_RELATIONSHIP_FLAG INT;
  DECLARE LS_ERROR_MSG VARCHAR(2000);
  DECLARE LS_SFI_LIST VARCHAR(2000);
  DECLARE LS_PROJ_SFI_LIST LONGTEXT;
  
  -- Temporary table to store the error messages
  -- CREATE TEMPORARY TABLE IF NOT EXISTS ERROR_MESSAGE (MESSAGE VARCHAR(2000));
  CREATE TEMPORARY TABLE IF NOT EXISTS ERROR_MESSAGE (
    MESSAGE VARCHAR(2000),
    SFIs VARCHAR(2000),
    PROJ_SFI_DETAILS LONGTEXT
);
  
  SET LI_QUESTIONNAIRE_FLAG = FN_EVAL_DISCLOSURE_QUESTIONNAIRE(8, 0, AV_DISCLOSURE_ID);

  IF LI_QUESTIONNAIRE_FLAG = 1 THEN
  
		-- If questionnaire evaluates to true, then check if SFI is added
		SELECT COUNT(*) > 0 INTO LI_SFI_FLAG 
		FROM PERSON_ENTITY 
		WHERE PERSON_ID = AV_PERSON_ID
		AND VERSION_STATUS = 'ACTIVE'
        AND IS_RELATIONSHIP_ACTIVE = 'Y';

		IF NOT LI_SFI_FLAG THEN
    
			  SET LS_ERROR_MSG = "You have not added any SFI(s). Based on your screening questionnaire, you have to add at least one SFI to continue with disclosure.";
			  
			  INSERT INTO ERROR_MESSAGE (MESSAGE) VALUES (LS_ERROR_MSG);
      
		END IF;
    
  END IF;
  
  SET LI_SFI_FLAG = 0;

  -- Check if any draft SFI is present
  SELECT COUNT(*) > 0 INTO LI_SFI_FLAG 
  FROM PERSON_ENTITY 
  WHERE PERSON_ID = AV_PERSON_ID 
  AND VERSION_STATUS = 'PENDING';
            
  IF LI_SFI_FLAG THEN

    SET LS_SFI_LIST = '';
    SELECT 
        GROUP_CONCAT(DISTINCT CONCAT(t1.PERSON_ENTITY_ID, '||', t2.ENTITY_NAME) SEPARATOR ':;:') INTO LS_SFI_LIST
    FROM 
        PERSON_ENTITY t1
    INNER JOIN 
        Entity t2 ON t1.ENTITY_ID = t2.ENTITY_ID
    WHERE 
        t1.PERSON_ID = AV_PERSON_ID  AND t1.VERSION_STATUS = 'PENDING';

    SET LS_ERROR_MSG = "You have draft SFI(s) in your SFI list, either define relationships and activate the SFI or delete the draft SFI (if not required) to certify the disclosure.";

	INSERT INTO ERROR_MESSAGE (MESSAGE, SFIs) VALUES (LS_ERROR_MSG, LS_SFI_LIST);
              
  END IF;
  
  -- If any SFI is present, check if relationship is defined
	  SELECT COUNT(*) = 0 INTO LI_RELATIONSHIP_FLAG
	  FROM COI_DISCL_ENT_PROJ_DETAILS T1
	  INNER JOIN PERSON_ENTITY_RELATIONSHIP T2 ON T1.PERSON_ENTITY_ID = T2.PERSON_ENTITY_ID
      INNER JOIN VALID_PERSON_ENTITY_REL_TYPE T3 ON T2.VALID_PERS_ENTITY_REL_TYP_CODE = T3.VALID_PERS_ENTITY_REL_TYP_CODE
	  WHERE T1.DISCLOSURE_ID = AV_DISCLOSURE_ID
	  AND T1.PROJECT_CONFLICT_STATUS_CODE IS NULL
	  AND T1.PERSON_ENTITY_ID IS NOT NULL
	  AND T3.DISCLOSURE_TYPE_CODE = 1;

  IF NOT LI_RELATIONSHIP_FLAG THEN
  
		SET LS_SFI_LIST = '';
  
		INSERT INTO ERROR_MESSAGE (MESSAGE, PROJ_SFI_DETAILS)
		SELECT DISTINCT  'You have undefined Project-SFI relationships. Kindly complete the Relationships section to certify the disclosure.' AS LS_ERROR_MSG,
                CONCAT(
					'DisclDetailId: ', T1.DISCLOSURE_DETAILS_ID, '||', 'Title: ', COALESCE(T2.TITLE, T3.TITLE), '||', 'Entity: ', T4.ENTITY_NAME, '||', 
                    'ModuleCode: ', COALESCE(T2.COI_PROJECT_TYPE_CODE, T3.COI_PROJECT_TYPE_CODE), '||', 
                    'ModuleItemKey: ', COALESCE(T2.EXTERNAL_SYSTEM_REF_ID, T3.EXTERNAL_SYSTEM_REF_ID))
                    as LS_PROJ_SFI_LIST
		FROM COI_DISCL_ENT_PROJ_DETAILS T1
        INNER JOIN PERSON_ENTITY_RELATIONSHIP T5 ON T5.PERSON_ENTITY_ID = T1.PERSON_ENTITY_ID AND T5.VALID_PERS_ENTITY_REL_TYP_CODE IN (1,2,3)
		LEFT JOIN COI_PROJECT_AWARD_V T2 ON T2.EXTERNAL_SYSTEM_REF_ID = T1.MODULE_ITEM_KEY AND T1.MODULE_CODE = 1
		LEFT JOIN COI_PROJECT_PROPOSAL_V T3 ON T3.EXTERNAL_SYSTEM_REF_ID = T1.MODULE_ITEM_KEY AND T1.MODULE_CODE = 3
		INNER JOIN ENTITY T4 ON T4.ENTITY_ID = T1.ENTITY_ID
		WHERE T1.DISCLOSURE_ID = AV_DISCLOSURE_ID 
		AND T1.PROJECT_CONFLICT_STATUS_CODE IS NULL 
		AND T1.PERSON_ENTITY_ID IS NOT NULL;
  
		SET LS_ERROR_MSG = "You have undefined Project-SFI relationships. Kindly complete the Relationships section to certify the disclosure.";
		
  END IF;

   SELECT COUNT(*) > 0 INTO LI_SFI_FLAG 
		FROM COI_DISCL_ENT_PROJ_DETAILS t1 INNER JOIN PERSON_ENTITY t2 ON t2.PERSON_ENTITY_ID = t1.PERSON_ENTITY_ID 
    INNER JOIN ENTITY t3 ON t3.ENTITY_NUMBER = t2.ENTITY_NUMBER 
		WHERE t1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND t2.ENTITY_ID != t3.ENTITY_ID AND t3.IS_ACTIVE IN ('N', 'Y')
    AND t3.VERSION_STATUS = 'ACTIVE';

	IF LI_SFI_FLAG THEN
		
			SET LS_PROJ_SFI_LIST = '';

			SELECT GROUP_CONCAT(DISTINCT CONCAT(t2.PERSON_ENTITY_ID, '||', t4.ENTITY_NAME) SEPARATOR ':;:') INTO LS_PROJ_SFI_LIST
			FROM COI_DISCL_ENT_PROJ_DETAILS t1 
			INNER JOIN PERSON_ENTITY t2 ON t2.PERSON_ENTITY_ID = t1.PERSON_ENTITY_ID 
			INNER JOIN ENTITY t3 ON t3.ENTITY_NUMBER = t2.ENTITY_NUMBER 
            INNER JOIN ENTITY t4 ON t4.ENTITY_ID = t1.ENTITY_ID 
			WHERE t1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND t2.ENTITY_ID != t3.ENTITY_ID AND t3.IS_ACTIVE IN ('N', 'Y') AND t3.VERSION_STATUS = 'ACTIVE';
    
			SET LS_ERROR_MSG = "You have unrevised SFI (s) in your SFI list for recently modified Entity (s). Kindly revise the SFI or inactivate the SFI to proceed and certify the disclosure.";
            INSERT INTO ERROR_MESSAGE (MESSAGE, SFIs) VALUES (LS_ERROR_MSG, LS_PROJ_SFI_LIST);
      
	END IF;

  /* SET LI_SFI_FLAG = 0;

  SELECT COUNT(*) > 0 INTO LI_SFI_FLAG 
		FROM COI_DISCL_ENT_PROJ_DETAILS t1 INNER JOIN PERSON_ENTITY t2 ON t2.PERSON_ENTITY_ID = t1.PERSON_ENTITY_ID 
    INNER JOIN ENTITY t3 ON t3.ENTITY_NUMBER = t2.ENTITY_NUMBER 
		WHERE t1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND t2.ENTITY_ID = t3.ENTITY_ID AND t3.IS_ACTIVE = 'N' AND t3.VERSION_STATUS = 'ACTIVE';

	IF LI_SFI_FLAG THEN
    
			SET LS_SFI_LIST = '';
    
			SELECT GROUP_CONCAT(DISTINCT CONCAT(t2.PERSON_ENTITY_ID, '||', t3.ENTITY_NAME) SEPARATOR ':;:') INTO LS_SFI_LIST
			FROM COI_DISCL_ENT_PROJ_DETAILS t1 
			INNER JOIN PERSON_ENTITY t2 ON t2.PERSON_ENTITY_ID = t1.PERSON_ENTITY_ID 
			INNER JOIN ENTITY t3 ON t3.ENTITY_NUMBER = t2.ENTITY_NUMBER 
			WHERE t1.DISCLOSURE_ID = AV_DISCLOSURE_ID AND t2.ENTITY_ID = t3.ENTITY_ID AND t3.IS_ACTIVE = 'N' AND t3.VERSION_STATUS = 'ACTIVE';
    
			SET LS_ERROR_MSG = "You have Active SFI (s) in your SFI list against Inactive Entity (s). Kindly inactivate the SFI to proceed and certify the disclosure.";
			INSERT INTO ERROR_MESSAGE (MESSAGE, SFIs) VALUES (LS_ERROR_MSG, LS_SFI_LIST);
            
	END IF; 
    */

  SELECT MESSAGE, SFIs, PROJ_SFI_DETAILS FROM ERROR_MESSAGE;
  
  DROP TEMPORARY TABLE IF EXISTS ERROR_MESSAGE;
  
END
//
