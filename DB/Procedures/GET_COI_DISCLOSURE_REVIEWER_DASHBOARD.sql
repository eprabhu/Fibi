DELIMITER //
CREATE PROCEDURE `GET_COI_DISCLOSURE_REVIEWER_DASHBOARD`(
		AV_DISCLOSURE_NUMBER                VARCHAR(20),
		AV_DISCLOSURE_PERSON_ID         VARCHAR(40),
		AV_HOME_UNIT                    VARCHAR(8),
		AV_CONFLICT_STATUS_CODE       	VARCHAR(30),
		AV_DISCLOSURE_TYPE_CODE       VARCHAR(30),
		AV_START_DATE                   VARCHAR(30),
		AV_END_DATE                     VARCHAR(30),
		AV_ENTITY_NAME                  VARCHAR(90),
		AV_ENTITY_COUNTRY               VARCHAR(3),
        AV_SORT_TYPE                    VARCHAR(500),
        AV_PAGED                        INT(10),
        AV_LIMIT                        INT(10),
        AV_TAB_TYPE                     VARCHAR(30),
        AV_UNLIMITED                    BOOLEAN,
        AV_TYPE                         VARCHAR(1),
        AV_PERSON_ID                    VARCHAR(200),
        AV_DISPOSITION_STATUS_CODE      VARCHAR(30),
		AV_REVIEW_STATUS_CODE       	VARCHAR(30)
)
BEGIN
DECLARE LS_DYN_SQL LONGTEXT;
DECLARE LS_FILTER_CONDITION LONGTEXT;
DECLARE LS_OFFSET_CONDITION VARCHAR(600);
DECLARE LS_OFFSET INT(11);
DECLARE TAB_QUERY LONGTEXT;
DECLARE JOIN_CONDITION LONGTEXT;
DECLARE SELECTED_FIELD_LIST LONGTEXT;
DECLARE LS_ADMIN_GROUP_CONDITION LONGTEXT;

SET LS_OFFSET = (AV_LIMIT * AV_PAGED);
SET LS_FILTER_CONDITION ='';
SET LS_DYN_SQL ='';
SET JOIN_CONDITION = '';
SET SELECTED_FIELD_LIST= '';
SET TAB_QUERY = '';

                                         
IF AV_TAB_TYPE = 'NEW_SUBMISSIONS' THEN

		SET TAB_QUERY = CONCAT(' AND REVIEW_STATUS_TYPE_CODE = 1 ');
ELSEIF AV_TAB_TYPE = 'MY_REVIEWS' THEN

        SET TAB_QUERY = CONCAT(' AND REVIEW_STATUS_TYPE_CODE = 2 ');
ELSEIF AV_TAB_TYPE = 'REVIEW_HISTORY' THEN

        SET TAB_QUERY = CONCAT(' AND REVIEW_STATUS_TYPE_CODE = 3 ');
END IF; 

END IF;

IF AV_TYPE ='A' THEN
				IF AV_DISCLOSURE_NUMBER IS NOT NULL AND AV_DISCLOSURE_NUMBER <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.DISCLOSURE_NUMBER = ''',AV_DISCLOSURE_NUMBER,''' AND ');

				END IF;
                
                IF AV_DISCLOSURE_PERSON_ID IS NOT NULL AND AV_DISCLOSURE_PERSON_ID <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.PERSON_ID = ''',AV_DISCLOSURE_PERSON_ID,''' AND ');

				END IF;

				IF AV_HOME_UNIT IS NOT NULL AND AV_HOME_UNIT <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.HOME_UNIT = ''',AV_HOME_UNIT,''' AND ');

				END IF;

				IF AV_DISCLOSURE_TYPE_CODE IS NOT NULL  AND AV_DISCLOSURE_TYPE_CODE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.FCOI_TYPE_CODE IN (',AV_DISCLOSURE_TYPE_CODE,') AND ');
				  
				END IF;
                
                IF AV_DISPOSITION_STATUS_CODE IS NOT NULL  AND AV_DISPOSITION_STATUS_CODE <> '' THEN
					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.DISPOSITION_STATUS_CODE IN (',AV_DISPOSITION_STATUS_CODE,') AND ');
				END IF;
                
				IF AV_CONFLICT_STATUS_CODE IS NOT NULL  AND AV_CONFLICT_STATUS_CODE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.CONFLICT_STATUS_CODE IN (',AV_CONFLICT_STATUS_CODE,') AND ');
				  
				END IF;

                IF AV_REVIEW_STATUS_CODE IS NOT NULL  AND AV_REVIEW_STATUS_CODE <> '' THEN
					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.REVIEW_STATUS_CODE IN (',AV_REVIEW_STATUS_CODE,') AND ');
				END IF;

				IF AV_START_DATE IS NOT NULL AND AV_START_DATE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' DATE(T.CREATE_TIMESTAMP) > ''', STR_TO_DATE(AV_START_DATE,'%Y-%m-%d'),''' AND ');
				  
				END IF;

				 IF AV_END_DATE IS NOT NULL AND AV_END_DATE <> '' THEN

					 SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' DATE(T.EXPIRATION_DATE) <=''', STR_TO_DATE(AV_END_DATE,'%Y-%m-%d'),''' AND ');
				  
				 END IF;
				 
				IF AV_ENTITY_NAME IS NOT NULL  AND AV_ENTITY_NAME <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.ENTITY_NAMES LIKE ''%',AV_ENTITY_NAME, '%'' AND ');

				END IF;


END IF;


IF AV_SORT_TYPE IS NULL THEN
        SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
ELSE
    SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
END IF;

IF AV_UNLIMITED = TRUE THEN
        SET LS_OFFSET_CONDITION = '';
ELSE
        SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);
END IF;

IF LS_FILTER_CONDITION <>'' THEN
        SET LS_FILTER_CONDITION = CONCAT(' WHERE ',LS_FILTER_CONDITION);
        SELECT TRIM(TRAILING 'AND ' FROM LS_FILTER_CONDITION) into LS_FILTER_CONDITION from dual;
END IF;
        
        SET LS_DYN_SQL = CONCAT('SELECT DISTINCT *  FROM(SELECT DISTINCT
										T1.DISCLOSURE_ID,
										T1.DISCLOSURE_NUMBER,
										T1.VERSION_NUMBER,
										T1.PERSON_ID,
										T1.FCOI_TYPE_CODE,
										T7.FULL_NAME AS DISCLOSURE_PERSON_NAME,
										T7.HOME_UNIT,
                                        T1.VERSION_STATUS,
                                        T1.DISPOSITION_STATUS_CODE,
										T3.DESCRIPTION AS DISPOSITION_STATUS,
                                        T1.REVIEW_STATUS_CODE,
										T4.DESCRIPTION AS REVIEW_STATUS,
										T1.CREATE_TIMESTAMP,
										T1.CERTIFICATION_TEXT, 
										T1.CERTIFIED_AT,
										T6.FULL_NAME AS UPDATE_USER_FULL_NAME,
										T1.UPDATE_TIMESTAMP,
                                        T11.VERSION_NUMBER AS LAST_APPROVED_VERSION,
										T11.UPDATE_TIMESTAMP AS LAST_APPROVED_DATE,
										CASE WHEN (T12.DISCLOSURE_ID IS NOT NULL) THEN "YES" ELSE "NO" END AS HAS_SFI_FLAG,
										T13.ENTITY_NAMES,
										T13.ENTITY_COUNTRIES,
                                        T1.REVISION_COMMENT',SELECTED_FIELD_LIST,'
										FROM COI_DISCLOSURE T1 
										LEFT JOIN COI_CONFLICT_STATUS_TYPE T2 ON T2.CONFLICT_STATUS_CODE=T1.CONFLICT_STATUS_CODE
										LEFT JOIN COI_DISPOSITION_STATUS_TYPE T3 ON T3.DISPOSITION_STATUS_CODE = T1.DISPOSITION_STATUS_CODE
										LEFT JOIN COI_REVIEW_STATUS_TYPE T4 ON T4.REVIEW_STATUS_CODE = T1.REVIEW_STATUS_CODE
										LEFT JOIN PERSON T6 ON T6.USER_NAME = T1.UPDATE_USER 
										LEFT JOIN PERSON T7 ON T7.PERSON_ID = T1.PERSON_ID 
                                        LEFT JOIN (SELECT DISCLOSURE_NUMBER, VERSION_NUMBER, UPDATE_TIMESTAMP FROM COI_DISCLOSURE 
													WHERE (DISCLOSURE_NUMBER, VERSION_NUMBER) IN 
															(SELECT S1.DISCLOSURE_NUMBER, MAX(S1.VERSION_NUMBER) FROM COI_DISCLOSURE S1
															 WHERE S1.VERSION_STATUS = ''3''
															 group by S1.DISCLOSURE_NUMBER)) T11 ON T11.DISCLOSURE_NUMBER = T1.DISCLOSURE_NUMBER            
										LEFT JOIN (SELECT T1.DISCLOSURE_ID FROM COI_DISCLOSURE T1 
													INNER JOIN COI_DISCL_ENT_PROJ_DETAILS T2 ON T2.DISCLOSURE_ID = T1.DISCLOSURE_ID 
													GROUP BY T1.DISCLOSURE_ID) T12 ON T12.DISCLOSURE_ID = T1.DISCLOSURE_ID 
										LEFT JOIN (SELECT T1.DISCLOSURE_ID,GROUP_CONCAT(DISTINCT(T4.ENTITY_NAME) SEPARATOR ", ") AS ENTITY_NAMES, 
													GROUP_CONCAT(DISTINCT(T4.COUNTRY_CODE) SEPARATOR ",") AS ENTITY_COUNTRIES FROM COI_DISCLOSURE T1 
													INNER JOIN COI_DISCL_ENT_PROJ_DETAILS T2 ON T2.DISCLOSURE_ID = T1.DISCLOSURE_ID 
													INNER JOIN PERSON_ENTITY T3 ON T3.PERSON_ENTITY_ID = T2.PERSON_ENTITY_ID 
													INNER JOIN ENTITY T4 ON T4.ENTITY_ID = T3.ENTITY_ID 
													GROUP BY T1.DISCLOSURE_ID) T13 ON T13.DISCLOSURE_ID = T1.DISCLOSURE_ID 
										LEFT JOIN COI_REVIEW T17 ON T17.DISCLOSURE_ID = T1.DISCLOSURE_ID ', 
										JOIN_CONDITION, ' WHERE T17.ASSIGNEE_PERSON_ID = ',AV_PERSON_ID, TAB_QUERY, 
                                        ' GROUP BY T1.DISCLOSURE_ID) T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);

SET @QUERY_STATEMENT = LS_DYN_SQL;
PREPARE EXECUTABLE_STAEMENT FROM @QUERY_STATEMENT;
EXECUTE EXECUTABLE_STAEMENT;

END
//