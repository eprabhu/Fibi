/*
-- Sprint : Fibi-COI
1) Exclude the database name from the script.
2) Order of the script needs to be correct.
3) If there is any timestamp in script use 'now()'.
4) If there is an update script. Check if there is an insert script also in the bundle.
5) If there is a create table and alter script for a table. Remove the alter script and update the create table script.
6) Check if the syntax is correct for all scripts. Add semicolon at the end of scripts. If there is any string data put it in quotes.
*/

SET FOREIGN_KEY_CHECKS=0; 

DROP TABLE IF EXISTS `ENTITY_TYPE` ;
DROP TABLE IF EXISTS `ENTITY_STATUS`;
DROP TABLE IF EXISTS `COI_ENTITY`;
DROP TABLE IF EXISTS `ENTITY_SPONSOR_RELATIONSHIP`; 
DROP TABLE IF EXISTS `ENTITY_ORG_RELATIONSHIP`;
DROP TABLE IF EXISTS `COI_FIN_ENTITY_REL_TYPE`;
DROP TABLE IF EXISTS `COI_FINANCIAL_ENTITY`; 
DROP TABLE IF EXISTS `COI_FIN_ENTITY_DETAILS`;
DROP TABLE IF EXISTS  `COI_DISCLOSURE_CATEGORY_TYPE`; 
DROP TABLE IF EXISTS `COI_DISCLOSURE_STATUS`;
DROP TABLE IF EXISTS `COI_DISPOSITION_STATUS`;
DROP TABLE IF EXISTS `COI_REVIEW_STATUS`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_SEQUENCE_STATUS`;
DROP TABLE IF EXISTS `COI_DISCLOSURE`;
DROP TABLE IF EXISTS `COI_DISC_COMMENT_TYPE`;
DROP TABLE IF EXISTS `COI_DISC_DET_STATUS`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_DETAILS`;
DROP TABLE IF EXISTS `COI_DISC_DETAILS_COMMENTS`;
DROP TABLE IF EXISTS `COI_AUDIT_ACTION_TYPE`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_AUDIT_TRAIL`;
DROP TABLE IF EXISTS `COI_ATTACHMENT_TYPE`;
DROP TABLE IF EXISTS `COI_ATTACHMENT_CATEGORY_TYPE`;
DROP TABLE IF EXISTS `COI_ATTA_CATE_TYPE_MAPPING`;
DROP TABLE IF EXISTS `COI_FILE_DATA`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_ATTACHMENTS`;

DROP TABLE IF EXISTS `entity_type`;
CREATE TABLE `entity_type` (
  `ENTITY_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_TYPE_CODE`)
);

DROP TABLE IF EXISTS `entity_status`;
CREATE TABLE `entity_status` (
  `ENTITY_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_STATUS_CODE`)
);

DROP TABLE IF EXISTS `entity_risk_category`;
CREATE TABLE `entity_risk_category` (
  `RISK_CATEGORY_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(45) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `entity`;
CREATE TABLE `entity` (
  `ENTITY_ID` int(11) NOT NULL AUTO_INCREMENT,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `ENTITY_NAME` varchar(90) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `ENTITY_STATUS_CODE` varchar(3) DEFAULT NULL,
  `ENTITY_TYPE_CODE` varchar(3) DEFAULT NULL,
  `RISK_CATEGORY_CODE` varchar(3) DEFAULT NULL,
  `PHONE` varchar(45) DEFAULT NULL,
  `COUNTRY_CODE` varchar(3) DEFAULT NULL,
  `CITY` varchar(90) DEFAULT NULL,
  `ADDRESS` varchar(2000) DEFAULT NULL,
  `ZIP_CODE` varchar(15) DEFAULT NULL,
  `EMAIL_ADDRESS` varchar(60) DEFAULT NULL,
  `WEB_URL` varchar(2000) DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `APPROVED_USER` varchar(60) DEFAULT NULL,
  `APPROVED_TIMESTAMP` datetime DEFAULT NULL,
  `REVISION_REASON` VARCHAR(100) NULL,
  PRIMARY KEY (`ENTITY_ID`),
  KEY `ENTITY_FK1_idx` (`ENTITY_STATUS_CODE`),
  KEY `ENTITY_FK2_idx` (`ENTITY_TYPE_CODE`),
  KEY `ENTITY_FK3_idx` (`COUNTRY_CODE`),
  KEY `ENTITY_FK5_idx` (`RISK_CATEGORY_CODE`),
  CONSTRAINT `ENTITY1_FK1` FOREIGN KEY (`ENTITY_STATUS_CODE`) REFERENCES `entity_status` (`ENTITY_STATUS_CODE`),
  CONSTRAINT `ENTITY1_FK2` FOREIGN KEY (`ENTITY_TYPE_CODE`) REFERENCES `entity_type` (`ENTITY_TYPE_CODE`),
  CONSTRAINT `ENTITY1_FK3` FOREIGN KEY (`COUNTRY_CODE`) REFERENCES `country` (`COUNTRY_CODE`),
  CONSTRAINT `ENTITY1_FK5` FOREIGN KEY (`RISK_CATEGORY_CODE`) REFERENCES `entity_risk_category` (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `entity_relationship_type`;
CREATE TABLE `entity_relationship_type` (
  `ENTITY_REL_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_REL_TYPE_CODE`)
);

DROP TABLE IF EXISTS `entity_rel_node_type`;
CREATE TABLE `entity_rel_node_type` (
  `REL_NODE_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`REL_NODE_TYPE_CODE`)
);

DROP TABLE IF EXISTS `entity_relationship`;
CREATE TABLE `entity_relationship` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ENTITY_NUMBER` int(11) NOT NULL,
  `NODE_TYPE_CODE` varchar(3) DEFAULT NULL,
  `NODE_ID` int(11) DEFAULT NULL,
  `ENTITY_REL_TYPE_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `ENITY_RELATIONSHIP_FK1_idx` (`ENTITY_REL_TYPE_CODE`),
  KEY `ENITY_RELATIONSHIP_FK2_idx` (`NODE_TYPE_CODE`),
  CONSTRAINT `ENITY_RELATIONSHIP_FK1` FOREIGN KEY (`ENTITY_REL_TYPE_CODE`) REFERENCES `entity_relationship_type` (`ENTITY_REL_TYPE_CODE`),
  CONSTRAINT `ENITY_RELATIONSHIP_FK2` FOREIGN KEY (`NODE_TYPE_CODE`) REFERENCES `entity_rel_node_type` (`REL_NODE_TYPE_CODE`)
);

DROP TABLE IF EXISTS `person_entity`;
CREATE TABLE `person_entity` (
  `PERSON_ENTITY_ID` int(11) NOT NULL AUTO_INCREMENT,
  `PERSON_ID` varchar(45) DEFAULT NULL,
  `ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `IS_RELATIONSHIP_ACTIVE` varchar(1) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `SPONSORS_RESEARCH` varchar(1) DEFAULT NULL,
  `INVOLVEMENT_START_DATE` date DEFAULT NULL,
  `INVOLVEMENT_END_DATE` date DEFAULT NULL,
  `STUDENT_INVOLVEMENT` varchar(4000) DEFAULT NULL,
  `STAFF_INVOLVEMENT` varchar(4000) DEFAULT NULL,
  `INSTITUTE_RESOURCE_INVOLVEMENT` varchar(4000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `PERSON_ENTITY_NUMBER` INT NULL,
  `REVISION_REASON` VARCHAR(100) NULL,
  PRIMARY KEY (`PERSON_ENTITY_ID`),
  KEY `PERSON_ENTITY_FK1_idx` (`PERSON_ID`),
  KEY `PERSON_ENTITY_FK2_idx` (`ENTITY_ID`),
  CONSTRAINT `PERSON_ENTITY_FK1` FOREIGN KEY (`PERSON_ID`) REFERENCES `person` (`PERSON_ID`),
  CONSTRAINT `PERSON_ENTITY_FK2` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`)
);

DROP TABLE IF EXISTS `coi_disclosure_type`;
CREATE TABLE `coi_disclosure_type` (
  `DISCLOSURE_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`DISCLOSURE_TYPE_CODE`)
);

DROP TABLE IF EXISTS `person_entity_rel_type`;
CREATE TABLE `person_entity_rel_type` (
  `RELATIONSHIP_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`RELATIONSHIP_TYPE_CODE`)
);

DROP TABLE IF EXISTS `valid_person_entity_rel_type`;
CREATE TABLE `valid_person_entity_rel_type` (
  `VALID_PERS_ENTITY_REL_TYP_CODE` int(11) NOT NULL AUTO_INCREMENT,
  `DISCLOSURE_TYPE_CODE` varchar(3) DEFAULT NULL,
  `RELATIONSHIP_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `QUESTIONNAIRE_NUMBER` int(11) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`VALID_PERSON_ENTITY_REL_TYPE_CODE`),
  KEY `VALID_PERSON_ENTITY_REL_TYPE_FK1_idx` (`DISCLOSURE_TYPE_CODE`),
  KEY `VALID_PERSON_ENTITY_REL_TYPE_FK2_idx` (`RELATIONSHIP_TYPE_CODE`),
  CONSTRAINT `VALID_PERSON_ENTITY_REL_TYPE_FK1` FOREIGN KEY (`DISCLOSURE_TYPE_CODE`) REFERENCES `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`),
  CONSTRAINT `VALID_PERSON_ENTITY_REL_TYPE_FK2` FOREIGN KEY (`RELATIONSHIP_TYPE_CODE`) REFERENCES `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`)
);

DROP TABLE IF EXISTS `person_entity_relationship`;
CREATE TABLE `person_entity_relationship` (
  `PERSON_ENTITY_REL_ID` int(11) NOT NULL AUTO_INCREMENT,
  `PERSON_ENTITY_ID` int(11) DEFAULT NULL,
  `VALID_PERS_ENTITY_REL_TYP_CODE` int(11) DEFAULT NULL,
  `QUESTIONNAIRE_ANS_HEADER_ID` int(11) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `START_DATE` date DEFAULT NULL,
  `END_DATE` date DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`PERSON_ENTITY_REL_ID`),
  KEY `PERSON_ENTITY_RELATIONSHIP_FK1_idx` (`PERSON_ENTITY_ID`),
  KEY `PERSON_ENTITY_RELATIONSHIP_FK2_idx` (`VALID_PERS_ENTITY_REL_TYP_CODE`),
  CONSTRAINT `PERSON_ENTITY_RELATIONSHIP_FK1` FOREIGN KEY (`PERSON_ENTITY_ID`) REFERENCES `person_entity` (`PERSON_ENTITY_ID`),
  CONSTRAINT `PERSON_ENTITY_RELATIONSHIP_FK2` FOREIGN KEY (`VALID_PERS_ENTITY_REL_TYP_CODE`) REFERENCES `valid_person_entity_rel_type` (`VALID_PERS_ENTITY_REL_TYP_CODE`)
);

DROP TABLE IF EXISTS `coi_project_type`;
CREATE TABLE `coi_project_type` (
  `COI_PROJECT_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COI_PROJECT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_project_proposal`;
CREATE TABLE `coi_project_proposal` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `EXTERNAL_SYSTEM_REF_ID` int(11) DEFAULT NULL,
  `COI_PROJECT_TYPE_CODE` varchar(3) DEFAULT NULL,
  `PROPOSAL_NUMBER` varchar(45) DEFAULT NULL,
  `TITLE` varchar(2000) DEFAULT NULL,
  `PI_PERSON_ID` varchar(45) DEFAULT NULL,
  `PI_NAME` varchar(60) DEFAULT NULL,
  `KEY_PERSON_ID` varchar(45) DEFAULT NULL,
  `KEY_PERSON_NAME` varchar(60) DEFAULT NULL,
  `KEY_PERSON_ROLE_CODE` int(11) DEFAULT NULL,
  `SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `PRIME_SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `PROPOSAL_START_DATE` date DEFAULT NULL,
  `PROPOSAL_END_DATE` date DEFAULT NULL,
  `LEAD_UNIT_NAME` varchar(45) DEFAULT NULL,
  `FED_AT` datetime DEFAULT NULL,
  `coi_project_proposalcol` varchar(45) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `COI_PROJECT_PROPOSAL_FK1_idx` (`COI_PROJECT_TYPE_CODE`),
  CONSTRAINT `COI_PROJECT_PROPOSAL_FK1` FOREIGN KEY (`COI_PROJECT_TYPE_CODE`) REFERENCES `coi_project_type` (`COI_PROJECT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_project_award`;
CREATE TABLE `coi_project_award` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `EXTERNAL_SYSTEM_REF_ID` int(11) DEFAULT NULL,
  `COI_PROJECT_TYPE_CODE` varchar(3) DEFAULT NULL,
  `AWARD_NUMBER` varchar(45) DEFAULT NULL,
  `ACCOUNT_NUMBER` varchar(100) DEFAULT NULL,
  `TITLE` varchar(2000) DEFAULT NULL,
  `PI_PERSON_ID` varchar(45) DEFAULT NULL,
  `PI_NAME` varchar(60) DEFAULT NULL,
  `KEY_PERSON_ID` varchar(45) DEFAULT NULL,
  `KEY_PERSON_NAME` varchar(60) DEFAULT NULL,
  `KEY_PERSON_ROLE_CODE` int(11) DEFAULT NULL,
  `SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `SPONSOR_AWARD_NUMBER` varchar(70) DEFAULT NULL,
  `PRIME_SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `AWARD_START_DATE` date DEFAULT NULL,
  `AWARD_END_DATE` date DEFAULT NULL,
  `LEAD_UNIT_NAME` varchar(45) DEFAULT NULL,
  `FED_AT` datetime DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `PROJECT_ROLE` VARCHAR(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `COI_PROJECT_AWARD_FK1_idx` (`COI_PROJECT_TYPE_CODE`),
  CONSTRAINT `COI_PROJECT_AWARD_FK1` FOREIGN KEY (`COI_PROJECT_TYPE_CODE`) REFERENCES `coi_project_type` (`COI_PROJECT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_disclosure_fcoi_type`;
CREATE TABLE `coi_disclosure_fcoi_type` (
  `FCOI_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`FCOI_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_conflict_status_type`;
CREATE TABLE `coi_conflict_status_type` (
  `CONFLICT_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`CONFLICT_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_disposition_status_type`;
CREATE TABLE `coi_disposition_status_type` (
  `DISPOSITION_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`DISPOSITION_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_review_status_type`;
CREATE TABLE `coi_review_status_type` (
  `REVIEW_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`REVIEW_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_risk_category`;
CREATE TABLE `coi_risk_category` (
  `RISK_CATEGORY_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `coi_disclosure`;
CREATE TABLE `coi_disclosure` (
  `DISCLOSURE_ID` int(11) NOT NULL AUTO_INCREMENT,
  `PERSON_ID` varchar(45) DEFAULT NULL,
  `DISCLOSURE_NUMBER` int(11) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `FCOI_TYPE_CODE` varchar(3) DEFAULT NULL,
  `CONFLICT_STATUS_CODE` varchar(3) DEFAULT NULL,
  `DISPOSITION_STATUS_CODE` varchar(3) DEFAULT NULL,
  `REVIEW_STATUS_CODE` varchar(3) DEFAULT NULL,
  `RISK_CATEGORY_CODE` varchar(3) DEFAULT NULL,
  `MODULE_CODE` int(11) DEFAULT NULL,
  `MODULE_ITEM_KEY` varchar(20) DEFAULT NULL,
  `EXPIRATION_DATE` date DEFAULT NULL,
  `CERTIFICATION_TEXT` varchar(1000) DEFAULT NULL,
  `CERTIFIED_BY` varchar(60) DEFAULT NULL,
  `CERTIFIED_AT` datetime DEFAULT NULL,
  `REVISION_COMMENT` varchar(1000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `HOME_UNIT` VARCHAR(8) DEFAULT NULL,
  `ADMIN_GROUP_ID` INT(3) NULL,
  `ADMIN_PERSON_ID` VARCHAR(45) NULL,
  PRIMARY KEY (`DISCLOSURE_ID`),
  KEY `COI_DISCLOSURE1_FK1_idx` (`PERSON_ID`),
  KEY `COI_DISCLOSURE1_FK2_idx` (`FCOI_TYPE_CODE`),
  KEY `COI_DISCLOSURE1_FK3_idx` (`CONFLICT_STATUS_CODE`),
  KEY `COI_DISCLOSURE1_FK4_idx` (`DISPOSITION_STATUS_CODE`),
  KEY `COI_DISCLOSURE1_FK5_idx` (`REVIEW_STATUS_CODE`),
  KEY `COI_DISCLOSURE1_FK6_idx` (`RISK_CATEGORY_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK1` FOREIGN KEY (`PERSON_ID`) REFERENCES `person` (`PERSON_ID`),
  CONSTRAINT `COI_DISCLOSURE1_FK2` FOREIGN KEY (`FCOI_TYPE_CODE`) REFERENCES `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK3` FOREIGN KEY (`CONFLICT_STATUS_CODE`) REFERENCES `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK4` FOREIGN KEY (`DISPOSITION_STATUS_CODE`) REFERENCES `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK5` FOREIGN KEY (`REVIEW_STATUS_CODE`) REFERENCES `coi_review_status_type` (`REVIEW_STATUS_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK6` FOREIGN KEY (`RISK_CATEGORY_CODE`) REFERENCES `coi_risk_category` (`RISK_CATEGORY_CODE`),
  CONSTRAINT `COI_DIS_HOME_UNIT_FK7` FOREIGN KEY (`HOME_UNIT`) REFERENCES `unit` (`UNIT_NUMBER`) 
);

DROP TABLE IF EXISTS `coi_proj_conflict_status_type`;
CREATE TABLE `coi_proj_conflict_status_type` (
  `PROJECT_CONFLICT_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`PROJECT_CONFLICT_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_discl_ent_proj_details`;
CREATE TABLE `coi_discl_ent_proj_details` (
  `DISCLOSURE_DETAILS_ID` int(11) NOT NULL AUTO_INCREMENT,
  `DISCLOSURE_ID` int(11) DEFAULT NULL,
  `DISCLOSURE_NUMBER` varchar(45) DEFAULT NULL,
  `PERSON_ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `MODULE_CODE` int(11) DEFAULT NULL,
  `MODULE_ITEM_KEY` varchar(20) DEFAULT NULL,
  `PROJECT_CONFLICT_STATUS_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`DISCLOSURE_DETAILS_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK1_idx` (`DISCLOSURE_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK2_idx` (`PERSON_ENTITY_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK3_idx` (`ENTITY_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK4_idx` (`PROJECT_CONFLICT_STATUS_CODE`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK1` FOREIGN KEY (`DISCLOSURE_ID`) REFERENCES `coi_disclosure` (`DISCLOSURE_ID`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK2` FOREIGN KEY (`PERSON_ENTITY_ID`) REFERENCES `person_entity` (`PERSON_ENTITY_ID`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK3` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK4` FOREIGN KEY (`PROJECT_CONFLICT_STATUS_CODE`) REFERENCES `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`)
);

DROP TABLE IF EXISTS `discl_atta_status`;
CREATE TABLE `discl_atta_status` (
  `ATTA_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ATTA_STATUS_CODE`)
);

DROP TABLE IF EXISTS `discl_file_data`;
CREATE TABLE `discl_file_data` (
  `FILE_DATA_ID` int(11) NOT NULL AUTO_INCREMENT,
  `FILE_PATH` varchar(255) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`FILE_DATA_ID`)
);

DROP TABLE IF EXISTS `discl_atta_type`;
CREATE TABLE `discl_atta_type` (
  `ATTA_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ATTA_TYPE_CODE`)
);

DROP TABLE IF EXISTS `discl_component_type`;
CREATE TABLE `discl_component_type` (
  `COMPONENT_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COMPONENT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `discl_valid_compnent_atta_ty`;
CREATE TABLE `discl_valid_compnent_atta_ty` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMPONENT_TYPE_CODE` varchar(3) DEFAULT NULL,
  `ATTA_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `DISCL_VALID_COMPONENT_ATTA_TYPE_FK1_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_VALID_COMPONENT_ATTA_TYPE_FK2_idx` (`ATTA_TYPE_CODE`),
  CONSTRAINT `DISCL_VALID_COMPONENT_ATTA_TYPE_FK1` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `DISCL_VALID_COMPONENT_ATTA_TYPE_FK2` FOREIGN KEY (`ATTA_TYPE_CODE`) REFERENCES `discl_atta_type` (`ATTA_TYPE_CODE`) ON DELETE RESTRICT ON UPDATE RESTRICT
);

DROP TABLE IF EXISTS `discl_comment_type`;
CREATE TABLE `discl_comment_type` (
  `COMMENT_TYPE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(2000) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COMMENT_TYPE`)
);

DROP TABLE IF EXISTS `discl_valid_compnent_comnt_ty`;
CREATE TABLE `discl_valid_compnent_comnt_ty` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMPONENT_TYPE_CODE` varchar(1) DEFAULT NULL,
  `COMMENT_TYPE` varchar(1) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `DISCL_VALID_CMPNENT_COMNT_TY_FK1_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_VALID_CMPNENT_COMNT_TY_FK2_idx` (`COMMENT_TYPE`),
  CONSTRAINT `DISCL_VALID_CMPNENT_COMNT_TY_FK1` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`),
  CONSTRAINT `DISCL_VALID_CMPNENT_COMNT_TY_FK2` FOREIGN KEY (`COMMENT_TYPE`) REFERENCES `discl_comment_type` (`COMMENT_TYPE`)
);

DROP TABLE IF EXISTS `discl_comment`;
CREATE TABLE `discl_comment` (
  `COMMENT_ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMPONENT_TYPE_CODE` varchar(1) DEFAULT NULL,
  `COMPONENT_REFERENCE_ID` int(11) DEFAULT NULL,
  `COMPONENT_REFERENCE_NUMBER` varchar(45) DEFAULT NULL,
  `COMPONENT_SUB_REFERENCE_ID` int(11) DEFAULT NULL,
  `COMMENT_TYPE` varchar(1) DEFAULT NULL,
  `COMMENT_BY_PERSON_ID` varchar(45) DEFAULT NULL,
  `DOCUMENT_OWNER_PERSON_ID` varchar(45) DEFAULT NULL,
  `IS_PRIVATE` varchar(1) DEFAULT NULL,
  `COMMENT` varchar(4000) DEFAULT NULL,
  `PARENT_COMMENT_ID` int(11) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COMMENT_ID`),
  KEY `DISCL_COMMENT_FK1_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_COMMENT_FK2_idx` (`COMMENT_TYPE`),
  CONSTRAINT `DISCL_COMMENT_FK1` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`),
  CONSTRAINT `DISCL_COMMENT_FK2` FOREIGN KEY (`COMMENT_TYPE`) REFERENCES `discl_comment_type` (`COMMENT_TYPE`)
);

DROP TABLE IF EXISTS `COI_TRAVELER`;
CREATE TABLE `COI_TRAVELER` (
  `TRAVELER_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`TRAVELER_TYPE_CODE`)
);

DROP TABLE IF EXISTS `COI_TRAVEL_STATUS`;
CREATE TABLE `COI_TRAVEL_STATUS` (
  `TRAVEL_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`TRAVEL_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_travel_disclosure`;
CREATE TABLE `coi_travel_disclosure` (
  `TRAVEL_DISCLOSURE_ID` int(11) NOT NULL AUTO_INCREMENT,
  `TRAVEL_NUMBER` int(11) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `PERSON_ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `PERSON_ID` varchar(45) DEFAULT NULL,
  `TRAVEL_STATUS_CODE` varchar(3) DEFAULT NULL,
  `IS_SPONSORED_TRAVEL` varchar(1) DEFAULT NULL,
  `TRAVEL_TITLE` varchar(200) DEFAULT NULL,
  `PURPOSE_OF_THE_TRIP` varchar(500) DEFAULT NULL,
  `TRAVEL_AMOUNT` decimal(12,2) DEFAULT NULL,
  `TRAVEL_START_DATE` date DEFAULT NULL,
  `NO_OF_DAYS` int(11) DEFAULT NULL,
  `DESTINATION_CITY` varchar(90) DEFAULT NULL,
  `DESTINATION_COUNTRY` varchar(45) DEFAULT NULL,
  `RELATIONSHIP_TO_YOUR_RESEARCH` varchar(500) DEFAULT NULL,
  `ACKNOWLEDGE_BY` varchar(60) DEFAULT NULL,
  `ACKNOWLEDGE_AT` TIMESTAMP DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `TRAVEL_END_DATE` date DEFAULT NULL,
  `STATE` varchar(60) DEFAULT NULL,
  `IS_INTERNATIONAL_TRAVEL` varchar(1) DEFAULT NULL,
  `SUBMISSION_DATE` DATE,
  `DESCRIPTION` varchar(2000),
  `HOME_UNIT` varchar(2000),
  `REVIEW_STATUS_CODE` varchar(3),
  `EXPIRATION_DATE` DATE,
  `TRAVEL_DISCLOSURE_STATUS_CODE` varchar(3),
  `DISPOSITION_STATUS_CODE` varchar(2000),
  `ADMIN_GROUP_ID` INT(3) NULL,
  `ADMIN_PERSON_ID` VARCHAR(45) NULL,
  `CERTIFIED_BY` VARCHAR(45) NULL,
  `CERTIFIED_AT` datetime NULL,
  `DOCUMENT_STATUS_CODE` varchar(3),
  `RISK_CATEGORY_CODE` VARCHAR(3) DEFAULT NULL,
  PRIMARY KEY (`TRAVEL_DISCLOSURE_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK1_idx` (`PERSON_ENTITY_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK2_idx` (`ENTITY_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK3_idx` (`PERSON_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK4_idx` (`TRAVEL_STATUS_CODE`),
  KEY `COI_TRAVEL_DISCLOSURE_FK5_idx` (`RISK_CATEGORY_CODE`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK1` FOREIGN KEY (`PERSON_ENTITY_ID`) REFERENCES `person_entity` (`PERSON_ENTITY_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK2` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK3` FOREIGN KEY (`PERSON_ID`) REFERENCES `person` (`PERSON_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK4` FOREIGN KEY (`TRAVEL_STATUS_CODE`) REFERENCES `COI_TRAVEL_STATUS` (`TRAVEL_STATUS_CODE`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK5` FOREIGN KEY (`RISK_CATEGORY_CODE`) REFERENCES `coi_risk_category` (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `coi_travel_disclosure_traveler`;
CREATE TABLE `coi_travel_disclosure_traveler` (
  `TRAVEL_TRAVELER_ID` int(11) NOT NULL AUTO_INCREMENT,
  `TRAVEL_DISCLOSURE_ID` int(11) DEFAULT NULL,
  `TRAVELER_TYPE_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`TRAVEL_TRAVELER_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_TRAVELER_FK1_idx` (`TRAVEL_DISCLOSURE_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_TRAVELER_FK2_idx` (`TRAVELER_TYPE_CODE`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_TRAVELER_FK1` FOREIGN KEY (`TRAVEL_DISCLOSURE_ID`) REFERENCES `coi_travel_disclosure` (`TRAVEL_DISCLOSURE_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_TRAVELER_FK2` FOREIGN KEY (`TRAVELER_TYPE_CODE`) REFERENCES `COI_TRAVELER` (`TRAVELER_TYPE_CODE`)
);

DROP TABLE IF EXISTS `discl_attachment`;
CREATE TABLE `discl_attachment` (
  `ATTACHMENT_ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMMENT_ID` int(11) DEFAULT NULL,
  `COMPONENT_TYPE_CODE` varchar(1) DEFAULT NULL,
  `COMPONENT_REFERENCE_ID` int(11) DEFAULT NULL,
  `COMPONENT_REFERENCE_NUMBER` varchar(45) DEFAULT NULL,
  `ATTACHMENT_NUMBER` int(11) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `ATTA_TYPE_CODE` varchar(1) DEFAULT NULL,
  `ATTA_STATUS_CODE` varchar(1) DEFAULT NULL,
  `DOCUMENT_OWNER_PERSON_ID` varchar(45) DEFAULT NULL,
  `FILE_NAME` varchar(45) DEFAULT NULL,
  `MIME_TYPE` varchar(255) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `FILE_DATA_ID` int(11) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ATTACHMENT_ID`),
  KEY `DISCL_ATTACHMENT_FK1_idx` (`COMMENT_ID`),
  KEY `DISCL_ATTACHMENT_FK2_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_ATTACHMENT_FK3_idx` (`ATTA_TYPE_CODE`),
  KEY `DISCL_ATTACHMENT_FK4_idx` (`ATTA_STATUS_CODE`),
  CONSTRAINT `DISCL_ATTACHMENT_FK1` FOREIGN KEY (`COMMENT_ID`) REFERENCES `discl_comment` (`COMMENT_ID`),
  CONSTRAINT `DISCL_ATTACHMENT_FK2` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`),
  CONSTRAINT `DISCL_ATTACHMENT_FK3` FOREIGN KEY (`ATTA_TYPE_CODE`) REFERENCES `discl_atta_type` (`ATTA_TYPE_CODE`),
  CONSTRAINT `DISCL_ATTACHMENT_FK4` FOREIGN KEY (`ATTA_STATUS_CODE`) REFERENCES `discl_atta_status` (`ATTA_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_travel_disclosure_status`;
CREATE TABLE `coi_travel_disclosure_status` (
		TRAVEL_DISCLOSURE_STATUS_CODE varchar(3) primary key not null,
		DESCRIPTION varchar(200),
		IS_ACTIVE varchar(1),
		UPDATE_TIMESTAMP datetime,
		UPDATE_USER varchar(50)
);

SET FOREIGN_KEY_CHECKS=1; 

DROP TABLE IF EXISTS `COI_TRAVEL_REVIEW_STATUS`;
CREATE TABLE `COI_TRAVEL_REVIEW_STATUS`(
		REVIEW_STATUS_CODE VARCHAR(3) not null,
		DESCRIPTION VARCHAR(200),
		IS_ACTIVE VARCHAR(1),
		UPDATE_TIMESTAMP DATETIME,
		UPDATE_USER VARCHAR(60)
);

DROP TABLE IF EXISTS `COI_TRAVEL_DOCUMENT_STATUS`;
CREATE TABLE `COI_TRAVEL_DOCUMENT_STATUS`(
		DOCUMENT_STATUS_CODE VARCHAR(3) not null,
		DESCRIPTION VARCHAR(200),
		IS_ACTIVE VARCHAR(1),
		UPDATE_TIMESTAMP DATETIME,
		UPDATE_USER VARCHAR(60)
);

DROP TABLE IF EXISTS `coi_conflict_history`;
CREATE TABLE `coi_conflict_history` (
  `COI_CONFLICT_HISTORY_ID` int NOT NULL AUTO_INCREMENT,
  `DISCLOSURE_DETAILS_ID` int NOT NULL,
  `DISCLOSURE_ID` int NOT NULL,
  `COMMENT` varchar(4000) DEFAULT NULL,
  `CONFLICT_STATUS_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COI_CONFLICT_HISTORY_ID`)
);

DROP TABLE IF EXISTS `attachment_number_counter`;
CREATE TABLE `attachment_number_counter` (
  `counter_name` varchar(255) NOT NULL,
  `counter_value` int DEFAULT NULL,
  PRIMARY KEY (`counter_name`)
);

DROP TABLE IF EXISTS `coi_reviewer_status_type`;
CREATE TABLE `coi_reviewer_status_type` (
  `REVIEW_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`REVIEW_STATUS_CODE`)
);

DROP TABLE IF EXISTS `COI_REVIEW_LOCATION_TYPE`;
CREATE TABLE `COI_REVIEW_LOCATION_TYPE` (
  `LOCATION_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`LOCATION_TYPE_CODE`)
);

INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Publicly Owned','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Private','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Non-Profit','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','For-Profit','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('5', 'Federal', 'Y', now(), 'quickstart');

INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Financial Conflict of Interest','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Other Professional Activities','N',now(),'quickstart');
INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Project Disclosures','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Travel Disclosures','N',now(),'quickstart');

INSERT INTO `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Self','Y',now(),'quickstart');
INSERT INTO `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Spouse','Y',now(),'quickstart');
INSERT INTO `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Dependant','Y',now(),'quickstart');

INSERT INTO `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`,`DISCLOSURE_TYPE_CODE`,`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`QUESTIONNAIRE_NUMBER`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES (1,'1','1','Self',NULL,'Y',now(),'quickstart');
INSERT INTO `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`,`DISCLOSURE_TYPE_CODE`,`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`QUESTIONNAIRE_NUMBER`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES (2,'1','2','Spouse',NULL,'Y',now(),'quickstart');
INSERT INTO `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`,`DISCLOSURE_TYPE_CODE`,`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`QUESTIONNAIRE_NUMBER`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES (3,'1','3','Dependant',NULL,'Y',now(),'quickstart');

INSERT INTO `entity_status` (`ENTITY_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Verified','Y',now(),'quickstart');
INSERT INTO `entity_status` (`ENTITY_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Unverified','Y',now(),'quickstart');

INSERT INTO `entity_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','High','Y',now(),'quickstart');
INSERT INTO `entity_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Medium','Y',now(),'quickstart');
INSERT INTO `entity_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Low','Y',now(),'quickstart');

INSERT INTO `COI_TRAVELER` (`TRAVELER_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Self','Y',now(),'quickstart');
INSERT INTO `COI_TRAVELER` (`TRAVELER_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Spouse/Domestic Partner','Y',now(),'quickstart');
INSERT INTO `COI_TRAVELER` (`TRAVELER_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Dependent Children','Y',now(),'quickstart');

INSERT INTO `COI_TRAVEL_STATUS` (`TRAVEL_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Pending','Y',now(),'quickstart');
INSERT INTO `COI_TRAVEL_STATUS` (`TRAVEL_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Submitted','Y',now(),'quickstart');
INSERT INTO `COI_TRAVEL_STATUS` (`TRAVEL_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Approved','Y',now(),'quickstart');

INSERT INTO `coi_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','High','Y',now(),'quickstart');
INSERT INTO `coi_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Medium','Y',now(),'quickstart');
INSERT INTO `coi_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Low','Y',now(),'quickstart');

INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Pending','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Submitted','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Review in progress','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Completed','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('5','Revison requested','Y',now(),'quickstart');

INSERT INTO `coi_project_type` (`COI_PROJECT_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Award','Y',now(),'quickstart');
INSERT INTO `coi_project_type` (`COI_PROJECT_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Development Proposal','Y',now(),'quickstart');
INSERT INTO `COI_PROJECT_TYPE` (`COI_PROJECT_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('4', 'IRB Protocol', 'Y', now(), 'quickstart');
INSERT INTO `COI_PROJECT_TYPE` (`COI_PROJECT_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('5', 'IACUC Protocol', 'Y', now(), 'quickstart');

INSERT INTO `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('100','No Conflict','Y',now(),'quickstart');
INSERT INTO `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('200','Potential Conflict','Y',now(),'quickstart');
INSERT INTO `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('300','Conflict Identified','Y',now(),'quickstart');

INSERT INTO `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Pending','Y',now(),'quickstart');
INSERT INTO `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Void','Y',now(),'quickstart');
INSERT INTO `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Approved','Y',now(),'quickstart');

INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','FCOI','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Proposal','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Award','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Revision','Y',now(),'quickstart');

INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','No Conflict','Y',now(),'quickstart');
INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Potential Conflict','Y',now(),'quickstart');
INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Conflict Identified','Y',now(),'quickstart');
INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Pending','Y',now(),'quickstart');

INSERT INTO `discl_component_type` (`COMPONENT_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('1', 'Disclosure detail comment', 'Y', now(),'quickstart');
INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('1', 'Disclosure detail comment', 'Y', now(),'quickstart');

INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'MANAGE_FCOI_DISCLOSURE', 'To manage all actions against an FCOI disclosure', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_FCOI_DISCLOSURE', 'To view any FCOI disclosure in a unit', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_FCOI_DISCLOSURE_PRIVATE_COMMENTS', 'To view private comments tagged in the disclosure', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_FCOI_DISCLOSURE_PRIVATE_ATTACHMENTS', 'To view private attachments tagged in the disclosure', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'MANAGE_DISCLOSURE_REVIEW', 'To manage review in disclosure', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_DISCLOSURE_REVIEW', 'To view review members and comments tagged in the disclosure', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'MANAGE_PROJECT_DISCLOSURE', 'To manage all actions against a project disclosure', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_PROJECT_DISCLOSURE', 'To view any project disclosure in a unit', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'MANAGE_TRAVEL_DISCLOSURE', 'To manage all actions against a travel disclosre', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_TRAVEL_DISCLOSURE', 'To view any travel disclosure in a unit', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'MANAGE_ENTITY', 'To manage all actions against a Entity', 'quickstart', now(), '2');
INSERT INTO `rights` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_ENTITY', 'To view any  Entities', 'quickstart', now(), '2');

INSERT INTO `COI_TRAVEL_DISCLOSURE_STATUS` VALUES('1', 'No Conflict', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_DISCLOSURE_STATUS` VALUES('2', 'Potential Conflict', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_DISCLOSURE_STATUS` VALUES('3', 'Conflict Identified', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_DISCLOSURE_STATUS` VALUES ('4', 'Conflict Managed', 'Y', now(), 'admin');

INSERT INTO `RIGHTS` (`RIGHT_ID`, `RIGHT_NAME`, `DESCRIPTION`, `UPDATE_USER`, `UPDATE_TIMESTAMP`, `RIGHTS_TYPE_CODE`) 
VALUES ((SELECT A.ID FROM (SELECT MAX(RIGHT_ID) + 1 AS ID FROM RIGHTS ) AS A), 'VIEW_ADMIN_GROUP_COI', 'Allow to view coi based on admin group', 'quickstart', now(), '1');

INSERT INTO `ROLE_RIGHTS` (`ROLE_RIGHTS_ID`, `RIGHT_ID`, `ROLE_ID`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ((SELECT A.ID FROM (SELECT MAX(ROLE_RIGHTS_ID) + 1 AS ID FROM ROLE_RIGHTS ) AS A), '1356', '1335', now(), 'quickstart');

INSERT INTO `PERSON_ROLES` (`PERSON_ROLES_ID`, `PERSON_ID`, `ROLE_ID`, `UNIT_NUMBER`, `DESCEND_FLAG`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ((SELECT A.ID FROM (SELECT MAX(PERSON_ROLES_ID) + 1 AS ID FROM PERSON_ROLES ) AS A), '10000000001', '1335', '000001', 'N', now(), 'quikstart');

INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('1', 'Pending', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('2', 'Submitted', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('3', 'Review In progress', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('4', 'Returned', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('5', 'Withdrawn', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('6', 'Completed', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_REVIEW_STATUS` VALUES ('7', 'Approved', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_DOCUMENT_STATUS` VALUES ('1', 'Draft', 'Y', now(), 'admin');
INSERT INTO `COI_TRAVEL_DOCUMENT_STATUS` VALUES ('2', 'Approved', 'Y', now(), 'admin');

INSERT INTO `entity_relationship_type` (`ENTITY_REL_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('1', 'New', 'Y', now(), 'quickstart');
INSERT INTO `entity_relationship_type` (`ENTITY_REL_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('2', 'Duplicate', 'Y', now(), 'quickstart');
INSERT INTO `entity_relationship_type` (`ENTITY_REL_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('3', 'Parent', 'Y', now(), 'quickstart');
INSERT INTO `entity_relationship_type` (`ENTITY_REL_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('4', 'Subsidiary', 'Y', now(), 'quickstart');

SET FOREIGN_KEY_CHECKS=0;

CREATE TABLE `coi_quest_answer` (
  `QUESTIONNAIRE_ANSWER_ID` int NOT NULL AUTO_INCREMENT,
  `QUESTIONNAIRE_ANS_HEADER_ID` int DEFAULT NULL,
  `QUESTION_ID` int DEFAULT NULL,
  `OPTION_NUMBER` int DEFAULT NULL,
  `ANSWER_NUMBER` int DEFAULT NULL,
  `ANSWER` varchar(4000) DEFAULT NULL,
  `ANSWER_LOOKUP_CODE` varchar(100) DEFAULT NULL,
  `EXPLANATION` varchar(4000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`QUESTIONNAIRE_ANSWER_ID`),
  KEY `COI_QUEST_ANSWER_FK1` (`QUESTIONNAIRE_ANS_HEADER_ID`),
  KEY `COI_QUEST_ANSWER_FK2` (`QUESTION_ID`),
  CONSTRAINT `COI_QUEST_ANSWER_FK1` FOREIGN KEY (`QUESTIONNAIRE_ANS_HEADER_ID`) REFERENCES `quest_answer_header` (`QUESTIONNAIRE_ANS_HEADER_ID`),
  CONSTRAINT `COI_QUEST_ANSWER_FK2` FOREIGN KEY (`QUESTION_ID`) REFERENCES `quest_question` (`QUESTION_ID`)
);

CREATE TABLE `coi_quest_answer_attachment` (
  `QUESTIONNAIRE_ANSWER_ATT_ID` int NOT NULL AUTO_INCREMENT,
  `QUESTIONNAIRE_ANSWER_ID` int DEFAULT NULL,
  `ATTACHMENT` longblob,
  `FILE_NAME` varchar(300) DEFAULT NULL,
  `CONTENT_TYPE` varchar(100) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`QUESTIONNAIRE_ANSWER_ATT_ID`),
  KEY `COI_QUEST_ANSWER_ATTACHMENT_FK1` (`QUESTIONNAIRE_ANSWER_ID`),
  CONSTRAINT `COI_QUEST_ANSWER_ATTACHMENT_FK1` FOREIGN KEY (`QUESTIONNAIRE_ANSWER_ID`) REFERENCES `coi_quest_answer` (`QUESTIONNAIRE_ANSWER_ID`)
);

CREATE TABLE `coi_quest_table_answer` (
  `QUEST_TABLE_ANSWER_ID` int NOT NULL AUTO_INCREMENT,
  `QUESTIONNAIRE_ANS_HEADER_ID` int DEFAULT NULL,
  `QUESTION_ID` int DEFAULT NULL,
  `ORDER_NUMBER` int DEFAULT NULL,
  `COLUMN_1` varchar(250) DEFAULT NULL,
  `COLUMN_2` varchar(250) DEFAULT NULL,
  `COLUMN_3` varchar(250) DEFAULT NULL,
  `COLUMN_4` varchar(250) DEFAULT NULL,
  `COLUMN_5` varchar(250) DEFAULT NULL,
  `COLUMN_6` varchar(250) DEFAULT NULL,
  `COLUMN_7` varchar(250) DEFAULT NULL,
  `COLUMN_8` varchar(250) DEFAULT NULL,
  `COLUMN_9` varchar(250) DEFAULT NULL,
  `COLUMN_10` varchar(250) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`QUEST_TABLE_ANSWER_ID`),
  KEY `COI_QUESTIONNAIRE_ANS_HEADER_ID_FK1` (`QUESTIONNAIRE_ANS_HEADER_ID`),
  CONSTRAINT `COI_QUESTIONNAIRE_ANS_HEADER_ID_FK1` FOREIGN KEY (`QUESTIONNAIRE_ANS_HEADER_ID`) REFERENCES `quest_answer_header` (`QUESTIONNAIRE_ANS_HEADER_ID`)
);

DROP TABLE IF EXISTS disclosure_action_type;
CREATE TABLE `disclosure_action_type` (
  `ACTION_TYPE_CODE` varchar(3) NOT NULL,
  `MESSAGE` varchar(200) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ACTION_TYPE_CODE`)
);

DROP TABLE IF EXISTS entity_action_type;
CREATE TABLE `entity_action_type` (
  `ACTION_TYPE_CODE` varchar(3) NOT NULL,
  `MESSAGE` varchar(200) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ACTION_TYPE_CODE`)
);

DROP TABLE IF EXISTS disclosure_action_log;
CREATE TABLE `disclosure_action_log` (
  `ACTION_LOG_ID` int NOT NULL AUTO_INCREMENT,
  `DISCLOSURE_ID` int DEFAULT NULL,
  `DISCLOSURE_NUMBER` int DEFAULT NULL,
  `ACTION_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `COMMENT` varchar(4000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ACTION_LOG_ID`),
  KEY `DISCLOSURE_ACTION_LOG_FK1` (`ACTION_TYPE_CODE`),
  KEY `DISCLOSURE_ACTION_LOG_FK2` (`DISCLOSURE_ID`),
  CONSTRAINT `DISCLOSURE_ACTION_LOG_FK1` FOREIGN KEY (`ACTION_TYPE_CODE`) REFERENCES `disclosure_action_type` (`ACTION_TYPE_CODE`),
  CONSTRAINT `DISCLOSURE_ACTION_LOG_FK2` FOREIGN KEY (`DISCLOSURE_ID`) REFERENCES `coi_disclosure` (`DISCLOSURE_ID`)
);

DROP TABLE IF EXISTS entity_action_log;
CREATE TABLE `entity_action_log` (
  `ACTION_LOG_ID` int NOT NULL AUTO_INCREMENT,
  `ENTITY_ID` int DEFAULT NULL,
  `ENTITY_NUMBER` int DEFAULT NULL,
  `ACTION_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `COMMENT` varchar(4000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ACTION_LOG_ID`),
  KEY `ENTITY_ACTION_LOG_FK1` (`ACTION_TYPE_CODE`),
  KEY `ENTITY_ACTION_LOG_FK2` (`ENTITY_ID`),
  CONSTRAINT `ENTITY_ACTION_LOG_FK1` FOREIGN KEY (`ACTION_TYPE_CODE`) REFERENCES `entity_action_type` (`ACTION_TYPE_CODE`),
  CONSTRAINT `ENTITY_ACTION_LOG_FK2` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`)
);

DROP TABLE IF EXISTS travel_disclosure_action_log;
CREATE TABLE `travel_disclosure_action_log` (
  `ACTION_LOG_ID` int NOT NULL AUTO_INCREMENT,
  `TRAVEL_DISCLOSURE_ID` int DEFAULT NULL,
  `TRAVEL_NUMBER` int DEFAULT NULL,
  `ACTION_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `COMMENT` varchar(4000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ACTION_LOG_ID`),
  KEY `TRAVEL_DISCLOSURE_ACTION_LOG_FK1` (`ACTION_TYPE_CODE`),
  KEY `TRAVEL_DISCLOSURE_ACTION_LOG_FK2` (`TRAVEL_DISCLOSURE_ID`),
  CONSTRAINT `TRAVEL_DISCLOSURE_ACTION_LOG_FK1` FOREIGN KEY (`ACTION_TYPE_CODE`) REFERENCES `disclosure_action_type` (`ACTION_TYPE_CODE`),
  CONSTRAINT `TRAVEL_DISCLOSURE_ACTION_LOG_FK2` FOREIGN KEY (`TRAVEL_DISCLOSURE_ID`) REFERENCES `coi_travel_disclosure` (`TRAVEL_DISCLOSURE_ID`)
);

CREATE TABLE `coi_travel_conflict_history` (
  `COI_TRAVEL_CONFLICT_HISTORY_ID` int NOT NULL AUTO_INCREMENT,
  `TRAVEL_DISCLOSURE_ID` int NOT NULL,
  `COMMENT` varchar(4000) DEFAULT NULL,
  `CONFLICT_STATUS_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COI_TRAVEL_CONFLICT_HISTORY_ID`),
  KEY `COI_TRAVEL_CONFLICT_HISTORY_FK1_idx` (`CONFLICT_STATUS_CODE`)
);

INSERT INTO `discl_component_type` (`COMPONENT_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('2', 'Travel disclosure conflict comment', 'Y', now(), 'quickstart');
INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('2', 'Travel disclosure conflict comment', 'Y', now(), 'quickstart');

INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('1', '{FCOI /Project /Travel} disclosure <b>created</b> by <b>{REPORTER}</b>', 'Created', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('2', '{FCOI /Project /Travel} disclosure <b>submitted</b> by <b>{REPORTER}</b>', 'Submitted', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('3', '{FCOI /Project /Travel} disclosure <b>recalled</b> by <b>{REPORTER}</b>', 'Withdraw', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('4', 'Primary Administrator <b>{ADMIN_ONE}</b> <b>assigned</b> by <b>{COI_ADMIN}</b>', 'Assigned to admin /Admin Group', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('5', 'Primary Administrator <b>{ADMIN_ONE}</b> <b>reassigned</b> to <b>{ADMIN_TWO}</b> by <b>{COI_ADMIN}</b>', 'Re Assigned to admin /Admin Group', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('6', '{FCOI /Project /Travel} disclosure <b>returned</b> by <b>{ADMIN_NAME}</b>', 'Returned', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('7', '{FCOI /Project /Travel} disclosure <b>assigned</b> to Review by <b>{ADMIN_NAME}</b>', 'Assigned For Review', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('8', 'Assigned Review <b>completed</b> for {FCOI /Project /Travel} disclosure', 'Assigned Review Completed', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('9', '{FCOI /Project /Travel} disclosure Risk <b>added</b> as <b>{LOW}</b>', 'Added Risk', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('10', '{FCOI /Project /Travel} Disclosure Risk <b>changed</b> from <b>{LOW}</b> to <b>{HIGH}</b> by <b>{ADMIN_NAME}</b>', 'Manage Risk', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('11', '{FCOI /Project /Travel} disclosure review <b>completed</b> by <b>{ADMIN_NAME}</b>', 'Admin  Review Completed', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('12', '{FCOI /Project /Travel} disclosure has <b>expired</b>', 'Expired', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('13', '{FCOI /Project /Travel} disclosure <b>approved</b>', 'Approved', now(), 'quickstart');


INSERT INTO `ENTITY_ACTION_TYPE` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('1', 'New Entity <b>{ENTITY_NAME}</b>  has been <b>created</b>', 'Create', now(), 'quickstart');

INSERT INTO `ENTITY_ACTION_TYPE` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('2', '<b>{ENTITY_NAME}</b> has been <b>activated</b>', 'Activate', now(), 'quickstart');

INSERT INTO `ENTITY_ACTION_TYPE` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('3', '<b>{ENTITY_NAME}</b> has been <b>inactivated</b>', 'Inactivate', now(), 'quickstart');

INSERT INTO `ENTITY_ACTION_TYPE` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('4', '<b>{ENTITY_NAME}</b> has been <b>verified</b>', 'Inactivate', now(), 'quickstart');

INSERT INTO `ENTITY_ACTION_TYPE` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('5', 'Admin <b>{ADMIN_NAME}</b> changed the risk status from <b>{RISK}</b> to <b>{NEW_RISK}</b>', 'Modify Risk', now(), 'quickstart');

INSERT INTO `ENTITY_ACTION_TYPE` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('6', '<b>{ENTITY_NAME}</b> has been <b>modified</b>', 'Modify Entity', now(), 'quickstart');

ALTER TABLE `quest_question` ADD COLUMN `FOOTER_DESCRIPTION` TEXT NULL;

SET FOREIGN_KEY_CHECKS=1;

INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('3', 'General', 'Y', now(), 'quickstart');
INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('4', 'Questionnaire', 'Y', now(), 'quickstart');
INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('5', 'SFIs', 'Y', now(), 'quickstart');
INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('6', 'Project relationships', 'Y', now(), 'quickstart');
INSERT INTO `discl_comment_type` (`COMMENT_TYPE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('7', 'Certification', 'Y', now(), 'quickstart');
SET SQL_SAFE_UPDATES = 0;
SET FOREIGN_KEY_CHECKS = 0;
UPDATE `coi_sections_type` SET `COI_SECTIONS_TYPE_CODE` = '7' WHERE (`DESCRIPTION` = 'Certification');
UPDATE `coi_sections_type` SET `COI_SECTIONS_TYPE_CODE` = '6' WHERE (`DESCRIPTION` = 'Project relationships');
UPDATE `coi_sections_type` SET `COI_SECTIONS_TYPE_CODE` = '5' WHERE (`DESCRIPTION` = 'SFIs');
UPDATE `coi_sections_type` SET `COI_SECTIONS_TYPE_CODE` = '4' WHERE (`DESCRIPTION` = 'Questionnaire');
INSERT INTO `coi_sections_type` (`COI_SECTIONS_TYPE_CODE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `IS_ACTIVE`) VALUES ('3', 'General', now(), 'quickstart', 'Y');
SET SQL_SAFE_UPDATES = 1;
SET FOREIGN_KEY_CHECKS = 1;

ALTER TABLE `coi_review_comment_tags` 
DROP FOREIGN KEY `COI_REVIEW_CMT_TAGS_FK2`;
ALTER TABLE `coi_review_comment_tags`;
ALTER TABLE `coi_review_comment_tags` RENAME INDEX `COI_REVIEW_CMT_TAGS_FK2` TO `COI_REVIEW_CMT_TAGS_FK2_idx`;
ALTER TABLE `coi_review_comment_tags` ALTER INDEX `COI_REVIEW_CMT_TAGS_FK2_idx` VISIBLE;
ALTER TABLE `coi_review_comment_tags` 
ADD CONSTRAINT `COI_REVIEW_CMT_TAGS_FK2`
FOREIGN KEY (`COI_REVIEW_COMMENT_ID`)
REFERENCES `discl_comment` (`COMMENT_ID`);

UPDATE `disclosure_action_type` SET MESSAGE = 'New {FCOI /Project /Travel} disclosure has been created' WHERE ACTION_TYPE_CODE = '1';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure has been submitted' WHERE ACTION_TYPE_CODE = '2';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure has been recalled' WHERE ACTION_TYPE_CODE = '3';
UPDATE `disclosure_action_type` SET MESSAGE = 'New admin <b>{ADMIN_ONE}</b> has been assigned' WHERE ACTION_TYPE_CODE = '4';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure has been returned' WHERE ACTION_TYPE_CODE = '6';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure review has been completed' WHERE ACTION_TYPE_CODE = '8';
UPDATE `disclosure_action_type` SET MESSAGE = 'Risk <b>{LOW}</b> has been added' WHERE ACTION_TYPE_CODE = '9';
UPDATE `disclosure_action_type` SET MESSAGE = 'Risk for  {FCOI /Project /Travel} disclosure changed from <b>{LOW}</b> to <b>{HIGH}</b>' WHERE ACTION_TYPE_CODE = '10';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure admin-review has been completed' WHERE ACTION_TYPE_CODE = '11';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure has been expired' WHERE ACTION_TYPE_CODE = '12';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure has been approved' WHERE ACTION_TYPE_CODE = '13';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure status has been added as <b>No Conflict</b>' WHERE ACTION_TYPE_CODE = '14';
UPDATE `disclosure_action_type` SET MESSAGE = '{FCOI /Project /Travel} disclosure status has been changed from <b>{STATUS_ONE}</b> to <b>{STATUS_TWO}</b>' WHERE ACTION_TYPE_CODE = '15';

INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('14', '{FCOI /Project /Travel} disclosure status has been added as <b>No Conflict</b>', 'Created', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('15', '{FCOI /Project /Travel} disclosure status has been changed from <b>{STATUS_ONE}</b> to <b>{STATUS_TWO}</b>', 'Manage Status', now(), 'quickstart');

INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('16', 'New reviewer <b>{REVIEWER_ONE}</b> has been added by the Administartor <b>{ADMIN_NAME}</b>', 'Reviewer has been added', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('17', '<b>{REVIEWER_NAME}</b> has started the review', 'Reviewer has started the review', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('18', 'Review of <b>{REVIEWER_NAME}</b> has been started by the Administartor <b>{ADMIN_NAME}</b>', 'Admin has started the review', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('19', '<b>{REVIEWER_NAME}</b> has Completed the review', 'Reviewer has completed the review', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('20', 'Review of <b>{REVIEWER_NAME}</b> has been Completed by the Administartor <b>{ADMIN_NAME}</b>', 'Admin has completed the review', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('21', '<b>{REVIEWER_NAME}</b> has been removed by the Administartor <b>{ADMIN_NAME}</b>', 'Reviewer Removed', now(), 'quickstart');
INSERT INTO `disclosure_action_type` (`ACTION_TYPE_CODE`, `MESSAGE`, `DESCRIPTION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('22', 'Reviewer <b>{REVIEWER_ONE}</b> reassigned to <b>{REVIEWER_TWO}</b>', 'Reviewer ressigned', now(), 'quickstart');

INSERT INTO `lookup_window` (`LOOKUP_WINDOW_NAME`, `DESCRIPTION`, `TABLE_NAME`, `COLUMN_NAME`, `OTHERS_DISPLAY_COLUMNS`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `DATA_TYPE_CODE`) VALUES ('PERSON_ENTITY_REL_TYPE_LOOKUP', 'Relationship dropdown', 'person_entity_rel_type', 'RELATIONSHIP_TYPE_CODE', 'DESCRIPTION', now(), 'quickstart', '8');
INSERT INTO `business_rule_variable` (`VARIABLE_NAME`, `MODULE_CODE`, `SUB_MODULE_CODE`, `DESCRIPTION`, `TABLE_NAME`, `COLUMN_NAME`, `SHOW_LOOKUP`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `LOOKUP_WINDOW_NAME`) VALUES ('Relationship Type', '8', '801', 'Person Entity Relationship Type', 'PERSON_ENTITY_RELATIONSHIP', 'VALID_PERS_ENTITY_REL_TYP_CODE', 'Y', now(), 'quickstart', 'PERSON_ENTITY_REL_TYPE_LOOKUP');

INSERT INTO business_rules (`RULE_ID`, `DESCRIPTION`, `RULE_TYPE`, `UNIT_NUMBER`, `MODULE_CODE`, `SUB_MODULE_CODE`, `IS_ACTIVE`, `RULE_EXPRESSION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `NOTIFICATION_ID`, `USER_MESSAGE`, `RULE_EVALUATION_ORDER`, `RULE_CATEGORY`) 
VALUES 
((SELECT T.ID FROM (SELECT MAX(RULE_ID) + 1 AS ID FROM business_rules) AS T), 'Dependant relationship rule', 'Q', '000001', '8', '801', 'Y', ' ( E1 )', now(), 'quickstart', '0', '', '2', 'R');

INSERT INTO business_rules_experssion(RULES_EXPERSSION_ID, RULE_ID, EXPRESSION_NUMBER, EXPRESSION_TYPE_CODE, LVALUE, CONDITION_OPERATOR, RVALUE, UPDATE_TIMESTAMP, UPDATE_USER, PARENT_EXPRESSION_NUMBER) 
VALUES
((SELECT T.ID FROM (SELECT MAX(RULES_EXPERSSION_ID) + 1 AS ID FROM business_rules_experssion) AS T), (SELECT MAX(RULE_ID)  AS ID FROM business_rules), '1', 'V', 'Relationship Type', 'Equal to', '3', now(), 'quickstart', '0');

INSERT INTO `business_rules` (`RULE_ID`, `DESCRIPTION`, `RULE_TYPE`, `UNIT_NUMBER`, `MODULE_CODE`, `SUB_MODULE_CODE`, `IS_ACTIVE`, `RULE_EXPRESSION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `NOTIFICATION_ID`, `USER_MESSAGE`, `RULE_EVALUATION_ORDER`, `RULE_CATEGORY`) 
VALUES 
((SELECT T.ID FROM (SELECT MAX(RULE_ID) + 1 AS ID FROM business_rules) AS T), 'Spouse relationship rule', 'Q', '000001', '8', '801', 'Y', ' ( E1 )', now(), 'quickstart', '0', '', '3', 'R');

INSERT INTO business_rules_experssion(RULES_EXPERSSION_ID, RULE_ID, EXPRESSION_NUMBER, EXPRESSION_TYPE_CODE, LVALUE, CONDITION_OPERATOR, RVALUE, UPDATE_TIMESTAMP, UPDATE_USER, PARENT_EXPRESSION_NUMBER) 
VALUES
((SELECT T.ID FROM (SELECT MAX(RULES_EXPERSSION_ID) + 1 AS ID FROM business_rules_experssion) AS T), (SELECT MAX(RULE_ID)  AS ID FROM business_rules), '1', 'V', 'Relationship Type', 'Equal to', '2', now(), 'quickstart', '0');

INSERT INTO `business_rules` (`RULE_ID`, `DESCRIPTION`, `RULE_TYPE`, `UNIT_NUMBER`, `MODULE_CODE`, `SUB_MODULE_CODE`, `IS_ACTIVE`, `RULE_EXPRESSION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `NOTIFICATION_ID`, `USER_MESSAGE`, `RULE_EVALUATION_ORDER`, `RULE_CATEGORY`) 
VALUES 
((SELECT T.ID FROM (SELECT MAX(RULE_ID) + 1 AS ID FROM business_rules) AS T), 'Self relationship rule', 'Q', '000001', '8', '801', 'Y', ' ( E1 )', now(), 'quickstart', '0', '', '4', 'R');

INSERT INTO business_rules_experssion(RULES_EXPERSSION_ID, RULE_ID, EXPRESSION_NUMBER, EXPRESSION_TYPE_CODE, LVALUE, CONDITION_OPERATOR, RVALUE, UPDATE_TIMESTAMP, UPDATE_USER, PARENT_EXPRESSION_NUMBER) 
VALUES
((SELECT T.ID FROM (SELECT MAX(RULES_EXPERSSION_ID) + 1 AS ID FROM business_rules_experssion) AS T), (SELECT MAX(RULE_ID)  AS ID FROM business_rules), '1', 'V', 'Relationship Type', 'Equal to', '1', now(), 'quickstart', '0');

INSERT INTO `business_rules` (`RULE_ID`, `DESCRIPTION`, `RULE_TYPE`, `UNIT_NUMBER`, `MODULE_CODE`, `SUB_MODULE_CODE`, `IS_ACTIVE`, `RULE_EXPRESSION`, `UPDATE_TIMESTAMP`, `UPDATE_USER`, `NOTIFICATION_ID`, `USER_MESSAGE`, `RULE_EVALUATION_ORDER`, `RULE_CATEGORY`) 
VALUES 
((SELECT T.ID FROM (SELECT MAX(RULE_ID) + 1 AS ID FROM business_rules) AS T), 'Travel relationship rule', 'Q', '000001', '8', '801', 'Y', ' ( E1 )', now(), 'quickstart', '0', '', '5', 'R');

INSERT INTO business_rules_experssion(RULES_EXPERSSION_ID, RULE_ID, EXPRESSION_NUMBER, EXPRESSION_TYPE_CODE, LVALUE, CONDITION_OPERATOR, RVALUE, UPDATE_TIMESTAMP, UPDATE_USER, PARENT_EXPRESSION_NUMBER) 
VALUES
((SELECT T.ID FROM (SELECT MAX(RULES_EXPERSSION_ID) + 1 AS ID FROM business_rules_experssion) AS T), (SELECT MAX(RULE_ID)  AS ID FROM business_rules), '1', 'V', 'Relationship Type', 'Equal to', '4', now(), 'quickstart', '0');

ALTER TABLE `coi_review` 
CHANGE COLUMN `DESCRIPTION` `DESCRIPTION` VARCHAR(2000) NULL DEFAULT NULL ;


ALTER TABLE `coi_review`
DROP FOREIGN KEY `COI_REVIEW_FK4`;
ALTER TABLE `coi_review`
ADD INDEX `COI_REVIEW_FK4_idx` (`REVIEW_STATUS_TYPE_CODE` ASC) VISIBLE,
DROP INDEX `COI_REVIEW_FK4_idx` ;
;
ALTER TABLE `coi_review`
ADD CONSTRAINT `COI_REVIEW_FK4`
  FOREIGN KEY (`REVIEW_STATUS_TYPE_CODE`)
  REFERENCES `coi_reviewer_status_type` (`REVIEW_STATUS_CODE`);


ALTER TABLE `coi_review`
ADD COLUMN `LOCATION_TYPE_CODE` VARCHAR(3) NULL AFTER `DESCRIPTION`,
ADD INDEX `COI_REVIEW_FK5_idx` (`LOCATION_TYPE_CODE` ASC) VISIBLE;
;
ALTER TABLE `coi_review`
ADD CONSTRAINT `COI_REVIEW_FK5`
  FOREIGN KEY (`LOCATION_TYPE_CODE`)
  REFERENCES `coi_review_location_type` (`LOCATION_TYPE_CODE`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

ALTER TABLE `coi_review` 
ADD COLUMN `START_DATE` DATE NULL AFTER `LOCATION_TYPE_CODE`,
ADD COLUMN `END_DATE` DATE NULL AFTER `START_DATE`;


INSERT INTO `COI_REVIEW_LOCATION_TYPE` (`LOCATION_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('1', '3rd Party Location', 'Y', now(), 'quickstart');
INSERT INTO `COI_REVIEW_LOCATION_TYPE` (`LOCATION_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('2', 'Department', 'Y', now(), 'quickstart');
INSERT INTO `COI_REVIEW_LOCATION_TYPE` (`LOCATION_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('3', 'Legal', 'Y', now(), 'quickstart');
INSERT INTO `COI_REVIEW_LOCATION_TYPE` (`LOCATION_TYPE_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('4', 'HOD', 'Y', now(), 'quickstart');

INSERT INTO `COI_REVIEWER_STATUS_TYPE` (`REVIEW_STATUS_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('1', 'Assigned', 'Y', now(), 'quickstart');
INSERT INTO `COI_REVIEWER_STATUS_TYPE` (`REVIEW_STATUS_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('2', 'Completed', 'Y', now(), 'quickstart');
INSERT INTO `COI_REVIEWER_STATUS_TYPE` (`REVIEW_STATUS_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) VALUES ('3', 'In Progress', 'Y', now(), 'quickstart');

INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('7', 'Review assigned', 'Y', now(), 'quickstart');

INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`, `DESCRIPTION`, `IS_ACTIVE`, `UPDATE_TIMESTAMP`, `UPDATE_USER`) 
VALUES ('8', 'Assigned Review Completed', 'Y', now(), 'quickstart');

UPDATE `entity_action_type` SET `MESSAGE` = '{ENTITY_NAME} <b>created</b>' WHERE (`ACTION_TYPE_CODE` = '1');
UPDATE `entity_action_type` SET `MESSAGE` = '{ENTITY_NAME} <b>activated</b>' WHERE (`ACTION_TYPE_CODE` = '2');
UPDATE `entity_action_type` SET `MESSAGE` = '{ENTITY_NAME} <b>inactivated</b>' WHERE (`ACTION_TYPE_CODE` = '3');
UPDATE `entity_action_type` SET `MESSAGE` = '{ENTITY_NAME} <b>verified</b>' WHERE (`ACTION_TYPE_CODE` = '4');
UPDATE `entity_action_type` SET `MESSAGE` = 'Entity Risk changed from <b>{RISK}</b> to <b>{NEW_RISK}</b>' WHERE (`ACTION_TYPE_CODE` = '5');
UPDATE `entity_action_type` SET `MESSAGE` = '{ENTITY_NAME} <b>modified</b> by' WHERE (`ACTION_TYPE_CODE` = '6');
UPDATE `entity_action_type` SET `MESSAGE` = 'Entity Risk <b>added</b> as <b>{RISK}</b>' WHERE (`ACTION_TYPE_CODE` = '7');

INSERT INTO `coeus_module` (MODULE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, IS_ACTIVE) VALUES (24, 'COI Travel Disclosure', now(), 'admin', 'Y');
INSERT INTO `message` (MESSAGE_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER) VALUES ('139', 'FCOI Disclosure Expiration', now(), 'quickstart');
INSERT INTO `message` (MESSAGE_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER) VALUES ('140', 'Travel Disclosure Expiration', now(), 'quickstart');

ALTER TABLE `INBOX` ADD COLUMN `ALERT_TYPE` VARCHAR(45) NULL;
ALTER TABLE `INBOX` ADD COLUMN `EXPIRATION_DATE` DATETIME NULL;

INSERT INTO `REMINDER_NOTIFICATION`
(REMINDER_NOTIFICATION_ID, REMINDER_NAME, NOTIFICATION_TYPE_ID, DAYS_TO_DUE_DATE, PROCEDURE_NAME, IS_ACTVE, UPDATE_USER, UPDATE_TIMESTAMP, PLACEHOLDER_VALUES, REMINDER_TYPE_FLAG)
VALUES(27, 'Reminder Banner for Coi Disclosures', 804, 360, 'GET_COI_DISCLOSURES_FOR_BANNER', 'Y', 'quickstart', now(), 'DESCRIPTION', 'B');

ALTER TABLE `coi_travel_disclosure` 
ADD INDEX `COI_TRAVEL_DISCLOSURE_FK6_idx` (`TRAVEL_DISCLOSURE_STATUS_CODE` ASC) VISIBLE;
;
ALTER TABLE `coi_travel_disclosure` 
ADD CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK6`
  FOREIGN KEY (`TRAVEL_DISCLOSURE_STATUS_CODE`)
  REFERENCES `coi_travel_disclosure_status` (`TRAVEL_DISCLOSURE_STATUS_CODE`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

/*
OPA related changes 
*/
CREATE TABLE `opa_person` (
  `PERSON_ID` varchar(40) NOT NULL,
  `PERSON_NAME` varchar(90) DEFAULT NULL,
  `FORM_OF_ADDRESS_SHORT` varchar(40) DEFAULT NULL,
  `FIRST_NAME` varchar(30) DEFAULT NULL,
  `MIDDLE_NAME` varchar(30) DEFAULT NULL,
  `LAST_NAME` varchar(30) DEFAULT NULL,
  `KRB_NAME_UPPERCASE` varchar(60) DEFAULT NULL,
  `EMAIL_ADDRESS` varchar(60) DEFAULT NULL,
  `JOB_ID` varchar(20) DEFAULT NULL,
  `JOB_TITLE` varchar(50) DEFAULT NULL,
  `ADMIN_EMPLOYEE_TYPE` varchar(40) DEFAULT NULL,
  `HR_DEPARTMENT_CODE_OLD` varchar(10) DEFAULT NULL,
  `HR_DEPARTMENT_NAME` varchar(50) DEFAULT NULL,
  `ADMIN_ORG_UNIT_ID` varchar(10) DEFAULT NULL,
  `ADMIN_ORG_UNIT_TITLE` varchar(50) DEFAULT NULL,
  `ADMIN_POSITION_TITLE` varchar(50) DEFAULT NULL,
  `PAYROLL_RANK` varchar(40) DEFAULT NULL,
  `IS_FACULTY` varchar(1) DEFAULT NULL,
  `EMPLOYMENT_PERCENT` decimal(5,2) DEFAULT NULL,
  `IS_CONSULT_PRIV` varchar(1) DEFAULT NULL,
  `IS_PAID_APPT` varchar(1) DEFAULT NULL,
  `IS_SUMMER_SESSION_APPT` varchar(1) DEFAULT NULL,
  `SUMMER_SESSION_MONTHS` int DEFAULT NULL,
  `IS_SABBATICAL` varchar(1) DEFAULT NULL,
  `SABBATICAL_BEGIN_DATE` date DEFAULT NULL,
  `SABBATICAL_END_DATE` date DEFAULT NULL,
  `WAREHOUSE_LOAD_DATE` date DEFAULT NULL,
  PRIMARY KEY (`PERSON_ID`)
);

CREATE TABLE `opa_cycles` (
  `OPA_CYCLE_NUMBER` int NOT NULL AUTO_INCREMENT,
  `PERIOD_START_DATE` date NOT NULL,
  `PERIOD_END_DATE` date NOT NULL,
  `OPA_CYCLE_STATUS` varchar(1) NOT NULL,
  `OPEN_DATE` date DEFAULT NULL,
  `CLOSE_DATE` date DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime NOT NULL,
  `UPDATE_USER` varchar(60) NOT NULL,
  PRIMARY KEY (`OPA_CYCLE_NUMBER`)
);

CREATE TABLE `opa_disclosure` (
  `OPA_DISCLOSURE_ID` int NOT NULL AUTO_INCREMENT,
  `OPA_DISCLOSURE_NUMBER` varchar(20) DEFAULT NULL,
  `OPA_CYCLE_NUMBER` int NOT NULL,
  `PERSON_ID` varchar(40) NOT NULL,
  `PERSON_NAME` varchar(90) NOT NULL,
  `HOME_UNIT` varchar(8) NOT NULL,
  `STATUS_FLAG` varchar(1) NOT NULL,
  `IS_FACULTY` varchar(1) NOT NULL,
  `IS_FALL_SABATICAL` varchar(1) DEFAULT NULL,
  `IS_SPRING_SABATICAL` varchar(1) DEFAULT NULL,
  `RECEIVED_SUMMER_COMP` varchar(1) DEFAULT NULL,
  `SUMMER_COMP_MONTHS` decimal(5,2) DEFAULT NULL,
  `IS_FULL_TIME` varchar(1) DEFAULT NULL,
  `IS_PART_TIME` varchar(1) DEFAULT NULL,
  `APPOINTMENT_PERCENT` decimal(5,2) DEFAULT NULL,
  `IS_COMPENSATED` varchar(1) DEFAULT NULL,
  `HAS_POTENTIAL_CONFLICT` varchar(1) DEFAULT NULL,
  `CONFLICT_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime NOT NULL,
  `CREATE_USER` varchar(60) NOT NULL,
  `SUBMISSION_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime NOT NULL,
  `UPDATE_USER` varchar(60) NOT NULL,
  PRIMARY KEY (`OPA_DISCLOSURE_ID`),
  KEY `OPA_DISCLOSURE_FK1_idx` (`OPA_CYCLE_NUMBER`),
  CONSTRAINT `OPA_DISCLOSURE_FK1` FOREIGN KEY (`OPA_CYCLE_NUMBER`) REFERENCES `opa_cycles` (`OPA_CYCLE_NUMBER`)
) ;

DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_DASHBOARD_COUNT;
DROP PROCEDURE IF EXISTS GET_SFI_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_SFI_DASHBOARD_COUNT;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_ADMIN_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_ADMIN_DASHBOARD_COUNT;
DROP FUNCTION IF EXISTS FN_EVAL_DISCLOSURE_QUESTIONNAIRE;
DROP PROCEDURE IF EXISTS GET_DISCLOSURE_RELATIONS;
DROP PROCEDURE IF EXISTS GET_ALL_SYSTEM_ENTITY_LIST;
DROP PROCEDURE IF EXISTS GET_ALL_SYSTEM_ENTITY_LIST_COUNT;
DROP PROCEDURE IF EXISTS SYNC_PROJECTS_DISCLOSURE;
DROP PROCEDURE IF EXISTS GET_PERSON_ENTITY_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_PERSON_ENTITY_DASHBOARD_COUNT;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_REVIEWER_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_REVIEWER_DASHBOARD_COUNT;
DROP FUNCTION IF EXISTS FN_SYNC_SFI_WITH_FCOI_DISC;
DROP PROCEDURE IF EXISTS GET_ALL_RIGHTS_FOR_A_MODULE;
DROP PROCEDURE IF EXISTS SYNC_SFIS_AND_DISCLOSURE;
DROP PROCEDURE IF EXISTS VALIDATE_PROJECT_DISCLOSURE;
DROP PROCEDURE IF EXISTS GET_PERSON_ENTITIES;
DROP FUNCTION IF EXISTS FN_PERSON_HAS_AUTHORIZATION;
DROP PROCEDURE IF EXISTS COI_VALIDATE_DISCLOSURE_CONFLICTS;
DROP PROCEDURE IF EXISTS COI_EVALUATE_VALIDATION;
DROP PROCEDURE IF EXISTS GENERATE_ATTACHMENT_NUMBER;
DROP PROCEDURE IF EXISTS RULE_EVALUATE_QUESTION;
DROP PROCEDURE IF EXISTS COI_UPD_ANS_TO_NEW_QUEST_VERSN;
DROP PROCEDURE IF EXISTS INSERT_QUESTIONNAIRE_ANSWERS;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_HISTORY;
DROP VIEW IF EXISTS `coi_project_award_v`;
DROP VIEW IF EXISTS `coi_project_proposal_v`;
DROP PROCEDURE IF EXISTS GET_COI_TRAVEL_DISCLOSURE_ADMIN_DASHBOARD;
DROP PROCEDURE IF EXISTS RULE_EVALUATE_VARIABLE;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURES_FOR_BANNER;
DROP FUNCTION IF EXISTS FN_CAN_CREATE_OPA_DISCLOSURE;

\. ./Procedures/GET_COI_DISCLOSURE_DASHBOARD.sql
\. ./Procedures/GET_COI_DISCLOSURE_DASHBOARD_COUNT.sql
\. ./Procedures/GET_SFI_DASHBOARD.sql
\. ./Procedures/GET_SFI_DASHBOARD_COUNT.sql
\. ./Procedures/GET_COI_DISCLOSURE_ADMIN_DASHBOARD.sql
\. ./Procedures/GET_COI_DISCLOSURE_ADMIN_DASHBOARD_COUNT.sql
\. ./Functions/FN_EVAL_DISCLOSURE_QUESTIONNAIRE.sql
\. ./Procedures/GET_DISCLOSURE_RELATIONS.sql
\. ./Procedures/GET_ALL_SYSTEM_ENTITY_LIST.sql
\. ./Procedures/GET_ALL_SYSTEM_ENTITY_LIST_COUNT.sql
\. ./Procedures/GET_PERSON_ENTITY_DASHBOARD.sql
\. ./Procedures/GET_PERSON_ENTITY_DASHBOARD_COUNT.sql
\. ./Procedures/GET_COI_DISCLOSURE_REVIEWER_DASHBOARD.sql
\. ./Procedures/GET_COI_DISCLOSURE_REVIEWER_DASHBOARD_COUNT.sql
\. ./Procedures/GET_ALL_RIGHTS_FOR_A_MODULE.sql
\. ./Procedures/SYNC_SFIS_AND_DISCLOSURE.sql
\. ./Procedures/VALIDATE_PROJECT_DISCLOSURE.sql
\. ./Procedures/GET_PERSON_ENTITIES.sql
\. ./Functions/FN_PERSON_HAS_AUTHORIZATION.sql
\. ./Procedures/COI_VALIDATE_DISCLOSURE_CONFLICTS.sql
\. ./Procedures/COI_EVALUATE_VALIDATION.sql
\. ./Procedures/GENERATE_ATTACHMENT_NUMBER.sql
\. ./Procedures/RULE_EVALUATE_QUESTION.sql
\. ./Procedures/COI_UPD_ANS_TO_NEW_QUEST_VERSN.sql
\. ./Procedures/INSERT_QUESTIONNAIRE_ANSWERS.sql
\. ./Procedures/GET_COI_DISCLOSURE_HISTORY.sql
\. ./views/coi_project_award_v.sql;
\. ./views/coi_project_proposal_v.sql;
\. ./Procedures/GET_COI_TRAVEL_DISCLOSURE_ADMIN_DASHBOARD.sql;
\. ./Procedures/RULE_EVALUATE_VARIABLE.sql;
\. ./Procedures/GET_COI_DISCLOSURES_FOR_BANNER.sql
\. ./Functions/FN_CAN_CREATE_OPA_DISCLOSURE.sql

