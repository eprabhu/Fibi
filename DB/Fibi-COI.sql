/*
-- Sprint : Fibi-COI
1) Exclude the database name from the script.
2) Order of the script needs to be correct.
3) If there is any timestamp in script use 'now()'.
4) If there is an update script. Check if there is an insert script also in the bundle.
5) If there is a create table and alter script for a table. Remove the alter script and update the create table script.
6) Check if the syntax is correct for all scripts. Add semicolon at the end of scripts. If there is any string data put it in quotes.
*/

SET FOREIGN_KEY_CHECKS=0; 

DROP TABLE IF EXISTS `ENTITY_TYPE` ;
DROP TABLE IF EXISTS `ENTITY_STATUS`;
DROP TABLE IF EXISTS `COI_ENTITY`;
DROP TABLE IF EXISTS `ENTITY_SPONSOR_RELATIONSHIP`; 
DROP TABLE IF EXISTS `ENTITY_ORG_RELATIONSHIP`;
DROP TABLE IF EXISTS `COI_FIN_ENTITY_REL_TYPE`;
DROP TABLE IF EXISTS `COI_FINANCIAL_ENTITY`; 
DROP TABLE IF EXISTS `COI_FIN_ENTITY_DETAILS`;
DROP TABLE IF EXISTS  `COI_DISCLOSURE_CATEGORY_TYPE`; 
DROP TABLE IF EXISTS `COI_DISCLOSURE_STATUS`;
DROP TABLE IF EXISTS `COI_DISPOSITION_STATUS`;
DROP TABLE IF EXISTS `COI_REVIEW_STATUS`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_SEQUENCE_STATUS`;
DROP TABLE IF EXISTS `COI_DISCLOSURE`;
DROP TABLE IF EXISTS `COI_DISC_COMMENT_TYPE`;
DROP TABLE IF EXISTS `COI_DISC_DET_STATUS`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_DETAILS`;
DROP TABLE IF EXISTS `COI_DISC_DETAILS_COMMENTS`;
DROP TABLE IF EXISTS `COI_AUDIT_ACTION_TYPE`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_AUDIT_TRAIL`;
DROP TABLE IF EXISTS `COI_ATTACHMENT_TYPE`;
DROP TABLE IF EXISTS `COI_ATTACHMENT_CATEGORY_TYPE`;
DROP TABLE IF EXISTS `COI_ATTA_CATE_TYPE_MAPPING`;
DROP TABLE IF EXISTS `COI_FILE_DATA`;
DROP TABLE IF EXISTS `COI_DISCLOSURE_ATTACHMENTS`;

DROP TABLE IF EXISTS `entity_type`;
CREATE TABLE `entity_type` (
  `ENTITY_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_TYPE_CODE`)
);

DROP TABLE IF EXISTS `entity_status`;
CREATE TABLE `entity_status` (
  `ENTITY_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_STATUS_CODE`)
);

DROP TABLE IF EXISTS `entity_risk_category`;
CREATE TABLE `entity_risk_category` (
  `RISK_CATEGORY_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(45) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `entity`;
CREATE TABLE `entity` (
  `ENTITY_ID` int(11) NOT NULL AUTO_INCREMENT,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `ENTITY_NAME` varchar(90) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `ENTITY_STATUS_CODE` varchar(3) DEFAULT NULL,
  `ENTITY_TYPE_CODE` varchar(3) DEFAULT NULL,
  `RISK_CATEGORY_CODE` varchar(3) DEFAULT NULL,
  `PHONE` varchar(45) DEFAULT NULL,
  `COUNTRY_CODE` varchar(3) DEFAULT NULL,
  `CITY` varchar(90) DEFAULT NULL,
  `ADDRESS` varchar(2000) DEFAULT NULL,
  `ZIP_CODE` varchar(15) DEFAULT NULL,
  `EMAIL_ADDRESS` varchar(60) DEFAULT NULL,
  `WEB_URL` varchar(2000) DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `APPROVED_USER` varchar(60) DEFAULT NULL,
  `APPROVED_TIMESTAMP` datetime DEFAULT NULL,
  PRIMARY KEY (`ENTITY_ID`),
  KEY `ENTITY_FK1_idx` (`ENTITY_STATUS_CODE`),
  KEY `ENTITY_FK2_idx` (`ENTITY_TYPE_CODE`),
  KEY `ENTITY_FK3_idx` (`COUNTRY_CODE`),
  KEY `ENTITY_FK5_idx` (`RISK_CATEGORY_CODE`),
  CONSTRAINT `ENTITY1_FK1` FOREIGN KEY (`ENTITY_STATUS_CODE`) REFERENCES `entity_status` (`ENTITY_STATUS_CODE`),
  CONSTRAINT `ENTITY1_FK2` FOREIGN KEY (`ENTITY_TYPE_CODE`) REFERENCES `entity_type` (`ENTITY_TYPE_CODE`),
  CONSTRAINT `ENTITY1_FK3` FOREIGN KEY (`COUNTRY_CODE`) REFERENCES `country` (`COUNTRY_CODE`),
  CONSTRAINT `ENTITY1_FK5` FOREIGN KEY (`RISK_CATEGORY_CODE`) REFERENCES `entity_risk_category` (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `entity_relationship_type`;
CREATE TABLE `entity_relationship_type` (
  `ENTITY_REL_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_REL_TYPE_CODE`)
);

DROP TABLE IF EXISTS `entity_rel_node_type`;
CREATE TABLE `entity_rel_node_type` (
  `REL_NODE_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`REL_NODE_TYPE_CODE`)
);

DROP TABLE IF EXISTS `entity_relationship`;
CREATE TABLE `entity_relationship` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ENTITY_NUMBER` int(11) NOT NULL,
  `NODE_TYPE_CODE` varchar(3) DEFAULT NULL,
  `NODE_ID` int(11) DEFAULT NULL,
  `ENTITY_REL_TYPE_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `ENITY_RELATIONSHIP_FK1_idx` (`ENTITY_REL_TYPE_CODE`),
  KEY `ENITY_RELATIONSHIP_FK2_idx` (`NODE_TYPE_CODE`),
  CONSTRAINT `ENITY_RELATIONSHIP_FK1` FOREIGN KEY (`ENTITY_REL_TYPE_CODE`) REFERENCES `entity_relationship_type` (`ENTITY_REL_TYPE_CODE`),
  CONSTRAINT `ENITY_RELATIONSHIP_FK2` FOREIGN KEY (`NODE_TYPE_CODE`) REFERENCES `entity_rel_node_type` (`REL_NODE_TYPE_CODE`)
);

DROP TABLE IF EXISTS `person_entity`;
CREATE TABLE `person_entity` (
  `PERSON_ENTITY_ID` int(11) NOT NULL AUTO_INCREMENT,
  `PERSON_ID` varchar(45) DEFAULT NULL,
  `ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `IS_RELATIONSHIP_ACTIVE` varchar(1) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `SPONSORS_RESEARCH` varchar(1) DEFAULT NULL,
  `INVOLVEMENT_START_DATE` date DEFAULT NULL,
  `INVOLVEMENT_END_DATE` date DEFAULT NULL,
  `STUDENT_INVOLVEMENT` varchar(200) DEFAULT NULL,
  `STAFF_INVOLVEMENT` varchar(200) DEFAULT NULL,
  `INSTITUTE_RESOURCE_INVOLVEMENT` varchar(200) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`PERSON_ENTITY_ID`),
  KEY `PERSON_ENTITY_FK1_idx` (`PERSON_ID`),
  KEY `PERSON_ENTITY_FK2_idx` (`ENTITY_ID`),
  CONSTRAINT `PERSON_ENTITY_FK1` FOREIGN KEY (`PERSON_ID`) REFERENCES `person` (`PERSON_ID`),
  CONSTRAINT `PERSON_ENTITY_FK2` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`)
);

DROP TABLE IF EXISTS `coi_disclosure_type`;
CREATE TABLE `coi_disclosure_type` (
  `DISCLOSURE_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`DISCLOSURE_TYPE_CODE`)
);

DROP TABLE IF EXISTS `person_entity_rel_type`;
CREATE TABLE `person_entity_rel_type` (
  `RELATIONSHIP_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`RELATIONSHIP_TYPE_CODE`)
);

DROP TABLE IF EXISTS `valid_person_entity_rel_type`;
CREATE TABLE `valid_person_entity_rel_type` (
  `VALID_PERSON_ENTITY_REL_TYPE_CODE` int(11) NOT NULL AUTO_INCREMENT,
  `DISCLOSURE_TYPE_CODE` varchar(3) DEFAULT NULL,
  `RELATIONSHIP_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `QUESTIONNAIRE_NUMBER` int(11) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`VALID_PERSON_ENTITY_REL_TYPE_CODE`),
  KEY `VALID_PERSON_ENTITY_REL_TYPE_FK1_idx` (`DISCLOSURE_TYPE_CODE`),
  KEY `VALID_PERSON_ENTITY_REL_TYPE_FK2_idx` (`RELATIONSHIP_TYPE_CODE`),
  CONSTRAINT `VALID_PERSON_ENTITY_REL_TYPE_FK1` FOREIGN KEY (`DISCLOSURE_TYPE_CODE`) REFERENCES `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`),
  CONSTRAINT `VALID_PERSON_ENTITY_REL_TYPE_FK2` FOREIGN KEY (`RELATIONSHIP_TYPE_CODE`) REFERENCES `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`)
);

DROP TABLE IF EXISTS `person_entity_relationship`;
CREATE TABLE `person_entity_relationship` (
  `PERSON_ENTITY_REL_ID` int(11) NOT NULL AUTO_INCREMENT,
  `PERSON_ENTITY_ID` int(11) DEFAULT NULL,
  `VALID_PERSON_ENTITY_REL_TYPE_CODE` int(11) DEFAULT NULL,
  `QUESTIONNAIRE_ANS_HEADER_ID` int(11) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `START_DATE` date DEFAULT NULL,
  `END_DATE` date DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`PERSON_ENTITY_REL_ID`),
  KEY `PERSON_ENTITY_RELATIONSHIP_FK1_idx` (`PERSON_ENTITY_ID`),
  KEY `PERSON_ENTITY_RELATIONSHIP_FK2_idx` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`),
  CONSTRAINT `PERSON_ENTITY_RELATIONSHIP_FK1` FOREIGN KEY (`PERSON_ENTITY_ID`) REFERENCES `person_entity` (`PERSON_ENTITY_ID`),
  CONSTRAINT `PERSON_ENTITY_RELATIONSHIP_FK2` FOREIGN KEY (`VALID_PERSON_ENTITY_REL_TYPE_CODE`) REFERENCES `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_project_type`;
CREATE TABLE `coi_project_type` (
  `COI_PROJECT_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COI_PROJECT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_project_proposal`;
CREATE TABLE `coi_project_proposal` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `EXTERNAL_SYSTEM_REF_ID` int(11) DEFAULT NULL,
  `COI_PROJECT_TYPE_CODE` varchar(3) DEFAULT NULL,
  `PROPOSAL_NUMBER` varchar(45) DEFAULT NULL,
  `TITLE` varchar(2000) DEFAULT NULL,
  `PI_PERSON_ID` varchar(45) DEFAULT NULL,
  `PI_NAME` varchar(60) DEFAULT NULL,
  `SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `PRIME_SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `PROPOSAL_START_DATE` date DEFAULT NULL,
  `PROPOSAL_END_DATE` date DEFAULT NULL,
  `LEAD_UNIT_NAME` varchar(45) DEFAULT NULL,
  `FED_AT` datetime DEFAULT NULL,
  `coi_project_proposalcol` varchar(45) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `COI_PROJECT_PROPOSAL_FK1_idx` (`COI_PROJECT_TYPE_CODE`),
  CONSTRAINT `COI_PROJECT_PROPOSAL_FK1` FOREIGN KEY (`COI_PROJECT_TYPE_CODE`) REFERENCES `coi_project_type` (`COI_PROJECT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_project_award`;
CREATE TABLE `coi_project_award` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `EXTERNAL_SYSTEM_REF_ID` int(11) DEFAULT NULL,
  `COI_PROJECT_TYPE_CODE` varchar(3) DEFAULT NULL,
  `AWARD_NUMBER` varchar(45) DEFAULT NULL,
  `TITLE` varchar(2000) DEFAULT NULL,
  `PI_PERSON_ID` varchar(45) DEFAULT NULL,
  `PI_NAME` varchar(60) DEFAULT NULL,
  `SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `PRIME_SPONSOR_NAME` varchar(60) DEFAULT NULL,
  `AWARD_START_DATE` date DEFAULT NULL,
  `AWARD_END_DATE` date DEFAULT NULL,
  `LEAD_UNIT_NAME` varchar(45) DEFAULT NULL,
  `FED_AT` datetime DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `COI_PROJECT_AWARD_FK1_idx` (`COI_PROJECT_TYPE_CODE`),
  CONSTRAINT `COI_PROJECT_AWARD_FK1` FOREIGN KEY (`COI_PROJECT_TYPE_CODE`) REFERENCES `coi_project_type` (`COI_PROJECT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_disclosure_fcoi_type`;
CREATE TABLE `coi_disclosure_fcoi_type` (
  `FCOI_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`FCOI_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_conflict_status_type`;
CREATE TABLE `coi_conflict_status_type` (
  `CONFLICT_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`CONFLICT_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_disposition_status_type`;
CREATE TABLE `coi_disposition_status_type` (
  `DISPOSITION_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`DISPOSITION_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_review_status_type`;
CREATE TABLE `coi_review_status_type` (
  `REVIEW_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`REVIEW_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_risk_category`;
CREATE TABLE `coi_risk_category` (
  `RISK_CATEGORY_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT 'Y',
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `coi_disclosure`;
CREATE TABLE `coi_disclosure` (
  `DISCLOSURE_ID` int(11) NOT NULL AUTO_INCREMENT,
  `PERSON_ID` varchar(45) DEFAULT NULL,
  `DISCLOSURE_NUMBER` int(11) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `FCOI_TYPE_CODE` varchar(3) DEFAULT NULL,
  `CONFLICT_STATUS_CODE` varchar(3) DEFAULT NULL,
  `DISPOSITION_STATUS_CODE` varchar(3) DEFAULT NULL,
  `REVIEW_STATUS_CODE` varchar(3) DEFAULT NULL,
  `RISK_CATEGORY_CODE` varchar(3) DEFAULT NULL,
  `MODULE_CODE` int(11) DEFAULT NULL,
  `MODULE_ITEM_KEY` varchar(20) DEFAULT NULL,
  `EXPIRATION_DATE` date DEFAULT NULL,
  `CERTIFICATION_TEXT` varchar(1000) DEFAULT NULL,
  `CERTIFIED_BY` varchar(60) DEFAULT NULL,
  `CERTIFIED_AT` datetime DEFAULT NULL,
  `REVISION_COMMENT` varchar(1000) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  PRIMARY KEY (`DISCLOSURE_ID`),
  KEY `COI_DISCLOSURE1_FK1_idx` (`PERSON_ID`),
  KEY `COI_DISCLOSURE1_FK2_idx` (`FCOI_TYPE_CODE`),
  KEY `COI_DISCLOSURE1_FK3_idx` (`CONFLICT_STATUS_CODE`),
  KEY `COI_DISCLOSURE1_FK4_idx` (`DISPOSITION_STATUS_CODE`),
  KEY `COI_DISCLOSURE1_FK5_idx` (`REVIEW_STATUS_CODE`),
  KEY `COI_DISCLOSURE1_FK6_idx` (`RISK_CATEGORY_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK1` FOREIGN KEY (`PERSON_ID`) REFERENCES `person` (`PERSON_ID`),
  CONSTRAINT `COI_DISCLOSURE1_FK2` FOREIGN KEY (`FCOI_TYPE_CODE`) REFERENCES `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK3` FOREIGN KEY (`CONFLICT_STATUS_CODE`) REFERENCES `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK4` FOREIGN KEY (`DISPOSITION_STATUS_CODE`) REFERENCES `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK5` FOREIGN KEY (`REVIEW_STATUS_CODE`) REFERENCES `coi_review_status_type` (`REVIEW_STATUS_CODE`),
  CONSTRAINT `COI_DISCLOSURE1_FK6` FOREIGN KEY (`RISK_CATEGORY_CODE`) REFERENCES `coi_risk_category` (`RISK_CATEGORY_CODE`)
);

DROP TABLE IF EXISTS `coi_proj_conflict_status_type`;
CREATE TABLE `coi_proj_conflict_status_type` (
  `PROJECT_CONFLICT_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`PROJECT_CONFLICT_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_discl_ent_proj_details`;
CREATE TABLE `coi_discl_ent_proj_details` (
  `DISCLOSURE_DETAILS_ID` int(11) NOT NULL AUTO_INCREMENT,
  `DISCLOSURE_ID` int(11) DEFAULT NULL,
  `DISCLOSURE_NUMBER` varchar(45) DEFAULT NULL,
  `PERSON_ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `MODULE_CODE` int(11) DEFAULT NULL,
  `MODULE_ITEM_KEY` varchar(20) DEFAULT NULL,
  `PROJECT_CONFLICT_STATUS_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`DISCLOSURE_DETAILS_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK1_idx` (`DISCLOSURE_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK2_idx` (`PERSON_ENTITY_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK3_idx` (`ENTITY_ID`),
  KEY `COI_DISCL_ENT_PROJ_DETAILS_FK4_idx` (`PROJECT_CONFLICT_STATUS_CODE`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK1` FOREIGN KEY (`DISCLOSURE_ID`) REFERENCES `coi_disclosure` (`DISCLOSURE_ID`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK2` FOREIGN KEY (`PERSON_ENTITY_ID`) REFERENCES `person_entity` (`PERSON_ENTITY_ID`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK3` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`),
  CONSTRAINT `COI_DISCL_ENT_PROJ_DETAILS_FK4` FOREIGN KEY (`PROJECT_CONFLICT_STATUS_CODE`) REFERENCES `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`)
);

DROP TABLE IF EXISTS `discl_atta_status`;
CREATE TABLE `discl_atta_status` (
  `ATTA_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ATTA_STATUS_CODE`)
);

DROP TABLE IF EXISTS `discl_file_data`;
CREATE TABLE `discl_file_data` (
  `FILE_DATA_ID` int(11) NOT NULL AUTO_INCREMENT,
  `FILE_PATH` varchar(255) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`FILE_DATA_ID`)
);

DROP TABLE IF EXISTS `discl_atta_type`;
CREATE TABLE `discl_atta_type` (
  `ATTA_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ATTA_TYPE_CODE`)
);

DROP TABLE IF EXISTS `discl_component_type`;
CREATE TABLE `discl_component_type` (
  `COMPONENT_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COMPONENT_TYPE_CODE`)
);

DROP TABLE IF EXISTS `discl_valid_compnent_atta_ty`;
CREATE TABLE `discl_valid_compnent_atta_ty` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMPONENT_TYPE_CODE` varchar(3) DEFAULT NULL,
  `ATTA_TYPE_CODE` varchar(3) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `DISCL_VALID_COMPONENT_ATTA_TYPE_FK1_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_VALID_COMPONENT_ATTA_TYPE_FK2_idx` (`ATTA_TYPE_CODE`),
  CONSTRAINT `DISCL_VALID_COMPONENT_ATTA_TYPE_FK1` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `DISCL_VALID_COMPONENT_ATTA_TYPE_FK2` FOREIGN KEY (`ATTA_TYPE_CODE`) REFERENCES `discl_atta_type` (`ATTA_TYPE_CODE`) ON DELETE RESTRICT ON UPDATE RESTRICT
);

DROP TABLE IF EXISTS `discl_comment_type`;
CREATE TABLE `discl_comment_type` (
  `COMMENT_TYPE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COMMENT_TYPE`)
);

DROP TABLE IF EXISTS `discl_valid_compnent_comnt_ty`;
CREATE TABLE `discl_valid_compnent_comnt_ty` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMPONENT_TYPE_CODE` varchar(1) DEFAULT NULL,
  `COMMENT_TYPE` varchar(1) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `DISCL_VALID_CMPNENT_COMNT_TY_FK1_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_VALID_CMPNENT_COMNT_TY_FK2_idx` (`COMMENT_TYPE`),
  CONSTRAINT `DISCL_VALID_CMPNENT_COMNT_TY_FK1` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`),
  CONSTRAINT `DISCL_VALID_CMPNENT_COMNT_TY_FK2` FOREIGN KEY (`COMMENT_TYPE`) REFERENCES `discl_comment_type` (`COMMENT_TYPE`)
);

DROP TABLE IF EXISTS `discl_comment`;
CREATE TABLE `discl_comment` (
  `COMMENT_ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMPONENT_TYPE_CODE` varchar(1) DEFAULT NULL,
  `COMPONENT_REFERENCE_ID` int(11) DEFAULT NULL,
  `COMPONENT_REFERENCE_NUMBER` varchar(45) DEFAULT NULL,
  `COMMENT_TYPE` varchar(1) DEFAULT NULL,
  `COMMENT_BY_PERSON_ID` varchar(45) DEFAULT NULL,
  `DOCUMENT_OWNER_PERSON_ID` varchar(45) DEFAULT NULL,
  `IS_PRIVATE` varchar(1) DEFAULT NULL,
  `COMMENT` varchar(200) DEFAULT NULL,
  `PARENT_COMMENT_ID` int(11) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`COMMENT_ID`),
  KEY `DISCL_COMMENT_FK1_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_COMMENT_FK2_idx` (`COMMENT_TYPE`),
  CONSTRAINT `DISCL_COMMENT_FK1` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`),
  CONSTRAINT `DISCL_COMMENT_FK2` FOREIGN KEY (`COMMENT_TYPE`) REFERENCES `discl_comment_type` (`COMMENT_TYPE`)
);

DROP TABLE IF EXISTS `coi_traveler_type`;
CREATE TABLE `coi_traveler_type` (
  `TRAVELER_TYPE_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`TRAVELER_TYPE_CODE`)
);

DROP TABLE IF EXISTS `coi_travel_status_type`;
CREATE TABLE `coi_travel_status_type` (
  `TRAVEL_STATUS_CODE` varchar(3) NOT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `IS_ACTIVE` varchar(1) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`TRAVEL_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_travel_disclosure`;
CREATE TABLE `coi_travel_disclosure` (
  `TRAVEL_DISCLOSURE_ID` int(11) NOT NULL AUTO_INCREMENT,
  `TRAVEL_NUMBER` int(11) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `PERSON_ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_ID` int(11) DEFAULT NULL,
  `ENTITY_NUMBER` int(11) DEFAULT NULL,
  `PERSON_ID` varchar(45) DEFAULT NULL,
  `TRAVEL_STATUS_CODE` varchar(3) DEFAULT NULL,
  `IS_SPONSORED_TRAVEL` varchar(1) DEFAULT NULL,
  `TRAVEL_TITLE` varchar(200) DEFAULT NULL,
  `PURPOSE_OF_THE_TRIP` varchar(2000) DEFAULT NULL,
  `TRAVEL_AMOUNT` decimal(12,2) DEFAULT NULL,
  `TRAVEL_START_DATE` date DEFAULT NULL,
  `NO_OF_DAYS` int(11) DEFAULT NULL,
  `DESTINATION_CITY` varchar(90) DEFAULT NULL,
  `DESTINATION_COUNTRY` varchar(45) DEFAULT NULL,
  `RELATIONSHIP_TO_YOUR_RESEARCH` varchar(60) DEFAULT NULL,
  `ACKNOWLEDGE_BY` varchar(60) DEFAULT NULL,
  `ACKNOWLEDGE_AT` varchar(45) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_USER` varchar(60) DEFAULT NULL,
  `CREATE_TIMESTAMP` datetime DEFAULT NULL,
  `TRAVEL_END_DATE` date DEFAULT NULL,
  `STATE` varchar(60) DEFAULT NULL,
  `IS_INTERNATIONAL_TRAVEL` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`TRAVEL_DISCLOSURE_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK1_idx` (`PERSON_ENTITY_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK2_idx` (`ENTITY_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK3_idx` (`PERSON_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_FK4_idx` (`TRAVEL_STATUS_CODE`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK1` FOREIGN KEY (`PERSON_ENTITY_ID`) REFERENCES `person_entity` (`PERSON_ENTITY_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK2` FOREIGN KEY (`ENTITY_ID`) REFERENCES `entity` (`ENTITY_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK3` FOREIGN KEY (`PERSON_ID`) REFERENCES `person` (`PERSON_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_FK4` FOREIGN KEY (`TRAVEL_STATUS_CODE`) REFERENCES `coi_travel_status_type` (`TRAVEL_STATUS_CODE`)
);

DROP TABLE IF EXISTS `coi_travel_disclosure_traveler`;
CREATE TABLE `coi_travel_disclosure_traveler` (
  `TRAVEL_TRAVELER_ID` int(11) NOT NULL AUTO_INCREMENT,
  `TRAVEL_DISCLOSURE_ID` int(11) DEFAULT NULL,
  `TRAVELER_TYPE_CODE` varchar(3) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`TRAVEL_TRAVELER_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_TRAVELER_FK1_idx` (`TRAVEL_DISCLOSURE_ID`),
  KEY `COI_TRAVEL_DISCLOSURE_TRAVELER_FK2_idx` (`TRAVELER_TYPE_CODE`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_TRAVELER_FK1` FOREIGN KEY (`TRAVEL_DISCLOSURE_ID`) REFERENCES `coi_travel_disclosure` (`TRAVEL_DISCLOSURE_ID`),
  CONSTRAINT `COI_TRAVEL_DISCLOSURE_TRAVELER_FK2` FOREIGN KEY (`TRAVELER_TYPE_CODE`) REFERENCES `coi_traveler_type` (`TRAVELER_TYPE_CODE`)
);

DROP TABLE IF EXISTS `discl_attachment`;
CREATE TABLE `discl_attachment` (
  `ATTACHMENT_ID` int(11) NOT NULL AUTO_INCREMENT,
  `COMMENT_ID` int(11) DEFAULT NULL,
  `COMPONENT_TYPE_CODE` varchar(1) DEFAULT NULL,
  `COMPONENT_REFERENCE_ID` int(11) DEFAULT NULL,
  `COMPONENT_REFERENCE_NUMBER` varchar(45) DEFAULT NULL,
  `ATTACHMENT_NUMBER` int(11) DEFAULT NULL,
  `VERSION_NUMBER` int(11) DEFAULT NULL,
  `VERSION_STATUS` varchar(45) DEFAULT NULL,
  `ATTA_TYPE_CODE` varchar(1) DEFAULT NULL,
  `ATTA_STATUS_CODE` varchar(1) DEFAULT NULL,
  `DOCUMENT_OWNER_PERSON_ID` varchar(45) DEFAULT NULL,
  `FILE_NAME` varchar(45) DEFAULT NULL,
  `MIME_TYPE` varchar(255) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `FILE_DATA_ID` int(11) DEFAULT NULL,
  `UPDATE_TIMESTAMP` datetime DEFAULT NULL,
  `UPDATE_USER` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`ATTACHMENT_ID`),
  KEY `DISCL_ATTACHMENT_FK1_idx` (`COMMENT_ID`),
  KEY `DISCL_ATTACHMENT_FK2_idx` (`COMPONENT_TYPE_CODE`),
  KEY `DISCL_ATTACHMENT_FK3_idx` (`ATTA_TYPE_CODE`),
  KEY `DISCL_ATTACHMENT_FK4_idx` (`ATTA_STATUS_CODE`),
  KEY `DISCL_ATTACHMENT_FK5_idx` (`FILE_DATA_ID`),
  CONSTRAINT `DISCL_ATTACHMENT_FK1` FOREIGN KEY (`COMMENT_ID`) REFERENCES `discl_comment` (`COMMENT_ID`),
  CONSTRAINT `DISCL_ATTACHMENT_FK2` FOREIGN KEY (`COMPONENT_TYPE_CODE`) REFERENCES `discl_component_type` (`COMPONENT_TYPE_CODE`),
  CONSTRAINT `DISCL_ATTACHMENT_FK3` FOREIGN KEY (`ATTA_TYPE_CODE`) REFERENCES `discl_atta_type` (`ATTA_TYPE_CODE`),
  CONSTRAINT `DISCL_ATTACHMENT_FK4` FOREIGN KEY (`ATTA_STATUS_CODE`) REFERENCES `discl_atta_status` (`ATTA_STATUS_CODE`),
  CONSTRAINT `DISCL_ATTACHMENT_FK5` FOREIGN KEY (`FILE_DATA_ID`) REFERENCES `discl_file_data` (`FILE_DATA_ID`)
);

SET FOREIGN_KEY_CHECKS=1; 

INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Publicly Owned','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Private','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Non-Profit','Y',now(),'quickstart');
INSERT INTO `entity_type` (`ENTITY_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','For-Profit','Y',now(),'quickstart');

INSERT INTO `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`,`DISCLOSURE_TYPE_CODE`,`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`QUESTIONNAIRE_NUMBER`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES (1,'1','1','Self',NULL,'Y',now(),'quickstart');
INSERT INTO `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`,`DISCLOSURE_TYPE_CODE`,`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`QUESTIONNAIRE_NUMBER`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES (2,'1','2','Spouse',NULL,'Y',now(),'quickstart');
INSERT INTO `valid_person_entity_rel_type` (`VALID_PERSON_ENTITY_REL_TYPE_CODE`,`DISCLOSURE_TYPE_CODE`,`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`QUESTIONNAIRE_NUMBER`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES (3,'1','3','Dependant',NULL,'Y',now(),'quickstart');

INSERT INTO `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Self','Y',now(),'quickstart');
INSERT INTO `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Spouse','Y',now(),'quickstart');
INSERT INTO `person_entity_rel_type` (`RELATIONSHIP_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Dependant','Y',now(),'quickstart');

INSERT INTO `entity_status` (`ENTITY_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Active','Y',now(),'quickstart');
INSERT INTO `entity_status` (`ENTITY_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Inactive','Y',now(),'quickstart');
INSERT INTO `entity_status` (`ENTITY_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Unverified','Y',now(),'quickstart');

INSERT INTO `entity_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','High','Y',now(),'quickstart');
INSERT INTO `entity_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Medium','Y',now(),'quickstart');
INSERT INTO `entity_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Low','Y',now(),'quickstart');

INSERT INTO `coi_traveler_type` (`TRAVELER_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Self','Y',now(),'quickstart');
INSERT INTO `coi_traveler_type` (`TRAVELER_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Spouse/Domestic Partner','Y',now(),'quickstart');
INSERT INTO `coi_traveler_type` (`TRAVELER_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Dependent Children','Y',now(),'quickstart');

INSERT INTO `coi_travel_status_type` (`TRAVEL_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Pending','Y',now(),'quickstart');
INSERT INTO `coi_travel_status_type` (`TRAVEL_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Submitted','Y',now(),'quickstart');
INSERT INTO `coi_travel_status_type` (`TRAVEL_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Approved','Y',now(),'quickstart');

INSERT INTO `coi_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','High','Y',now(),'quickstart');
INSERT INTO `coi_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Medium','Y',now(),'quickstart');
INSERT INTO `coi_risk_category` (`RISK_CATEGORY_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Low','Y',now(),'quickstart');

INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Pending','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Submitted','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Review in progress','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Completed','Y',now(),'quickstart');
INSERT INTO `coi_review_status_type` (`REVIEW_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('5','Revison requested','Y',now(),'quickstart');

INSERT INTO `coi_project_type` (`COI_PROJECT_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Award','Y',now(),'quickstart');
INSERT INTO `coi_project_type` (`COI_PROJECT_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Ad-Hoc Award','Y',now(),'quickstart');
INSERT INTO `coi_project_type` (`COI_PROJECT_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Development Proposal','Y',now(),'quickstart');
INSERT INTO `coi_project_type` (`COI_PROJECT_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Ad-Hoc Proposal','Y',now(),'quickstart');

INSERT INTO `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','No Conflict','Y',now(),'quickstart');
INSERT INTO `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Potential Conflict','Y',now(),'quickstart');
INSERT INTO `coi_proj_conflict_status_type` (`PROJECT_CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Conflict Identified','Y',now(),'quickstart');

INSERT INTO `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Pending','Y',now(),'quickstart');
INSERT INTO `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Void','Y',now(),'quickstart');
INSERT INTO `coi_disposition_status_type` (`DISPOSITION_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Approved','Y',now(),'quickstart');

INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','Financial Conflict of Interest','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Other Professional Activities','N',now(),'quickstart');
INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Project Disclosures','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_type` (`DISCLOSURE_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Travel Disclosures','N',now(),'quickstart');

INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','FCOI','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Proposal','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Award','Y',now(),'quickstart');
INSERT INTO `coi_disclosure_fcoi_type` (`FCOI_TYPE_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Revision','Y',now(),'quickstart');

INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('1','No Conflict','Y',now(),'quickstart');
INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('2','Potential Conflict','Y',now(),'quickstart');
INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('3','Conflict Identified','Y',now(),'quickstart');
INSERT INTO `coi_conflict_status_type` (`CONFLICT_STATUS_CODE`,`DESCRIPTION`,`IS_ACTIVE`,`UPDATE_TIMESTAMP`,`UPDATE_USER`) VALUES ('4','Pending','Y',now(),'quickstart');

DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_DASHBOARD_COUNT;
DROP PROCEDURE IF EXISTS GET_SFI_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_SFI_DASHBOARD_COUNT;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_ADMIN_DASHBOARD;
DROP PROCEDURE IF EXISTS GET_COI_DISCLOSURE_ADMIN_DASHBOARD_COUNT;
DROP FUNCTION IF EXISTS FN_EVAL_DISCLOSURE_QUESTIONNAIRE;
DROP PROCEDURE IF EXISTS GET_DISCLOSURE_RELATIONS;
DROP PROCEDURE IF EXISTS GET_ALL_SYSTEM_ENTITY_LIST;
DROP PROCEDURE IF EXISTS GET_ALL_SYSTEM_ENTITY_LIST_COUNT;
DROP PROCEDURE IF EXISTS SYNC_PROJECTS_DISCLOSURE;

\. ./Procedures/GET_COI_DISCLOSURE_DASHBOARD.sql
\. ./Procedures/GET_COI_DISCLOSURE_DASHBOARD_COUNT.sql
\. ./Procedures/GET_SFI_DASHBOARD.sql
\. ./Procedures/GET_SFI_DASHBOARD_COUNT.sql
\. ./Procedures/GET_COI_DISCLOSURE_ADMIN_DASHBOARD.sql
\. ./Procedures/GET_COI_DISCLOSURE_ADMIN_DASHBOARD_COUNT.sql
\. ./Functions/FN_EVAL_DISCLOSURE_QUESTIONNAIRE.sql
\. ./Procedures/GET_DISCLOSURE_RELATIONS.sql
\. ./Procedures/GET_ALL_SYSTEM_ENTITY_LIST.sql
\. ./Procedures/GET_ALL_SYSTEM_ENTITY_LIST_COUNT.sql
\. ./Procedures/SYNC_PROJECTS_DISCLOSURE.sql
