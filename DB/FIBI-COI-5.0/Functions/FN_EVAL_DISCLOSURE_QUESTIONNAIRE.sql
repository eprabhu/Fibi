DELIMITER //
CREATE FUNCTION `FN_EVAL_DISCLOSURE_QUESTIONNAIRE`(
AV_MODULE_CODE    		 INT,
AV_SUB_MODULE_CODE    	 INT,
AV_MODULE_ITEM_KEY   INT
) RETURNS int
    DETERMINISTIC
BEGIN

DECLARE DONE INT DEFAULT 0;
DECLARE LI_QUEST_COUNT INT DEFAULT 1;
DECLARE LI_QUEST_ANS_HEADER_ID INT;
DECLARE LI_QUESTIONNAIRE_ID INT;
DECLARE LI_ANS_COUNT INT DEFAULT 0;

DECLARE QUESTIONNAIRE_CUR CURSOR FOR
SELECT  T2.QUESTIONNAIRE_ID,
		T3.QUESTIONNAIRE_ANS_HEADER_ID
        FROM QUEST_USAGE T1 
		INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID 
		LEFT OUTER JOIN QUEST_ANSWER_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID
		AND T1.MODULE_ITEM_CODE = T3.MODULE_ITEM_CODE
		AND T3.MODULE_ITEM_KEY = AV_MODULE_ITEM_KEY
		AND T3.MODULE_SUB_ITEM_KEY = 0
		WHERE T1.MODULE_SUB_ITEM_CODE = AV_SUB_MODULE_CODE
		AND  T1.MODULE_ITEM_CODE = AV_MODULE_CODE
		AND (T2.IS_FINAL = 'Y' OR
		((select count(*) from QUEST_HEADER where QUESTIONNAIRE_NUMBER =T2.QUESTIONNAIRE_NUMBER and IS_FINAL = 'Y') = 0
		AND (T3.QUESTIONNAIRE_ID IN (SELECT MAX(S.QUESTIONNAIRE_ID) FROM QUEST_ANSWER_HEADER S
		INNER JOIN QUEST_HEADER T4 ON S.QUESTIONNAIRE_ID = T4.QUESTIONNAIRE_ID
		WHERE S.MODULE_ITEM_KEY = AV_MODULE_ITEM_KEY AND T3.MODULE_SUB_ITEM_KEY = 0 AND T4.QUESTIONNAIRE_NUMBER = T2.QUESTIONNAIRE_NUMBER))))
		ORDER BY T1.SORT_ORDER ASC;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = 1;

OPEN QUESTIONNAIRE_CUR;

    quest_loop: LOOP
        FETCH QUESTIONNAIRE_CUR INTO LI_QUESTIONNAIRE_ID, LI_QUEST_ANS_HEADER_ID;
        IF DONE = 1 THEN
            LEAVE quest_loop;
        END IF;
        
		IF LI_QUEST_COUNT = 1 THEN
			IF LI_QUEST_ANS_HEADER_ID is null THEN
				RETURN 0;
			END IF;

            SELECT count(ANSWER) INTO LI_ANS_COUNT 
            FROM coi_quest_answer qa
            WHERE qa.QUESTION_ID = (select QUESTION_ID from quest_question where QUESTION_NUMBER = 455 AND QUESTIONNAIRE_ID = LI_QUESTIONNAIRE_ID) 
            AND qa.QUESTIONNAIRE_ANS_HEADER_ID = LI_QUEST_ANS_HEADER_ID
            AND qa.ANSWER = 'Yes';

			IF LI_ANS_COUNT < 1 THEN
				RETURN 0;
			END IF;
            
			SET LI_QUEST_COUNT = LI_QUEST_COUNT + 1;
			SET LI_ANS_COUNT = 0;

        ELSEIF LI_QUEST_COUNT = 2 THEN
			IF LI_QUEST_ANS_HEADER_ID is null THEN
				RETURN 0;
			END IF;
            
            SELECT count(ANSWER) into LI_ANS_COUNT 
            FROM coi_quest_answer qa
            WHERE qa.QUESTION_ID = (SELECT QUESTION_ID FROM quest_question WHERE QUESTION_NUMBER = 921 AND QUESTIONNAIRE_ID = LI_QUESTIONNAIRE_ID) 
            AND qa.QUESTIONNAIRE_ANS_HEADER_ID = LI_QUEST_ANS_HEADER_ID
            AND qa.ANSWER = 'Yes';
			
			IF LI_ANS_COUNT < 1 THEN
				RETURN 0;
			END IF;
            
        END IF;
        
    END LOOP;

    CLOSE QUESTIONNAIRE_CUR;

RETURN 1;
END
//
