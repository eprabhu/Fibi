DELIMITER //
CREATE PROCEDURE `EVALUATE_FORM_VALIDATION`(
AV_MODULE_CODE           VARCHAR(200),
AV_SUBMODULE_CODE        VARCHAR(200),
AV_MODULE_ITEM_KEY       VARCHAR(200),
AV_UPDATE_USER           VARCHAR(200),
AV_LOGGIN_PERSON_ID      VARCHAR(200),
AV_SUB_MODULE_ITEM_KEY   VARCHAR(20),
AV_RULE_ID_LIST          LONGTEXT
)
    DETERMINISTIC
BEGIN
DECLARE LS_RESULT             VARCHAR(10);
DECLARE LS_FILTER_CONDITION   VARCHAR(1000);
DECLARE LS_FLAG               DECIMAL(1,0);
DECLARE LS_DYNAMIC_QRY        VARCHAR(4000);

DECLARE  LS_RULE_ID INT(6);
DECLARE  LS_RULE_TYPE VARCHAR(2);
DECLARE  LS_RULE_EXPRESSION VARCHAR(300);
DECLARE  LS_USER_MESSAGE VARCHAR(4000);

DECLARE DONE1 INT DEFAULT FALSE;

DECLARE RULE_CURSOR CURSOR FOR 
 SELECT T1.RULE_ID,T1.RULE_TYPE,T1.RULE_EXPRESSION,T1.USER_MESSAGE FROM BUSINESS_RULES T1
 WHERE FIND_IN_SET(T1.RULE_ID, AV_RULE_ID_LIST)  
 AND T1.RULE_TYPE IN ('VE','VW')
 AND T1.IS_ACTIVE = 'Y';                    

DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE1 = TRUE;
SET LS_FILTER_CONDITION ='';
SET LS_DYNAMIC_QRY = '';


			OPEN RULE_CURSOR;
			RULE_CURSOR_LOOP : LOOP
					FETCH RULE_CURSOR INTO LS_RULE_ID,LS_RULE_TYPE,LS_RULE_EXPRESSION,LS_USER_MESSAGE;
					IF DONE1 THEN
						LEAVE RULE_CURSOR_LOOP;
					END IF;
					
					
				  CALL RULE_EVALUATE_EXPRESSION(AV_MODULE_CODE,
														   AV_SUBMODULE_CODE,
														   AV_MODULE_ITEM_KEY,
														   LS_RULE_ID,
														   LS_RULE_EXPRESSION,
														   AV_UPDATE_USER,
														   AV_LOGGIN_PERSON_ID,
														   AV_SUB_MODULE_ITEM_KEY,
														   @RESULT_EXP
														   );   
					
					SET LS_RESULT = @RESULT_EXP;
							 IF LS_RESULT = 'TRUE' THEN
								  SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,LS_RULE_ID,',');
								  SET LS_FLAG = 1;
							 END IF;
				   
			END LOOP;
			CLOSE RULE_CURSOR;
			
			SET DONE1 = FALSE;

		SELECT TRIM( TRAILING ',' FROM TRIM(LS_FILTER_CONDITION))
		INTO LS_FILTER_CONDITION FROM DUAL;

   IF LS_FLAG = 1 THEN

        SET LS_DYNAMIC_QRY := CONCAT('SELECT T1.RULE_TYPE AS VALIDATION_TYPE,
                             T1.USER_MESSAGE AS VALIDATION_MESSAGE FROM BUSINESS_RULES T1 WHERE RULE_ID IN (',LS_FILTER_CONDITION,')');
		-- select LS_DYNAMIC_QRY;
        SET @STATEMENT = LS_DYNAMIC_QRY;
        PREPARE QUERY_STATEMENT FROM @STATEMENT;
        EXECUTE QUERY_STATEMENT;
        
    END IF;

END
//
