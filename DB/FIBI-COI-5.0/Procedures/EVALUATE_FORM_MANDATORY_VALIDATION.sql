DELIMITER //
CREATE PROCEDURE `EVALUATE_FORM_MANDATORY_VALIDATION`(
AV_MODULE_CODE           VARCHAR(200),
AV_SUBMODULE_CODE        VARCHAR(200),
AV_MODULE_ITEM_KEY       VARCHAR(200),
AV_SUB_MODULE_ITEM_KEY   VARCHAR(20),
AV_FORM_ID 				 INT,
AV_SECTION_ID 			 INT,
AV_COMPONENT_ID 		 INT
)
    DETERMINISTIC
BEGIN

DECLARE LS_CUST_DATA_FLAG INT DEFAULT 0;
DECLARE LS_QUEST_FLAG VARCHAR(1) DEFAULT 'N';
DECLARE LI_FORM_BUILDER_SECT_COMP_ID INT;
DECLARE LS_COMPONENT_TYPE_CODE VARCHAR(10);
DECLARE LI_COMPONENT_REF_ID INT;
DECLARE LS_VALIDATION_MESSAGE VARCHAR(2000);
DECLARE LS_COMP_ID_LIST VARCHAR(2000);

DECLARE DONE1 INT DEFAULT FALSE;
DECLARE RULE_CURSOR CURSOR FOR 
SELECT  T1.FORM_BUILDER_SECT_COMP_ID, 
		T1.COMPONENT_TYPE_CODE, 
        T1.COMPONENT_REF_ID, 
        T1.VALIDATION_MESSAGE
FROM FORM_BUILDER_SECTION_COMPONENT T1
WHERE FIND_IN_SET(T1.FORM_BUILDER_SECT_COMP_ID, LS_COMP_ID_LIST)
AND T1.IS_MANDATORY = 'Y';                      

DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE1 = TRUE;

CREATE TEMPORARY TABLE IF NOT EXISTS RESULT_TABLE (
        VALIDATION_TYPE VARCHAR(2),
        VALIDATION_MESSAGE VARCHAR(2000),
        FORM_BUILDER_SECT_COMP_ID INT
);

    IF AV_FORM_ID IS NOT NULL THEN

            SELECT GROUP_CONCAT(FORM_BUILDER_SECT_COMP_ID) INTO LS_COMP_ID_LIST  
			FROM FORM_BUILDER_SECTION_COMPONENT 
			WHERE FORM_BUILDER_SECTION_ID IN 
            (SELECT FORM_BUILDER_SECTION_ID 
             FROM FORM_BUILDER_SECTION 
             WHERE FORM_BUILDER_ID = AV_FORM_ID);

    ELSEIF AV_SECTION_ID IS NOT NULL THEN
        SELECT GROUP_CONCAT(FORM_BUILDER_SECT_COMP_ID) INTO LS_COMP_ID_LIST   
        FROM FORM_BUILDER_SECTION_COMPONENT 
        WHERE FORM_BUILDER_SECTION_ID = AV_SECTION_ID;

	ELSEIF AV_SECTION_ID IS NOT NULL THEN
		SET LS_COMP_ID_LIST = AV_COMPONENT_ID;
	END IF;

			OPEN RULE_CURSOR;
			RULE_CURSOR_LOOP : LOOP
					FETCH RULE_CURSOR INTO LI_FORM_BUILDER_SECT_COMP_ID, LS_COMPONENT_TYPE_CODE,LI_COMPONENT_REF_ID,LS_VALIDATION_MESSAGE;
					IF DONE1 THEN
						LEAVE RULE_CURSOR_LOOP;
					END IF;
				 
				IF LS_COMPONENT_TYPE_CODE = 'CE' THEN
				SELECT COUNT(T1.VALUE) INTO LS_CUST_DATA_FLAG
                FROM CUSTOM_DATA T1
                WHERE T1.CUSTOM_DATA_ELEMENTS_ID = LI_COMPONENT_REF_ID 
                AND T1.MODULE_ITEM_CODE = AV_MODULE_CODE
                AND T1.MODULE_SUB_ITEM_CODE= AV_SUBMODULE_CODE
                AND T1.MODULE_ITEM_KEY = AV_MODULE_ITEM_KEY
                AND T1.MODULE_SUB_ITEM_KEY = LI_FORM_BUILDER_SECT_COMP_ID
                AND T1.VALUE is not null 
                AND TRIM(T1.VALUE) <> '';

                IF LS_CUST_DATA_FLAG = 0 THEN
					INSERT INTO RESULT_TABLE VALUES ('VM', LS_VALIDATION_MESSAGE, LI_FORM_BUILDER_SECT_COMP_ID);
                    SET LS_CUST_DATA_FLAG = 0;
				END IF;
                SET LS_CUST_DATA_FLAG = 0;

            ELSEIF LS_COMPONENT_TYPE_CODE = 'QN' THEN
				SELECT T1.QUESTIONNAIRE_COMPLETED_FLAG INTO LS_QUEST_FLAG
                FROM QUEST_ANSWER_HEADER T1 
                WHERE T1.QUESTIONNAIRE_ID = LI_COMPONENT_REF_ID 
                AND T1.MODULE_ITEM_CODE = AV_MODULE_CODE
                AND T1.MODULE_SUB_ITEM_CODE= AV_SUBMODULE_CODE
                AND T1.MODULE_ITEM_KEY = AV_MODULE_ITEM_KEY
                AND T1.MODULE_SUB_ITEM_KEY = LI_FORM_BUILDER_SECT_COMP_ID;

                IF LS_QUEST_FLAG <> 'Y' THEN
					INSERT INTO RESULT_TABLE VALUES ('VM', LS_VALIDATION_MESSAGE, LI_FORM_BUILDER_SECT_COMP_ID);
                    SET LS_QUEST_FLAG = 'N';
				END IF;
				SET LS_QUEST_FLAG = 'N';
			END IF;
           
			SET DONE1 = FALSE;
			END LOOP;
			CLOSE RULE_CURSOR;

	SELECT VALIDATION_TYPE, VALIDATION_MESSAGE, FORM_BUILDER_SECT_COMP_ID
	FROM RESULT_TABLE;

    DROP TEMPORARY TABLE IF EXISTS RESULT_TABLE;

END
//
