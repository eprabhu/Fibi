DELIMITER //
CREATE PROCEDURE `RULE_EVALUATE_FUNCTION`(
AV_RULE_ID               INT,
AV_RULE_EXPRESSION_ID    DECIMAL(38,0),
AV_MODULE_CODE           DECIMAL(38,0),
AV_SUBMODULE_CODE        DECIMAL(38,0),
AV_MODULE_ITEM_KEY       VARCHAR(200),
AV_UPDATE_USER           VARCHAR(200),
AV_LOGGIN_PERSON_ID      VARCHAR(200),
AV_SUB_MODULE_ITEM_KEY   VARCHAR(20),
OUT EXPR_RESULT VARCHAR(200)
)
    DETERMINISTIC
BEGIN
DECLARE LS_LVALUE               VARCHAR(4000);
DECLARE LS_OPERATOR             VARCHAR(25);
DECLARE LS_RVALUE               VARCHAR(4000);
DECLARE LS_FUNCTION_NAME        VARCHAR(50);
DECLARE LS_DB_FUNCTION_NAME     VARCHAR(32);
DECLARE LS_RETURN               VARCHAR(10);
DECLARE LL_QUERY_STRING         VARCHAR(5000);
DECLARE LS_ARGUMENTS            VARCHAR(5000);
DECLARE LS_ARGUMENT_VALUE       VARCHAR(1000);
DECLARE LS_QUERY                LONGTEXT;


DECLARE LS_AWARD_NUMBER         VARCHAR(12);

DECLARE LS_SPONSOR_CODE         VARCHAR(50);
DECLARE LS_ACCOUNT_TYPE         DECIMAL(3,0);
DECLARE LS_ACTIVITY_TYPE_CODE   DECIMAL(3,0);
DECLARE LS_UNIT_NUMBER          VARCHAR(8);
DECLARE LS_EFFECTIVE_DATE       VARCHAR(20);
DECLARE LS_TYPE_CODE            INT(10);

DECLARE LS_ARGUMENT_NAME   VARCHAR(30);
DECLARE LS_DEFAULT_VALUE   VARCHAR(200);
DECLARE LS_ARG_TYPE        VARCHAR(1);
DECLARE LI_CNT			   INT;

DECLARE LS_NEGOTIATION_ID           DECIMAL(22,0);
DECLARE LS_NEGOTIATION_STATUS_CODE   VARCHAR(3);
DECLARE LS_WORKFLOW_STATUS_CODE       VARCHAR(3);
DECLARE LS_AGREEMENT_TYPE_CODE       VARCHAR(3);
DECLARE LS_NEGOTIATOR_PERSON_ID       VARCHAR(40);
DECLARE LS_NEGOTIATOR_FULL_NAME       VARCHAR(90);
DECLARE LS_START_DATE                 DATETIME;
DECLARE LS_END_DATE                  DATETIME;
DECLARE LS_SUMMARY_COMMENT            VARCHAR(4000);
DECLARE LS_NEGOTIATOR_COMMENT         VARCHAR(4000);
DECLARE LS_LEGAL_COMMENT                VARCHAR(4000);
DECLARE LS_SPONSOR_AWARD_NUMBER       VARCHAR(70);


DECLARE  LS_AGREEMENT_REQUEST_ID                DECIMAL(12,0);
DECLARE  LS_TITLE                                               VARCHAR(1000);
DECLARE  LS_AGREEMENT_STATUS_CODE               VARCHAR(3);
DECLARE  LS_REQUESTOR_PERSON_ID                 VARCHAR(40);
DECLARE  LS_REQUESTOR_NAME                              VARCHAR(90);
DECLARE  LS_PI_PERSON_ID                                VARCHAR(40);
DECLARE  LS_PI_NAME                                             VARCHAR(90);
DECLARE  LS_NEGOTIATOR_NAME                             VARCHAR(90);
DECLARE  LS_PI_UNIT_NAME                                VARCHAR(60);
DECLARE  LS_START_DATETIME                              DATETIME;
DECLARE  LS_END_DATETIME                                DATETIME;
DECLARE  LS_DOCUMENT_TYPE_CODE                  VARCHAR(255);
DECLARE  LS_ACT_TYPE_CODE               VARCHAR(3);

DECLARE  LI_GRANT_HEADER_ID                             INT(10);
DECLARE  LI_GRANT_TYPE_CODE                             INT(3);
DECLARE  LI_GRANT_STATUS_CODE                   INT(3);
DECLARE  LS_SPONSOR_TYPE_CODE                   VARCHAR(3);
DECLARE  LS_HOME_UNIT_NAME                              VARCHAR(100);
DECLARE  LS_HOME_UNIT_NUMBER                    VARCHAR(8);
DECLARE  LI_SR_HEADER_ID                   INT(11);

DECLARE LI_COUNT INT;
DECLARE LI_TASK_ID INT;
DECLARE LS_TASK_TYPE_CODE VARCHAR(3);
DECLARE LS_TASK_STATUS_CODE VARCHAR(3);
DECLARE LS_ASSIGNEE_PERSON_ID VARCHAR(40);
DECLARE LS_DESCRIPTION VARCHAR(4000);
DECLARE LS_DUE_DATE DATETIME;
DECLARE LI_CLAIM_ID int(10);
DECLARE LI_PROGRESS_REPORT_ID int(22);
DECLARE LI_GRANT_ID int(11);

DECLARE LI_DISCLOSURE_ID INT;
DECLARE LI_DISCLOSURE_NUMBER INT;
DECLARE LI_REVIEW_STATUS_CODE INT;

DECLARE LI_TRAVEL_DISCLOSURE_ID INT;
DECLARE LI_TRAVEL_NUMBER INT;   

DECLARE LI_OPA_DISCLOSURE_ID INT;
DECLARE LS_OPA_DISCLOSURE_NUMBER VARCHAR(20);

DECLARE DONE1 INT DEFAULT FALSE;

DECLARE ARG_CURSOR CURSOR FOR
SELECT T1.ARGUMENT_NAME,T1.DEFAULT_VALUE,ARGUMENT_TYPE FROM BUSINESS_RULE_FUNCTION_ARG T1
WHERE T1.FUNCTION_NAME = LS_FUNCTION_NAME ORDER BY T1.ARGUMENT_SEQUENCE_NUMBER;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE1 = TRUE;
 SET LS_ARGUMENTS = '';

   SELECT
        T1.LVALUE,
        CASE WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'EQUAL TO' THEN '='
                         WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'GREATER THAN' THEN '>'
                         WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'GREATER THAN EQUAL TO' THEN '>='
                         WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'LESS THAN' THEN '<'
                         WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'LESS THAN EQUAL TO' THEN '<='
                         WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'NOT EQUAL TO' THEN '<>'
                         WHEN TRIM(UPPER(T1.CONDITION_OPERATOR)) = 'CONTAINS' THEN '%'
         END,
        T1.RVALUE,
        T2.DB_FUNCTION_NAME,
        T2.FUNCTION_NAME
    INTO
        LS_LVALUE,
        LS_OPERATOR,
        LS_RVALUE,
        LS_DB_FUNCTION_NAME,
        LS_FUNCTION_NAME
    FROM BUSINESS_RULES_EXPERSSION T1
    INNER JOIN BUSINESS_RULE_FUNCTION T2 ON T1.LVALUE = T2.FUNCTION_NAME
    WHERE T1.RULES_EXPERSSION_ID = AV_RULE_EXPRESSION_ID;




    IF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 0 THEN

        SELECT
            T1.AWARD_NUMBER,
            T1.TITLE,
            T1.SPONSOR_CODE,
            T1.ACCOUNT_TYPE_CODE,
            T1.ACTIVITY_TYPE_CODE,
            T1.LEAD_UNIT_NUMBER,
            T1.AWARD_EFFECTIVE_DATE,
            T1.SPONSOR_AWARD_NUMBER
        INTO
            LS_AWARD_NUMBER,
            LS_TITLE,
            LS_SPONSOR_CODE,
            LS_ACCOUNT_TYPE,
            LS_ACTIVITY_TYPE_CODE,
            LS_UNIT_NUMBER,
            LS_EFFECTIVE_DATE,
            LS_SPONSOR_AWARD_NUMBER
        FROM AWARD T1
        WHERE T1.AWARD_ID = AV_MODULE_ITEM_KEY;

        ELSEIF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 2 THEN

                SELECT
                        T1.TASK_TYPE_CODE,
                        T1.TASK_STATUS_CODE,
                        T1.ASSIGNEE_PERSON_ID,
                        T1.DESCRIPTION,
                        T1.DUE_DATE,
                        T1.START_DATE
                INTO
                        LS_TASK_TYPE_CODE,
                        LS_TASK_STATUS_CODE,
                        LS_ASSIGNEE_PERSON_ID,
                        LS_DESCRIPTION,
                        LS_DUE_DATE,
                        LS_START_DATE

                FROM TASK T1 WHERE TASK_ID = AV_SUB_MODULE_ITEM_KEY;

    ELSEIF AV_MODULE_CODE = 3 AND AV_SUBMODULE_CODE in (0,4,1,3) THEN

                SELECT COUNT(1) INTO LI_COUNT
        FROM EPS_PROPOSAL
        WHERE PROPOSAL_ID = AV_MODULE_ITEM_KEY;

                IF LI_COUNT > 0 THEN
         SELECT
           TYPE_CODE,
            HOME_UNIT_NUMBER,
            SPONSOR_CODE,
            ACTIVITY_TYPE_CODE,
			GRANT_HEADER_ID
        INTO
            LS_TYPE_CODE,
            LS_UNIT_NUMBER,
            LS_SPONSOR_CODE,
            LS_ACT_TYPE_CODE,
			LI_GRANT_ID
        FROM EPS_PROPOSAL
        WHERE PROPOSAL_ID = AV_MODULE_ITEM_KEY;

        END IF;


        ELSEIF AV_MODULE_CODE = 5 AND AV_SUBMODULE_CODE = 0 THEN

                SELECT NEGOTIATION_ID,
                                NEGOTIATION_STATUS_CODE,
                                WORKFLOW_STATUS_CODE,
                                AGREEMENT_TYPE_CODE,
                                NEGOTIATOR_PERSON_ID,
                                NEGOTIATOR_FULL_NAME,
                                START_DATE,
                                END_DATE,
                                SUMMARY_COMMENT,
                                NEGOTIATOR_COMMENT,
                                LEGAL_COMMENT
                INTO LS_NEGOTIATION_ID,
                        LS_NEGOTIATION_STATUS_CODE,
                        LS_WORKFLOW_STATUS_CODE,
                        LS_AGREEMENT_TYPE_CODE,
                        LS_NEGOTIATOR_PERSON_ID,
                        LS_NEGOTIATOR_FULL_NAME,
                        LS_START_DATE,
                        LS_END_DATE,
                        LS_SUMMARY_COMMENT,
                        LS_NEGOTIATOR_COMMENT,
                        LS_LEGAL_COMMENT
                FROM NEGOTIATION WHERE NEGOTIATION_ID = AV_MODULE_ITEM_KEY;

        ELSEIF AV_MODULE_CODE = 13 THEN

                        SELECT AGREEMENT_REQUEST_ID,
					TITLE,
					AGREEMENT_TYPE_CODE,
					AGREEMENT_STATUS_CODE,
					REQUESTOR_PERSON_ID,
					REQUESTOR_NAME,
					DOCUMENT_TYPE_CODE,
					END_DATE,
					START_DATE
			INTO
				  LS_AGREEMENT_REQUEST_ID,
					LS_TITLE,
					LS_AGREEMENT_TYPE_CODE,
					LS_AGREEMENT_STATUS_CODE,
					LS_REQUESTOR_PERSON_ID,
					LS_REQUESTOR_NAME,
					LS_DOCUMENT_TYPE_CODE,
					LS_END_DATE,
					LS_START_DATE
			FROM AGREEMENT_HEADER WHERE AGREEMENT_REQUEST_ID = AV_MODULE_ITEM_KEY ;

        ELSEIF AV_MODULE_CODE = 15 AND AV_SUBMODULE_CODE = 0 THEN

                         SELECT GRANT_HEADER_ID,
                                        GRANT_TYPE_CODE,
                                        GRANT_STATUS_CODE,
                                        SPONSOR_CODE,
                                        SPONSOR_TYPE_CODE,
                                        HOME_UNIT_NAME,
                                        HOME_UNIT_NUMBER
                        INTO
                                    LI_GRANT_HEADER_ID,
                                        LI_GRANT_TYPE_CODE,
                                        LI_GRANT_STATUS_CODE,
                                        LS_SPONSOR_CODE,
                                        LS_SPONSOR_TYPE_CODE,
                                        LS_HOME_UNIT_NAME,
                                        LS_HOME_UNIT_NUMBER
                        FROM GRANT_CALL_HEADER WHERE GRANT_HEADER_ID = AV_MODULE_ITEM_KEY ;
						
        ELSEIF AV_MODULE_CODE = 14 AND AV_SUBMODULE_CODE = 0 THEN

                        SELECT CLAIM_ID
                        INTO  LI_CLAIM_ID
                        FROM CLAIM WHERE CLAIM_ID = AV_MODULE_ITEM_KEY ;
        ELSEIF AV_MODULE_CODE = 16 AND AV_SUBMODULE_CODE = 0 THEN

                        SELECT PROGRESS_REPORT_ID
                        INTO  LI_PROGRESS_REPORT_ID
                        FROM AWARD_PROGRESS_REPORT WHERE PROGRESS_REPORT_ID = AV_MODULE_ITEM_KEY ; 
		ELSEIF AV_MODULE_CODE = 20 AND AV_SUBMODULE_CODE = 0 THEN

                        SELECT SR_HEADER_ID,
						UNIT_NUMBER
                        INTO  LI_SR_HEADER_ID,
                        LS_HOME_UNIT_NUMBER
                        FROM SR_HEADER WHERE SR_HEADER_ID = AV_MODULE_ITEM_KEY ; 
        ELSEIF AV_MODULE_CODE = 8 AND AV_SUBMODULE_CODE = 0 THEN
        
                        select DISCLOSURE_ID, DISCLOSURE_NUMBER, REVIEW_STATUS_CODE INTO  
                        LI_DISCLOSURE_ID, LI_DISCLOSURE_NUMBER, LI_REVIEW_STATUS_CODE from COI_DISCLOSURE
                        WHERE DISCLOSURE_ID = AV_MODULE_ITEM_KEY ;

        ELSEIF AV_MODULE_CODE = 24 AND AV_SUBMODULE_CODE = 0 THEN
        
                        select TRAVEL_DISCLOSURE_ID, TRAVEL_NUMBER INTO  
                        LI_TRAVEL_DISCLOSURE_ID, LI_TRAVEL_NUMBER from COI_TRAVEL_DISCLOSURE
                        WHERE TRAVEL_DISCLOSURE_ID = AV_MODULE_ITEM_KEY ;
        ELSEIF AV_MODULE_CODE = 23 AND AV_SUBMODULE_CODE = 0 THEN
        
                        select OPA_DISCLOSURE_ID, OPA_DISCLOSURE_NUMBER INTO  
                        LI_OPA_DISCLOSURE_ID, LS_OPA_DISCLOSURE_NUMBER from OPA_DISCLOSURE   
                        WHERE OPA_DISCLOSURE_ID = AV_MODULE_ITEM_KEY ;
    END IF;


SET LS_TYPE_CODE = NULL;
SET LS_UNIT_NUMBER = NULL;
SET LS_ACT_TYPE_CODE = NULL;


OPEN ARG_CURSOR;

ARG_CURSOR_LOOP : LOOP
        FETCH ARG_CURSOR INTO LS_ARGUMENT_NAME,LS_DEFAULT_VALUE, LS_ARG_TYPE;
			IF DONE1 THEN
				LEAVE ARG_CURSOR_LOOP;
			END IF;
			
		IF IFNULL(LS_ARG_TYPE,'S') = 'U' THEN
		   SET LI_CNT = 0;
		   SELECT COUNT(*) 
			 INTO LI_CNT
			 FROM BUSINESS_RULE_EXP_ARGS
			WHERE RULE_ID = AV_RULE_ID 
			 AND RULES_EXPERSSION_ID = AV_RULE_EXPRESSION_ID
			 AND FUNCTION_NAME = LS_FUNCTION_NAME
			 AND ARGUMENT_NAME = LS_ARGUMENT_NAME
			AND VALUE IS NOT NULL;	
			 
			IF LI_CNT <> 1 THEN 
			   LEAVE ARG_CURSOR_LOOP;
			END IF;
			
			SELECT VALUE
			 INTO LS_ARGUMENT_VALUE
			 FROM BUSINESS_RULE_EXP_ARGS
			WHERE RULE_ID = AV_RULE_ID 
			 AND RULES_EXPERSSION_ID = AV_RULE_EXPRESSION_ID
			 AND FUNCTION_NAME = LS_FUNCTION_NAME
			 AND ARGUMENT_NAME = LS_ARGUMENT_NAME;	
	
		ELSE		
			IF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 0 THEN

		
					SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AWARD_NUMBER')THEN
											COALESCE(LS_AWARD_NUMBER,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('ACCOUNT_TYPE_CODE') THEN
											COALESCE(CAST(LS_ACCOUNT_TYPE AS CHAR),LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('ACTIVITY_TYPE_CODE') THEN
											COALESCE(CAST(LS_ACTIVITY_TYPE_CODE AS CHAR),LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('UNIT_NUMBER') THEN
											COALESCE(LS_UNIT_NUMBER,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PERSONID') THEN
											COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AWARD_EFFECTIVE_DATE') THEN
											COALESCE(LS_EFFECTIVE_DATE,LS_DEFAULT_VALUE)
															 WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('SPONSOR_AWARD_NUMBER') THEN
											COALESCE(LS_SPONSOR_AWARD_NUMBER,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AWARD_ID') THEN
											COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_CODE') THEN
											COALESCE(AV_MODULE_CODE,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('RULE_ID') THEN
											COALESCE(AV_RULE_ID,LS_DEFAULT_VALUE)
                                                            WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_ITEM_KEY') THEN
											COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
                                                           
                                            

						   END
					INTO LS_ARGUMENT_VALUE
					FROM DUAL;

			ELSEIF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 2 THEN


			 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('TASK_ID') THEN
									COALESCE(AV_SUB_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
						WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('TASK_TYPE_CODE') THEN
									COALESCE(CAST(LS_TASK_TYPE_CODE AS CHAR),LS_DEFAULT_VALUE)
						WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('TASK_STATUS_CODE') THEN
									COALESCE(CAST(LS_TASK_STATUS_CODE AS CHAR),LS_DEFAULT_VALUE)
						WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('ASSIGNEE_PERSON_ID') THEN
									COALESCE(LS_ASSIGNEE_PERSON_ID,LS_DEFAULT_VALUE)
						WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('DESCRIPTION') THEN
									COALESCE(LS_DESCRIPTION,LS_DEFAULT_VALUE)
													WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('DUE_DATE') THEN
									COALESCE(LS_DUE_DATE,LS_DEFAULT_VALUE)
													WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('START_DATE') THEN
									COALESCE(LS_START_DATE,LS_DEFAULT_VALUE)
													WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('RULE_ID') THEN
									COALESCE(AV_RULE_ID,LS_DEFAULT_VALUE)
													WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AWARD_ID') THEN
									COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)

				   END
			INTO LS_ARGUMENT_VALUE
			FROM DUAL;

			ELSEIF AV_MODULE_CODE = 2 AND AV_SUBMODULE_CODE = 0 THEN
			
				SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PROPOSAL_ID') THEN
											COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PERSON_ID') THEN
											COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_ITEM_KEY') THEN
									COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_CODE') THEN
									COALESCE(AV_MODULE_CODE,LS_DEFAULT_VALUE)

						   END
					INTO LS_ARGUMENT_VALUE
					FROM DUAL;
		
			ELSEIF AV_MODULE_CODE = 3 AND AV_SUBMODULE_CODE in (0,4,1) THEN

					 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PROPOSAL_ID') THEN
											COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('TYPE_CODE') THEN
											COALESCE(CAST(LS_TYPE_CODE AS CHAR),LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('SPONSOR_CODE') THEN
											COALESCE(CAST(LS_SPONSOR_CODE AS CHAR),LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('HOME_UNIT_NUMBER') THEN
											COALESCE(LS_UNIT_NUMBER,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PERSONID') THEN
											COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('ACTIVITY_TYPE_CODE') THEN
											COALESCE(LS_ACT_TYPE_CODE,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_CODE') THEN
											COALESCE(AV_MODULE_CODE,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('GRANT_HEADER_ID') THEN
										COALESCE(LI_GRANT_ID,LS_DEFAULT_VALUE)   
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_ITEM_KEY') THEN
									COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
													 WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_CODE') THEN
									COALESCE(AV_MODULE_CODE,LS_DEFAULT_VALUE)

						   END
					INTO LS_ARGUMENT_VALUE
					FROM DUAL;
					
			ELSEIF AV_MODULE_CODE = 3 AND AV_SUBMODULE_CODE in (3) THEN

					 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PROPOSAL_ID') THEN
											COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PERSON_ID') THEN
											COALESCE(AV_SUB_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
						   END
					INTO LS_ARGUMENT_VALUE
					FROM DUAL;		

			ELSEIF AV_MODULE_CODE = 5 AND AV_SUBMODULE_CODE = 0 THEN

									SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('NEGOTIATION_ID') THEN
											COALESCE(LS_NEGOTIATION_ID,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('NEGOTIATION_STATUS_CODE') THEN
											COALESCE(CAST(LS_NEGOTIATION_STATUS_CODE AS CHAR),LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('WORKFLOW_STATUS_CODE') THEN
											COALESCE(CAST(LS_WORKFLOW_STATUS_CODE AS CHAR),LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AGREEMENT_TYPE_CODE') THEN
											COALESCE(LS_AGREEMENT_TYPE_CODE,LS_DEFAULT_VALUE)
								WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('NEGOTIATOR_PERSON_ID') THEN
											COALESCE(LS_NEGOTIATOR_PERSON_ID,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('NEGOTIATOR_FULL_NAME') THEN
											COALESCE(LS_NEGOTIATOR_FULL_NAME,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('START_DATE') THEN
											COALESCE(LS_START_DATE,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('END_DATE') THEN
											COALESCE(LS_END_DATE,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('SUMMARY_COMMENT') THEN
											COALESCE(LS_SUMMARY_COMMENT,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('NEGOTIATOR_COMMENT') THEN
											COALESCE(LS_NEGOTIATOR_COMMENT,LS_DEFAULT_VALUE)
															WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('LEGAL_COMMENT') THEN
											COALESCE(LS_LEGAL_COMMENT,LS_DEFAULT_VALUE)
											 END
					INTO LS_ARGUMENT_VALUE
					FROM DUAL;

			ELSEIF AV_MODULE_CODE = 13 THEN

					SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AGREEMENT_REQUEST_ID') THEN
							COALESCE(LS_AGREEMENT_REQUEST_ID,LS_DEFAULT_VALUE)

										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('TITLE') THEN
													COALESCE(CAST(LS_TITLE AS CHAR),LS_DEFAULT_VALUE)

										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AGREEMENT_TYPE_CODE') THEN
													COALESCE(CAST(LS_AGREEMENT_TYPE_CODE AS CHAR),LS_DEFAULT_VALUE)

										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AGREEMENT_STATUS_CODE') THEN
													COALESCE(LS_AGREEMENT_STATUS_CODE,LS_DEFAULT_VALUE)

										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('REQUESTOR_PERSON_ID') THEN
													COALESCE(LS_REQUESTOR_PERSON_ID,LS_DEFAULT_VALUE)

																	WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('DOCUMENT_TYPE_CODE') THEN
													COALESCE(LS_DOCUMENT_TYPE_CODE,LS_DEFAULT_VALUE)

																	WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('END_DATE') THEN
													COALESCE(LS_END_DATE,LS_DEFAULT_VALUE)

																	WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('START_DATE') THEN
													COALESCE(LS_START_DATE,LS_DEFAULT_VALUE)
													
													-- FROM Agreements 
													WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('REQUESTOR_NAME') THEN     
													COALESCE(LS_REQUESTOR_NAME,LS_DEFAULT_VALUE)
													
												WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_ITEM_KEY') THEN     
													COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
										
										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('MODULE_CODE') THEN     
													COALESCE(AV_MODULE_CODE,LS_DEFAULT_VALUE)
										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('LOGGED_IN_PERSON_ID') THEN
													COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)

													 END
							INTO LS_ARGUMENT_VALUE
							FROM DUAL;


				ELSEIF AV_MODULE_CODE = 15 AND AV_SUBMODULE_CODE = 0 THEN
						SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('GRANT_HEADER_ID') THEN
										COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)

							WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('GRANT_TYPE_CODE') THEN
										COALESCE(CAST(LI_GRANT_TYPE_CODE AS CHAR),LS_DEFAULT_VALUE)

							WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('GRANT_STATUS_CODE') THEN
										COALESCE(CAST(LI_GRANT_STATUS_CODE AS CHAR),LS_DEFAULT_VALUE)

							WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('SPONSOR_CODE') THEN
										COALESCE(LS_SPONSOR_CODE,LS_DEFAULT_VALUE)

							WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('SPONSOR_TYPE_CODE') THEN
										COALESCE(LS_SPONSOR_TYPE_CODE,LS_DEFAULT_VALUE)

														WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('HOME_UNIT_NAME') THEN
										COALESCE(LS_HOME_UNIT_NAME,LS_DEFAULT_VALUE)

														WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('HOME_UNIT_NUMBER') THEN
										COALESCE(LS_HOME_UNIT_NUMBER,LS_DEFAULT_VALUE)


										 END
							INTO LS_ARGUMENT_VALUE
							FROM DUAL;
					
				
				ELSEIF AV_MODULE_CODE = 14 AND AV_SUBMODULE_CODE = 0 THEN
								 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('CLAIM_ID') THEN
										COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
										END
								 INTO LS_ARGUMENT_VALUE
								 FROM DUAL;
								 
				ELSEIF AV_MODULE_CODE = 16 AND AV_SUBMODULE_CODE = 0 THEN
								 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('PROGRESS_REPORT_ID') THEN
										COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
										WHEN  LOWER(LS_ARGUMENT_NAME) = LOWER('PERSON_ID') THEN
										COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)
										END
								 INTO LS_ARGUMENT_VALUE
								 FROM DUAL;
				
				ELSEIF AV_MODULE_CODE = 20 AND AV_SUBMODULE_CODE = 0 THEN
								 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('SR_HEADER_ID') THEN
										COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
										WHEN  LOWER(LS_ARGUMENT_NAME) = LOWER('PERSON_ID') THEN
										COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)
										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('UNIT_NUMBER') THEN
										COALESCE(LS_HOME_UNIT_NUMBER,LS_DEFAULT_VALUE)
										END
								 INTO LS_ARGUMENT_VALUE
								 FROM DUAL;	
                 ELSEIF AV_MODULE_CODE = 8 AND AV_SUBMODULE_CODE = 0 THEN
                                SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('DISCLOSURE_ID') THEN
                                        COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
                                        WHEN  LOWER(LS_ARGUMENT_NAME) = LOWER('DISCLOSURE_NUMBER') THEN
                                        COALESCE(LI_DISCLOSURE_NUMBER,LS_DEFAULT_VALUE)
                                        WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('REVIEW_STATUS_CODE') THEN
                                        COALESCE(LI_REVIEW_STATUS_CODE,LS_DEFAULT_VALUE)
                                        END
                                INTO LS_ARGUMENT_VALUE
                                FROM DUAL;
                ELSEIF AV_MODULE_CODE = 24 AND AV_SUBMODULE_CODE = 0 THEN
                                SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('TRAVEL_DISCLOSURE_ID') THEN
                                        COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
                                        WHEN  LOWER(LS_ARGUMENT_NAME) = LOWER('TRAVEL_NUMBER') THEN
                                        COALESCE(LI_TRAVEL_NUMBER,LS_DEFAULT_VALUE)
                                        END
                                INTO LS_ARGUMENT_VALUE
                                FROM DUAL;
                ELSEIF AV_MODULE_CODE = 23 AND AV_SUBMODULE_CODE = 0 THEN
								 SELECT CASE WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('AV_PERSON_ID') THEN
										COALESCE(AV_LOGGIN_PERSON_ID,LS_DEFAULT_VALUE)
										WHEN LOWER(LS_ARGUMENT_NAME) = LOWER('OPA_DISCLOSURE_ID') THEN
                                        COALESCE(AV_MODULE_ITEM_KEY,LS_DEFAULT_VALUE)
                                        WHEN  LOWER(LS_ARGUMENT_NAME) = LOWER('OPA_DISCLOSURE_NUMBER') THEN
                                        COALESCE(LS_OPA_DISCLOSURE_NUMBER,LS_DEFAULT_VALUE)
										END
								 INTO LS_ARGUMENT_VALUE
								 FROM DUAL;
				END IF;
			END IF;

        SET LS_ARGUMENTS = CONCAT(LS_ARGUMENTS,'''',LS_ARGUMENT_VALUE,''',');

    END LOOP;
CLOSE ARG_CURSOR;

    SELECT TRIM(TRAILING ',' FROM TRIM(LS_ARGUMENTS)) INTO LS_ARGUMENTS FROM DUAL;


                SET LL_QUERY_STRING = CONCAT('SELECT ',LS_DB_FUNCTION_NAME,'(',LS_ARGUMENTS,') INTO @RESULT');
IF LS_ARGUMENTS IS NOT NULL THEN

    SET @STATEMENT = LL_QUERY_STRING;
    PREPARE QUERY_STATEMENT FROM @STATEMENT;
    EXECUTE QUERY_STATEMENT;
    SET LS_RETURN = @RESULT;


        SET  LS_QUERY = CONCAT(LS_RETURN,LS_OPERATOR,LS_RVALUE);
        CALL RULE_VERIFY_EXPRESSION(LS_QUERY,@RESULT_EXP);
        SET EXPR_RESULT = @RESULT_EXP;

ELSE

    SELECT 'FALSE' INTO EXPR_RESULT;

END IF;

END