DELIMITER $$
CREATE PROCEDURE `GET_TRAINING_DASHBOARD`(
AV_TRAINING_CODE  int(11),
AV_PERSON_ID  VARCHAR(90),
AV_NON_EMPLOYEE VARCHAR(1),
AV_SORT_TYPE  VARCHAR(500),
AV_PAGED  INT(10),
AV_LIMIT  INT(10)
)
BEGIN
DECLARE LS_DYN_SQL LONGTEXT;
DECLARE LS_FILTER_CONDITION LONGTEXT;
DECLARE LS_OFFSET_CONDITION VARCHAR(600);
DECLARE LS_OFFSET INT(11);
DECLARE TAB_QUERY LONGTEXT;
DECLARE TAB_QUERY1 LONGTEXT;
DECLARE JOIN_CONDITION LONGTEXT;
DECLARE SELECTED_FIELD_LIST LONGTEXT;

SET LS_OFFSET = (AV_LIMIT * AV_PAGED);

SET LS_FILTER_CONDITION ='';
SET LS_DYN_SQL ='';
SET JOIN_CONDITION = '';
SET SELECTED_FIELD_LIST= '';
SET TAB_QUERY ='';

IF AV_PERSON_ID IS NOT NULL  AND AV_PERSON_ID <> '' THEN
 SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.PERSON_ID = ''',AV_PERSON_ID,''' AND ');
END IF;

IF AV_TRAINING_CODE IS NOT NULL  AND AV_TRAINING_CODE <> 0 THEN
 SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.TRAINING_CODE LIKE ''%',AV_TRAINING_CODE,'%'' AND ');
END IF;

SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);

IF AV_SORT_TYPE IS NOT NULL THEN
 SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
END IF;

IF AV_SORT_TYPE IS NULL THEN
SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
END IF;

IF LS_FILTER_CONDITION <>'' THEN

SET LS_FILTER_CONDITION = CONCAT(' WHERE 1=1 AND ',LS_FILTER_CONDITION);
SELECT TRIM(TRAILING 'AND ' FROM LS_FILTER_CONDITION) into LS_FILTER_CONDITION from dual;

END IF;

  SET LS_DYN_SQL =CONCAT('SELECT  *  FROM(SELECT (SELECT IF(T1.IS_NON_EMPLOYEE = ''Y'', 
			(SELECT FULL_NAME FROM ROLODEX WHERE ROLODEX_ID = T1.PERSON_ID), (SELECT FULL_NAME FROM PERSON WHERE PERSON_ID = T1.PERSON_ID))) as 	FULL_NAME,
			T2.DESCRIPTION, T1.UPDATE_TIMESTAMP ,T1.PERSON_ID, T1.IS_NON_EMPLOYEE ,T1.PERSON_TRAINING_ID,T1.FOLLOWUP_DATE,T1.TRAINING_CODE, T1.DATE_ACKNOWLEDGED, T1.SCORE' ,SELECTED_FIELD_LIST,
' FROM PERSON_TRAINING T1 INNER JOIN TRAINING T2 ON T1.TRAINING_CODE = T2.TRAINING_CODE
									)T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION );


SET @QUERY_STATEMENT = LS_DYN_SQL;
PREPARE EXECUTABLE_STATEMENT FROM @QUERY_STATEMENT;
EXECUTE EXECUTABLE_STATEMENT;

END$$
