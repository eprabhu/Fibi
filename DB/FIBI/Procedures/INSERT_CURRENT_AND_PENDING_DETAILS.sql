DELIMITER $$
CREATE PROCEDURE `INSERT_CURRENT_AND_PENDING_DETAILS`(
AV_MODULE_CODE 			    					INT(10),
AV_MODULE_ITEM_ID  								VARCHAR(500),
AV_PERSON_ID									VARCHAR(1000),
AV_UPDATE_USER									VARCHAR(60)
)
BEGIN
DECLARE LS_PERSON_ID 							VARCHAR(500);
DECLARE LI_VERSION_NUMBER 						INT(10);
DECLARE IS_REPORT_GENERATED 					INT(10);
DECLARE LS_NON_EMPLOYEE_FLAG 					VARCHAR(1);
DECLARE LI_CP_REPORT_HEADER_ID_NEXT_VAL 		INT;
DECLARE LI_OLD_CP_REPORT_HEADER_ID 		INT;
DECLARE LI_CP_REPORT_PROJECT_DETAIL_ID_NEXT_VAL INT;
DECLARE LI_LINKED_MODULE_ITEM_ID 				VARCHAR(20);
DECLARE LI_TOTAL_AWARD_AMOUNT 					DECIMAL(15,2);
DECLARE LI_ANNUAL_DIRECT_COST 					DECIMAL(15,2);
DECLARE LS_LEAD_PI_NON_EMPLOYEE_FLAG 			VARCHAR(1);
DECLARE LS_LEAD_PI_PERSON_ID 					VARCHAR(40);
DECLARE LI_PERSON_ROLE_ID						INT;
DECLARE LI_PERCENTAGE_OF_EFFORT 				DECIMAL(5,2);
DECLARE TMP_PERSON_LIST LONGTEXT;
DECLARE LS_EXCLUDED_FLAG						VARCHAR(1);
DECLARE LS_MANUALLY_ADDED_FLAG					VARCHAR(1);
DECLARE LS_PROJECT_TITLE						VARCHAR(500);
DECLARE LS_GRANT_CALL_NAME						VARCHAR(500);
DECLARE LI_PROP_PERSON_ROLE_ID					INT;
DECLARE LI_AMOUNT								DECIMAL(15,2);
DECLARE LS_END_DATE								DATETIME;
DECLARE LS_START_DATE							DATETIME;
DECLARE LS_SPONSOR_TYPE_CODE					VARCHAR(20);
DECLARE LI_FUNDING_STATUS_CODE					INT;
DECLARE LS_SPONSOR_CODE							VARCHAR(20);
DECLARE LS_CURRENCY_CODE						VARCHAR(20);
DECLARE LI_PERCENT_OF_EFFORT					DECIMAL(19,2);

																		 
BEGIN
						
		
		SELECT AV_PERSON_ID INTO TMP_PERSON_LIST FROM DUAL;
		
		WHILE TMP_PERSON_LIST != '' DO
		SET LS_PERSON_ID = SUBSTRING_INDEX(TMP_PERSON_LIST, ',', 1);
		
		SELECT IFNULL(MAX(VERSION_NUMBER),0)+1 INTO LI_VERSION_NUMBER 
								FROM CP_REPORT_HEADER
								WHERE MODULE_CODE = AV_MODULE_CODE 
								AND MODULE_ITEM_ID = AV_MODULE_ITEM_ID
								AND PERSON_ID = LS_PERSON_ID;
		
		IF AV_MODULE_CODE = 3 THEN
		
			SELECT (CASE WHEN PERSON_ID IS NULL THEN 'Y' ELSE 'N' END) INTO LS_NON_EMPLOYEE_FLAG 
			FROM EPS_PROPOSAL_PERSONS			
			WHERE PROPOSAL_ID = AV_MODULE_ITEM_ID
			AND (CASE WHEN PERSON_ID IS NULL THEN ROLODEX_ID = LS_PERSON_ID ELSE PERSON_ID = LS_PERSON_ID END);
			
		END IF;	
		
		SELECT COUNT(1) INTO IS_REPORT_GENERATED 
								FROM CP_REPORT_HEADER
								WHERE MODULE_CODE = AV_MODULE_CODE 
								AND MODULE_ITEM_ID = AV_MODULE_ITEM_ID
								AND PERSON_ID = LS_PERSON_ID;
		
		IF IS_REPORT_GENERATED > 0 THEN 
		
								SELECT CP_REPORT_HEADER_ID INTO LI_OLD_CP_REPORT_HEADER_ID 
								FROM CP_REPORT_HEADER
								WHERE MODULE_CODE = AV_MODULE_CODE 
								AND MODULE_ITEM_ID = AV_MODULE_ITEM_ID
								AND PERSON_ID = LS_PERSON_ID
								AND VERSION_NUMBER = LI_VERSION_NUMBER - 1;
		END IF;

		INSERT INTO CP_REPORT_HEADER (	PERSON_ID,
										NON_EMPLOYEE_FLAG,
										VERSION_NUMBER,
										MODULE_CODE,
										MODULE_ITEM_ID,
										CREATE_USER,
										CREATE_TIMESTAMP,
										UPDATE_USER,
										UPDATE_TIMESTAMP
									) VALUES(
										LS_PERSON_ID,
										LS_NON_EMPLOYEE_FLAG,
										LI_VERSION_NUMBER,
										AV_MODULE_CODE,
										AV_MODULE_ITEM_ID,
										AV_UPDATE_USER,
										UTC_TIMESTAMP(),
										AV_UPDATE_USER,
										UTC_TIMESTAMP()
									);
		
		SELECT LAST_INSERT_ID() INTO LI_CP_REPORT_HEADER_ID_NEXT_VAL;
		
		BEGIN
		DECLARE DONE1 INT DEFAULT FALSE;
		DECLARE CP_PROPOSAL_DATA CURSOR FOR
						
				SELECT T1.PROPOSAL_ID,
				IFNULL(T5.TOTAL_COST,0.00),
				IFNULL(T5.TOTAL_DIRECT_COST,0.00),
				CASE WHEN T4.PERSON_ID IS NULL THEN 'Y' ELSE 'N' END AS LEAD_PI_NON_EMPLOYEE_FLAG,
				CASE WHEN T4.PERSON_ID IS NULL THEN T4.ROLODEX_ID ELSE T4.PERSON_ID END AS LEAD_PI_PERSON_ID,
				T2.PROP_PERSON_ROLE_ID,
				T2.PERCENTAGE_OF_EFFORT,
				IFNULL(T6.IS_EXCLUDED,'N'),
				IFNULL(T6.IS_MANUALLY_ADDED, 'N'),
				T6.PROJECT_TITLE,
				T6.GRANT_CALL_NAME,
				T6.PROP_PERSON_ROLE_ID,
				T6.AMOUNT,
				T6.END_DATE,
				T6.START_DATE,
				T6.SPONSOR_TYPE_CODE,
				T6.FUNDING_STATUS_CODE,
				T6.SPONSOR_CODE,
				T6.CURRENCY_CODE,
				T6.PERCENTAGE_OF_EFFORT
				FROM EPS_PROPOSAL T1
				INNER JOIN EPS_PROPOSAL_PERSONS T2 ON T2.PROPOSAL_ID=T1.PROPOSAL_ID 
				AND (CASE WHEN T2.PERSON_ID IS NULL THEN T2.ROLODEX_ID = LS_PERSON_ID
				ELSE T2.PERSON_ID = LS_PERSON_ID END)
				INNER JOIN EPS_PROP_PERSON_ROLE T3 ON T3.PROP_PERSON_ROLE_ID = T2.PROP_PERSON_ROLE_ID AND T3.INCLUDE_IN_CURRENT_AND_PENDING ='Y'
				LEFT JOIN EPS_PROPOSAL_PERSONS T4 ON T4.PROPOSAL_ID = T1.PROPOSAL_ID AND T4.PI_FLAG ='Y'
				LEFT JOIN BUDGET_HEADER T5 ON T5.PROPOSAL_ID = T1.PROPOSAL_ID 
				AND T5.VERSION_NUMBER = (SELECT MAX(VERSION_NUMBER) FROM BUDGET_HEADER WHERE PROPOSAL_ID = T1.PROPOSAL_ID)
				LEFT JOIN CP_REPORT_PROJECT_DETAILS T6 ON T6.LINKED_MODULE_ITEM_ID = T1.PROPOSAL_ID AND LINKED_MODULE_CODE = 3
				AND CASE WHEN LI_OLD_CP_REPORT_HEADER_ID IS NOT NULL THEN T6.CP_REPORT_HEADER_ID = LI_OLD_CP_REPORT_HEADER_ID ELSE '' END
				WHERE STATUS_CODE NOT IN (1,29,35,9,22,20,24,30,3,12,11)
				AND DOCUMENT_STATUS_CODE <> 3
				AND T1.PROPOSAL_ID <> AV_MODULE_ITEM_ID
				UNION
				SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,IFNULL(T1.IS_EXCLUDED,'N'),IFNULL(T1.IS_MANUALLY_ADDED, 'N'),T1.PROJECT_TITLE,
				T1.GRANT_CALL_NAME,T1.PROP_PERSON_ROLE_ID,T1.AMOUNT,T1.END_DATE,T1.START_DATE,
				T1.SPONSOR_TYPE_CODE,T1.FUNDING_STATUS_CODE,T1.SPONSOR_CODE,T1.CURRENCY_CODE,T1.PERCENTAGE_OF_EFFORT
				FROM CP_REPORT_PROJECT_DETAILS T1 
                WHERE T1.LINKED_MODULE_ITEM_ID IS NULL AND LINKED_MODULE_CODE = 3
				AND CASE WHEN LI_OLD_CP_REPORT_HEADER_ID IS NOT NULL THEN T1.CP_REPORT_HEADER_ID = LI_OLD_CP_REPORT_HEADER_ID ELSE '' END;
							 
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE1 = TRUE;
							
							
							OPEN CP_PROPOSAL_DATA;
								CP_PROPOSAL_DATA_LOOP : LOOP
								FETCH CP_PROPOSAL_DATA 
									  INTO 	LI_LINKED_MODULE_ITEM_ID,
											LI_TOTAL_AWARD_AMOUNT,
											LI_ANNUAL_DIRECT_COST,
											LS_LEAD_PI_NON_EMPLOYEE_FLAG,
											LS_LEAD_PI_PERSON_ID,
											LI_PERSON_ROLE_ID,
											LI_PERCENTAGE_OF_EFFORT,
											LS_EXCLUDED_FLAG,
										    LS_MANUALLY_ADDED_FLAG,
											LS_PROJECT_TITLE,
											LS_GRANT_CALL_NAME,
											LI_PROP_PERSON_ROLE_ID,
											LI_AMOUNT,
											LS_END_DATE,
											LS_START_DATE,
											LS_SPONSOR_TYPE_CODE,
											LI_FUNDING_STATUS_CODE,
											LS_SPONSOR_CODE,
											LS_CURRENCY_CODE,
											LI_PERCENT_OF_EFFORT;
									  
								IF DONE1 THEN
									LEAVE CP_PROPOSAL_DATA_LOOP;
								END IF;
		
								INSERT INTO CP_REPORT_PROJECT_DETAILS (
											CP_REPORT_HEADER_ID,
											LINKED_MODULE_CODE,
											LINKED_MODULE_ITEM_ID,
											IS_EXCLUDED,
											IS_MANUALLY_ADDED,
											UPDATE_USER,
											UPDATE_TIMESTAMP,
											PROJECT_TITLE,
											GRANT_CALL_NAME,
											PROP_PERSON_ROLE_ID,
											AMOUNT,
											END_DATE,
											START_DATE,
											SPONSOR_TYPE_CODE,
											FUNDING_STATUS_CODE,
											SPONSOR_CODE,
											CURRENCY_CODE,
											PERCENTAGE_OF_EFFORT
								) VALUES(
											LI_CP_REPORT_HEADER_ID_NEXT_VAL,
											3,
											LI_LINKED_MODULE_ITEM_ID,
											LS_EXCLUDED_FLAG,
										    LS_MANUALLY_ADDED_FLAG,
											AV_UPDATE_USER,
											UTC_TIMESTAMP(),
											LS_PROJECT_TITLE,
											LS_GRANT_CALL_NAME,
											LI_PROP_PERSON_ROLE_ID,
											LI_AMOUNT,
											LS_END_DATE,
											LS_START_DATE,
											LS_SPONSOR_TYPE_CODE,
											LI_FUNDING_STATUS_CODE,
											LS_SPONSOR_CODE,
											LS_CURRENCY_CODE,
											LI_PERCENT_OF_EFFORT
								);
								
								SELECT LAST_INSERT_ID() INTO LI_CP_REPORT_PROJECT_DETAIL_ID_NEXT_VAL;
								
								INSERT INTO CP_REPORT_PROJECT_DETAILS_EXT (
											CP_REPORT_PROJECT_DETAIL_ID,
											TOTAL_AWARD_AMOUNT,
											ANNUAL_DIRECT_COST,
											LEAD_PI_NON_EMPLOYEE_FLAG,
											LEAD_PI_PERSON_ID,
											PERSON_ROLE_ID,
											PERCENTAGE_OF_EFFORT,
											UPDATE_USER,
											UPDATE_TIMESTAMP
								) VALUES (
											LI_CP_REPORT_PROJECT_DETAIL_ID_NEXT_VAL,
											LI_TOTAL_AWARD_AMOUNT,
											LI_ANNUAL_DIRECT_COST,
											LS_LEAD_PI_NON_EMPLOYEE_FLAG,
											LS_LEAD_PI_PERSON_ID,
											LI_PERSON_ROLE_ID,
											LI_PERCENTAGE_OF_EFFORT,
											AV_UPDATE_USER,
											UTC_TIMESTAMP()
								);
								
								
								
		
		END LOOP;
		CLOSE CP_PROPOSAL_DATA;
		END;

		BEGIN
		DECLARE DONE2 INT DEFAULT FALSE;
		DECLARE CP_AWARD_DATA CURSOR FOR
						
		SELECT DISTINCT	T1.AWARD_ID,
				IFNULL(T7.TOTAL_AWARD_AMOUNT,0.00),
				IFNULL(T5.TOTAL_COST,0.00),
				CASE WHEN T4.PERSON_ID IS NULL THEN 'Y' ELSE 'N' END AS LEAD_PI_NON_EMPLOYEE_FLAG,
				CASE WHEN T4.PERSON_ID IS NULL THEN T4.ROLODEX_ID ELSE T4.PERSON_ID END AS LEAD_PI_PERSON_ID,
				T2.PERSON_ROLE_ID,
				T2.PERCENTAGE_OF_EFFORT,
				IFNULL(T6.IS_EXCLUDED,'N'),
				IFNULL(T6.IS_MANUALLY_ADDED, 'N'),
				T6.PROJECT_TITLE,
				T6.GRANT_CALL_NAME,
				T6.PROP_PERSON_ROLE_ID,
				T6.AMOUNT,
				T6.END_DATE,
				T6.START_DATE,
				T6.SPONSOR_TYPE_CODE,
				T6.FUNDING_STATUS_CODE,
				T6.SPONSOR_CODE,
				T6.CURRENCY_CODE,
				T6.PERCENTAGE_OF_EFFORT
				FROM AWARD T1
				INNER JOIN AWARD_PERSONS T2 ON T2.AWARD_ID=T1.AWARD_ID 
				AND (CASE WHEN T2.PERSON_ID IS NULL THEN T2.ROLODEX_ID = LS_PERSON_ID
				ELSE T2.PERSON_ID = LS_PERSON_ID END)
				INNER JOIN EPS_PROP_PERSON_ROLE T3 ON T3.PROP_PERSON_ROLE_ID = T2.PERSON_ROLE_ID AND T3.INCLUDE_IN_CURRENT_AND_PENDING ='Y'
				LEFT JOIN AWARD_PERSONS T4 ON T4.AWARD_ID = T1.AWARD_ID AND T4.PI_FLAG ='Y'
				LEFT JOIN AWARD_BUDGET_HEADER T5 ON T5.AWARD_ID = T1.AWARD_ID 
				AND T5.VERSION_NUMBER = (SELECT MAX(VERSION_NUMBER) FROM AWARD_BUDGET_HEADER WHERE AWARD_ID = T1.AWARD_ID)
				LEFT JOIN CP_REPORT_PROJECT_DETAILS T6 ON T6.LINKED_MODULE_ITEM_ID = T1.AWARD_ID  AND LINKED_MODULE_CODE = 1
				AND CASE WHEN LI_OLD_CP_REPORT_HEADER_ID IS NOT NULL THEN T6.CP_REPORT_HEADER_ID = LI_OLD_CP_REPORT_HEADER_ID ELSE '' END
				LEFT JOIN (SELECT DISTINCT T1.AWARD_ID,T1.AWARD_NUMBER,T1.SEQUENCE_NUMBER,(IFNULL(SUM(COMMITMENT_AMOUNT),0.00) + T2.ANTICIPATED_TOTAL_AMOUNT) AS TOTAL_AWARD_AMOUNT FROM AWARD T1
				LEFT JOIN AWARD_AMOUNT_INFO T2 ON T2.AWARD_NUMBER=T1.AWARD_NUMBER
				LEFT JOIN AWARD_AMOUNT_TRANSACTION T3 ON T3.AWARD_NUMBER=T1.AWARD_NUMBER
				LEFT JOIN AWARD_AMT_TRNSCTN_HISTORY T4 ON T4.AWARD_ID = T1.AWARD_ID
				LEFT JOIN AWARD_COST_SHARE T5 ON T5.AWARD_ID=T1.AWARD_ID
				WHERE ((T1.AWARD_SEQUENCE_STATUS = 'ACTIVE' AND T3.TRANSACTION_STATUS_CODE IN ('A','P')) OR
			   (AWARD_SEQUENCE_STATUS = 'PENDING') OR (T4.TRANSACTION_ID IS NOT NULL AND T2.AWARD_AMOUNT_INFO_ID < (SELECT MAX(AWARD_AMOUNT_INFO_ID) 
			    FROM AWARD_AMOUNT_INFO WHERE TRANSACTION_ID = T4.TRANSACTION_ID))) GROUP BY T1.AWARD_ID
			    ORDER BY AWARD_AMOUNT_INFO_ID DESC) T7 ON T7.AWARD_NUMBER = T1.AWARD_NUMBER
				WHERE  ((AWARD_SEQUENCE_STATUS = 'PENDING' AND AWARD_DOCUMENT_TYPE_CODE = 1) OR AWARD_SEQUENCE_STATUS = 'ACTIVE') 
				AND T1.FINAL_EXPIRATION_DATE >= DATE_SUB(NOW(), INTERVAL 5 YEAR)
				AND T1.AWARD_ID <> AV_MODULE_ITEM_ID
				UNION
				SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,IFNULL(T1.IS_EXCLUDED,'N'),IFNULL(T1.IS_MANUALLY_ADDED, 'N'),T1.PROJECT_TITLE,
				T1.GRANT_CALL_NAME,T1.PROP_PERSON_ROLE_ID,T1.AMOUNT,T1.END_DATE,T1.START_DATE,
				T1.SPONSOR_TYPE_CODE,T1.FUNDING_STATUS_CODE,T1.SPONSOR_CODE,T1.CURRENCY_CODE,T1.PERCENTAGE_OF_EFFORT
				FROM CP_REPORT_PROJECT_DETAILS T1 
                WHERE T1.LINKED_MODULE_ITEM_ID IS NULL AND LINKED_MODULE_CODE = 1
				AND CASE WHEN LI_OLD_CP_REPORT_HEADER_ID IS NOT NULL THEN T1.CP_REPORT_HEADER_ID = LI_OLD_CP_REPORT_HEADER_ID ELSE '' END;
							 
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE2 = TRUE;
							
							
							OPEN CP_AWARD_DATA;
								CP_AWARD_DATA_LOOP : LOOP
								FETCH CP_AWARD_DATA 
									  INTO 	LI_LINKED_MODULE_ITEM_ID,
											LI_TOTAL_AWARD_AMOUNT,
											LI_ANNUAL_DIRECT_COST,
											LS_LEAD_PI_NON_EMPLOYEE_FLAG,
											LS_LEAD_PI_PERSON_ID,
											LI_PERSON_ROLE_ID,
											LI_PERCENTAGE_OF_EFFORT,
											LS_EXCLUDED_FLAG,
										    LS_MANUALLY_ADDED_FLAG,
											LS_PROJECT_TITLE,
											LS_GRANT_CALL_NAME,
											LI_PROP_PERSON_ROLE_ID,
											LI_AMOUNT,
											LS_END_DATE,
											LS_START_DATE,
											LS_SPONSOR_TYPE_CODE,
											LI_FUNDING_STATUS_CODE,
											LS_SPONSOR_CODE,
											LS_CURRENCY_CODE,
											LI_PERCENT_OF_EFFORT;
									  
								IF DONE2 THEN
									LEAVE CP_AWARD_DATA_LOOP;
								END IF;
		

		
								INSERT INTO CP_REPORT_PROJECT_DETAILS (
											CP_REPORT_HEADER_ID,
											LINKED_MODULE_CODE,
											LINKED_MODULE_ITEM_ID,
											IS_EXCLUDED,
											IS_MANUALLY_ADDED,
											UPDATE_USER,
											UPDATE_TIMESTAMP,
											PROJECT_TITLE,
											GRANT_CALL_NAME,
											PROP_PERSON_ROLE_ID,
											AMOUNT,
											END_DATE,
											START_DATE,
											SPONSOR_TYPE_CODE,
											FUNDING_STATUS_CODE,
											SPONSOR_CODE,
											CURRENCY_CODE,
											PERCENTAGE_OF_EFFORT
								) VALUES(
											LI_CP_REPORT_HEADER_ID_NEXT_VAL,
											1,
											LI_LINKED_MODULE_ITEM_ID,
											LS_EXCLUDED_FLAG,
										    LS_MANUALLY_ADDED_FLAG,
											AV_UPDATE_USER,
											UTC_TIMESTAMP(),
											LS_PROJECT_TITLE,
											LS_GRANT_CALL_NAME,
											LI_PROP_PERSON_ROLE_ID,
											LI_AMOUNT,
											LS_END_DATE,
											LS_START_DATE,
											LS_SPONSOR_TYPE_CODE,
											LI_FUNDING_STATUS_CODE,
											LS_SPONSOR_CODE,
											LS_CURRENCY_CODE,
											LI_PERCENT_OF_EFFORT
								);
		
								SELECT LAST_INSERT_ID() INTO LI_CP_REPORT_PROJECT_DETAIL_ID_NEXT_VAL;
								
								INSERT INTO CP_REPORT_PROJECT_DETAILS_EXT (
											CP_REPORT_PROJECT_DETAIL_ID,
											TOTAL_AWARD_AMOUNT,
											ANNUAL_DIRECT_COST,
											LEAD_PI_NON_EMPLOYEE_FLAG,
											LEAD_PI_PERSON_ID,
											PERSON_ROLE_ID,
											PERCENTAGE_OF_EFFORT,
											UPDATE_USER,
											UPDATE_TIMESTAMP
								) VALUES (
											LI_CP_REPORT_PROJECT_DETAIL_ID_NEXT_VAL,
											LI_TOTAL_AWARD_AMOUNT,
											LI_ANNUAL_DIRECT_COST,
											LS_LEAD_PI_NON_EMPLOYEE_FLAG,
											LS_LEAD_PI_PERSON_ID,
											LI_PERSON_ROLE_ID,
											LI_PERCENTAGE_OF_EFFORT,
											AV_UPDATE_USER,
											UTC_TIMESTAMP()
								);
								
								
		
		END LOOP;
		CLOSE CP_AWARD_DATA; 
		END;
		
		
		IF LOCATE(',', TMP_PERSON_LIST) > 0 THEN
		SET TMP_PERSON_LIST = SUBSTRING(
				TMP_PERSON_LIST,
				LOCATE(',', TMP_PERSON_LIST) + 1
			);
		ELSE
		SET TMP_PERSON_LIST = '';
		SET LI_OLD_CP_REPORT_HEADER_ID = NULL;
		SET LI_VERSION_NUMBER = NULL;
		END IF;
		END WHILE;

END;
END$$
