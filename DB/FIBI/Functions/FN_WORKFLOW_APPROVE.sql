DELIMITER //
CREATE FUNCTION `FN_WORKFLOW_APPROVE`(
  AV_MODULE_ITEM_ID  		VARCHAR(20),
  AV_MODULE_CODE   			INT,
  AV_PERSON_ID  			VARCHAR(40),
  AV_UPDATE_USER  			VARCHAR(40),
  AV_COMMENTS  				LONGTEXT,
  AV_ACTION_TYPE   			VARCHAR(3),
  AV_SUBMODULE_CODE     	INT,
  AV_SUB_MODULE_ITEM_KEY    VARCHAR(20),
  AV_MAP_ID					INT,
  AV_MAP_NUMBER				INT,
  AV_APPROVAL_STOP_NUMBER	INT,
  AV_APPROVER_NUMBER		INT		
) RETURNS varchar(1000) 
    DETERMINISTIC
BEGIN
DECLARE  LL_WORKFLOW_ID                       INT(6);
DECLARE  LL_MAP_ID                            INT(6);
DECLARE  LL_MAP_NUMBER                        INT(3);
DECLARE  LL_APPROVAL_STOP_NUMBER  INT(3);
DECLARE  LL_APPROVER_NUMBER           INT(3);
DECLARE LI_WORKFLOW_ID           INT(6);
DECLARE  LI_MAP_ID INT(6);
DECLARE  LI_MAP_NUMBER INT(3);
DECLARE  LI_APPROVAL_STOP_NUMBER INT(3);
DECLARE  LL_NEXT_MAP_ID                               INT(6);
DECLARE  LL_NEXT_MAP_NUMBER                   INT(3);
DECLARE  LL_NEXT_APPROVAL_STOP_NUMBER INT(3);
DECLARE  LL_NEXT_APPROVER_NUMBER              INT(3);
DECLARE  LL_CUR_STOP_WPERSON_COUNT    INT(3);
DECLARE  LL_WORKFLOW_DETAIL_ID        INT(12);
DECLARE  LL_NEXT_MAP_STOP_NUMBER      INT(3);
DECLARE  LS_PERSON_ID                 VARCHAR(40);
DECLARE  LS_PI_USER 	              VARCHAR(60);
DECLARE  LS_PI_PERSON_ID 	          VARCHAR(40);
DECLARE LS_PROGRESS_REPORT_TYPE       VARCHAR(3);
DECLARE LS_REPORT_CLASS_NAME       VARCHAR(200);
DECLARE LS_REPORT_TITLE       VARCHAR(300);
DECLARE LS_PROGRESS_REPORT_NUMBER     VARCHAR(20);
DECLARE  LS_EXPR_RESULT               INT(3);
DECLARE  LS_USER_MESSAGE              VARCHAR(4000);
DECLARE  LS_TITLE                     VARCHAR(1000);
DECLARE  LS_CREATE_USER               VARCHAR(200);
DECLARE  LS_SUBMIT_USER               VARCHAR(200);
DECLARE  LS_MESSAGE_TYPE_CODE         VARCHAR(4);
DECLARE  LS_TABLE_NAME                VARCHAR(40);
DECLARE  DONE1                        INT DEFAULT FALSE;
DECLARE  INBOX_ACTION_COUNT           INT;
DECLARE  LS_AWARD_NUMBER              VARCHAR(20);
DECLARE  LS_BYPASS_APPROVAL_STATUS     VARCHAR(3);
DECLARE  LS_ALTERNATE_APPROVAL_STATUS  VARCHAR(3);
DECLARE  LS_MODULE_ITEM_ID             VARCHAR(20);
DECLARE LI_COUNT INT;
DECLARE LI_RETURN INT;
DECLARE LS_COUNT_KEY INT;
DECLARE LS_DATE DATETIME;
DECLARE LS_FULLNAME VARCHAR(120);
DECLARE LS_INBOX_APPROVER_PERSON_ID VARCHAR(40);
DECLARE LS_CODE CHAR(5) DEFAULT '00000';
DECLARE LS_MSG TEXT;
DECLARE LS_DOCUMENT_TYPE_CODE VARCHAR(3);
DECLARE LI_FLAG INT;
DECLARE LI_NEXT_MAP_ID INT;
DECLARE LI_NEXT_MAP_NUMBER INT;
DECLARE LS_AWARD_TITLE VARCHAR(300);
DECLARE LS_SERVICE_REQUEST_TYPE VARCHAR(200);
DECLARE LI_AWD_MODIFI_FLAG INT;
DECLARE LI_VARIATION_FLAG INT;
DECLARE LS_ERROR VARCHAR(1000);
DECLARE LS_CLAIM_NUMBER VARCHAR(20);
DECLARE LS_AGREEMENT_TYPE VARCHAR(200);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE,
@errno = MYSQL_ERRNO, @msg = MESSAGE_TEXT;
SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @msg);
SELECT @full_error INTO LS_ERROR;
INSERT INTO WORKFLOW_APPROVE_ERROR_LOG(ERROR_MSG,UPDATE_USER) VALUES(LS_ERROR,AV_UPDATE_USER);
Return null;
END;
   
EXIT_LABEL : BEGIN
   
   SET LL_NEXT_APPROVAL_STOP_NUMBER = NULL;
   SET LS_DATE = utc_timestamp();
   
    SELECT COUNT(*) INTO LS_COUNT_KEY FROM WORKFLOW 
    WHERE MODULE_ITEM_ID = AV_MODULE_ITEM_ID 
    AND MODULE_CODE = AV_MODULE_CODE
    AND SUB_MODULE_ITEM_ID = AV_SUB_MODULE_ITEM_KEY
    AND SUB_MODULE_CODE = AV_SUBMODULE_CODE
    AND IS_WORKFLOW_ACTIVE = 'Y';
    
    IF LS_COUNT_KEY < 1 THEN 
        RETURN 0;
    END IF;
    
	IF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 0 THEN 
			SELECT TITLE,SUBMIT_USER,AWARD_NUMBER,AWARD_DOCUMENT_TYPE_CODE INTO LS_TITLE,LS_SUBMIT_USER,LS_AWARD_NUMBER,LS_DOCUMENT_TYPE_CODE
            FROM AWARD WHERE AWARD_ID = AV_MODULE_ITEM_ID;

            IF AV_ACTION_TYPE IN('A','B') AND LS_DOCUMENT_TYPE_CODE = '3' THEN
			    SET LS_MESSAGE_TYPE_CODE= '122';
			ELSEIF AV_ACTION_TYPE IN('A','B') AND LS_DOCUMENT_TYPE_CODE <> '3' THEN
			    SET LS_MESSAGE_TYPE_CODE= '101';
			ELSEIF AV_ACTION_TYPE = 'R' AND LS_DOCUMENT_TYPE_CODE <> '3' THEN
			    SET LS_MESSAGE_TYPE_CODE= '106';
			ELSEIF AV_ACTION_TYPE = 'R' AND LS_DOCUMENT_TYPE_CODE = '3' THEN
				SET LS_MESSAGE_TYPE_CODE= '121';
            END IF;
			SET LS_MODULE_ITEM_ID = LS_AWARD_NUMBER;
			
	ELSEIF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 2 THEN 
			SELECT T2.DESCRIPTION,T1.CREATE_USER,T1.MODULE_ITEM_KEY INTO LS_TITLE,LS_CREATE_USER,LS_AWARD_NUMBER
            FROM TASK T1 LEFT JOIN TASK_TYPE T2 ON T1.TASK_TYPE_CODE = T2.TASK_TYPE_CODE 
			WHERE T1.TASK_ID = AV_SUB_MODULE_ITEM_KEY ;
			
			SELECT TITLE INTO LS_AWARD_TITLE
            FROM AWARD WHERE AWARD_ID = AV_MODULE_ITEM_ID;
			
      IF AV_ACTION_TYPE IN('A','B') THEN
			    SET LS_MESSAGE_TYPE_CODE= '114';
			ELSEIF AV_ACTION_TYPE = 'R' THEN
			    SET LS_MESSAGE_TYPE_CODE= '115';
            END IF;
	
			SET LS_MODULE_ITEM_ID = AV_SUB_MODULE_ITEM_KEY;

	ELSEIF AV_MODULE_CODE = 3 THEN
			SELECT TITLE,SUBMIT_USER INTO LS_TITLE,LS_SUBMIT_USER 
            FROM EPS_PROPOSAL WHERE PROPOSAL_ID = AV_MODULE_ITEM_ID;
			IF AV_ACTION_TYPE IN('A','B') THEN
			    SET LS_MESSAGE_TYPE_CODE= '102';
			ELSEIF AV_ACTION_TYPE = 'R' THEN
			    SET LS_MESSAGE_TYPE_CODE= '105';
            END IF;
			SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;
			
	ELSEIF AV_MODULE_CODE = 5 THEN 
			SELECT T1.TITLE INTO LS_TITLE 
			FROM  NEGOTIATION T1 
			WHERE T1.NEGOTIATION_ID = AV_MODULE_ITEM_ID ;
            
            SET LS_SUBMIT_USER = (SELECT SUBMIT_USER FROM NEGOTIATION WHERE NEGOTIATION_ID = AV_MODULE_ITEM_ID);
            
            IF AV_ACTION_TYPE IN('A','B') THEN
			    SET LS_MESSAGE_TYPE_CODE= '104';
			ELSEIF AV_ACTION_TYPE = 'R' THEN
			    SET LS_MESSAGE_TYPE_CODE= '107';
            END IF;
			SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;

    ELSEIF AV_MODULE_CODE = 13 THEN 
			SELECT TITLE,CREATE_USER INTO LS_TITLE,LS_CREATE_USER
            FROM AGREEMENT_HEADER WHERE AGREEMENT_REQUEST_ID = AV_MODULE_ITEM_ID; 
			IF AV_ACTION_TYPE IN('A','B') THEN
			    SET LS_MESSAGE_TYPE_CODE= '1308';
			ELSEIF AV_ACTION_TYPE = 'R' THEN
			    SET LS_MESSAGE_TYPE_CODE= '1309';
            END IF;
			SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;
ELSEIF AV_MODULE_CODE = 14 THEN
SELECT TITLE INTO LS_TITLE
FROM CLAIM WHERE CLAIM_ID = AV_MODULE_ITEM_ID;
SET LS_SUBMIT_USER = (SELECT CREATE_USER FROM CLAIM WHERE CLAIM_ID = AV_MODULE_ITEM_ID);
IF AV_ACTION_TYPE IN('A','B') THEN
SET LS_MESSAGE_TYPE_CODE= '123';
ELSEIF AV_ACTION_TYPE = 'R' THEN
SET LS_MESSAGE_TYPE_CODE= '124';
END IF;
SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;
ELSEIF AV_MODULE_CODE = 16 THEN
SELECT TITLE INTO LS_TITLE FROM AWARD WHERE AWARD_ID IN(SELECT AWARD_ID
FROM AWARD_PROGRESS_REPORT
WHERE PROGRESS_REPORT_ID = AV_MODULE_ITEM_ID);
SET LS_SUBMIT_USER = (SELECT CREATE_USER FROM AWARD_PROGRESS_REPORT WHERE PROGRESS_REPORT_ID = AV_MODULE_ITEM_ID);
IF AV_ACTION_TYPE IN('A','B') THEN
SET LS_MESSAGE_TYPE_CODE= '126';
ELSEIF AV_ACTION_TYPE = 'R' THEN
SET LS_MESSAGE_TYPE_CODE= '127';
END IF;
SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;
ELSEIF AV_MODULE_CODE = 13 THEN
SELECT TITLE,CREATE_USER INTO LS_TITLE,LS_CREATE_USER
FROM AGREEMENT_HEADER WHERE AGREEMENT_REQUEST_ID = AV_MODULE_ITEM_ID;
IF AV_ACTION_TYPE IN('A','B') THEN
SET LS_MESSAGE_TYPE_CODE= '1308';
ELSEIF AV_ACTION_TYPE = 'R' THEN
SET LS_MESSAGE_TYPE_CODE= '1309';
END IF;
SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;
ELSEIF AV_MODULE_CODE = 20 THEN
SELECT SUBJECT INTO LS_TITLE
FROM SR_HEADER WHERE SR_HEADER_ID = AV_MODULE_ITEM_ID;
SET LS_SUBMIT_USER = (SELECT CREATE_USER FROM SR_HEADER WHERE SR_HEADER_ID = AV_MODULE_ITEM_ID);
IF AV_ACTION_TYPE IN('A','B') THEN
SET LS_MESSAGE_TYPE_CODE= '135';
ELSEIF AV_ACTION_TYPE = 'R' THEN
SET LS_MESSAGE_TYPE_CODE= '136';
END IF;
SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;
END IF;
SELECT COUNT(1) INTO LI_VARIATION_FLAG FROM AWARD
WHERE AWARD_ID = AV_MODULE_ITEM_ID
AND AWARD_DOCUMENT_TYPE_CODE = 3;
SELECT COUNT(1) INTO LI_AWD_MODIFI_FLAG FROM AWARD
WHERE AWARD_ID = AV_MODULE_ITEM_ID
AND AWARD_DOCUMENT_TYPE_CODE = 2;
SELECT T2.DESCRIPTION INTO LS_SERVICE_REQUEST_TYPE FROM AWARD T1
INNER JOIN SR_TYPE T2 ON T1.AWARD_VARIATION_TYPE_CODE = T2.TYPE_CODE
WHERE AWARD_ID = AV_MODULE_ITEM_ID;
IF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 0 AND LI_VARIATION_FLAG > 0 THEN
SET LS_USER_MESSAGE = CONCAT(LS_SERVICE_REQUEST_TYPE,' for #',LS_AWARD_NUMBER,' : ',LS_TITLE);
ELSEIF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 0 AND LI_AWD_MODIFI_FLAG > 0 THEN
SET LS_USER_MESSAGE = CONCAT('Admin Correction for ',LS_AWARD_NUMBER,' : ',LS_TITLE);
ELSEIF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 2 THEN
IF LI_VARIATION_FLAG > 0 THEN
SET LS_USER_MESSAGE = CONCAT(LS_SERVICE_REQUEST_TYPE,' ',LS_TITLE,' for #',LS_AWARD_NUMBER,' : ',LS_AWARD_TITLE);
ELSEIF LI_AWD_MODIFI_FLAG > 0 THEN
SET LS_USER_MESSAGE = CONCAT('Admin Correction ',LS_TITLE,' for #',LS_AWARD_NUMBER,' : ',LS_AWARD_TITLE);
ELSE
SET LS_USER_MESSAGE = CONCAT(LS_TITLE,' for #',LS_AWARD_NUMBER,' : ',LS_AWARD_TITLE);
END IF;
ELSEIF AV_MODULE_CODE = 16 THEN
  SELECT T1.TITLE,T2.DESCRIPTION,T1.PROGRESS_REPORT_NUMBER INTO LS_REPORT_TITLE,LS_REPORT_CLASS_NAME,LS_PROGRESS_REPORT_NUMBER  FROM award_progress_report T1 LEFT JOIN REPORT_CLASS T2 
			ON T1.REPORT_CLASS_CODE = T2.REPORT_CLASS_CODE WHERE T1.PROGRESS_REPORT_ID =  AV_MODULE_ITEM_ID;			
			SET LS_USER_MESSAGE = CONCAT(LS_REPORT_CLASS_NAME,' #',LS_PROGRESS_REPORT_NUMBER," : ",LS_REPORT_TITLE);
ELSEIF AV_MODULE_CODE = 13 THEN
	SELECT T2.DESCRIPTION INTO LS_AGREEMENT_TYPE FROM  AGREEMENT_HEADER T1
	INNER JOIN AGREEMENT_TYPE T2  ON T2.AGREEMENT_TYPE_CODE = T1.AGREEMENT_TYPE_CODE
	WHERE AGREEMENT_REQUEST_ID = LS_MODULE_ITEM_ID;
	SET LS_USER_MESSAGE = CONCAT('#',LS_MODULE_ITEM_ID,' : ',LS_TITLE,' - ', LS_AGREEMENT_TYPE);
ELSEIF AV_MODULE_CODE = 14 THEN
SELECT CLAIM_NUMBER INTO LS_CLAIM_NUMBER FROM CLAIM WHERE CLAIM_ID = AV_MODULE_ITEM_ID;
SET LS_USER_MESSAGE = CONCAT('#',LS_CLAIM_NUMBER,' : ',LS_TITLE);
ELSE
SET LS_USER_MESSAGE = CONCAT('#',LS_MODULE_ITEM_ID,' : ',LS_TITLE);
END IF;
SELECT DISTINCT T1.WORKFLOW_ID, T2.MAP_ID, T2.MAP_NUMBER, T2.APPROVAL_STOP_NUMBER, T2.APPROVER_NUMBER,T2.WORKFLOW_DETAIL_ID
INTO LL_WORKFLOW_ID,LL_MAP_ID,LL_MAP_NUMBER,LL_APPROVAL_STOP_NUMBER,LL_APPROVER_NUMBER,LL_WORKFLOW_DETAIL_ID
FROM WORKFLOW T1
INNER JOIN WORKFLOW_DETAIL T2 ON T1.WORKFLOW_ID = T2.WORKFLOW_ID
WHERE T1.MODULE_ITEM_ID = AV_MODULE_ITEM_ID
AND T1.SUB_MODULE_ITEM_ID = AV_SUB_MODULE_ITEM_KEY
AND T1.SUB_MODULE_CODE = AV_SUBMODULE_CODE
AND T1.IS_WORKFLOW_ACTIVE = 'Y'
AND T2.APPROVAL_STATUS = 'W'
AND T1.MODULE_CODE = AV_MODULE_CODE
AND T2.APPROVER_PERSON_ID = AV_PERSON_ID
AND T2.APPROVER_NUMBER IN (
SELECT MIN(S1.APPROVER_NUMBER) FROM WORKFLOW_DETAIL S1
WHERE S1.WORKFLOW_ID = T2.WORKFLOW_ID
AND S1.APPROVAL_STOP_NUMBER = T2.APPROVAL_STOP_NUMBER
AND S1.APPROVAL_STATUS = T2.APPROVAL_STATUS
AND S1.APPROVER_PERSON_ID = T2.APPROVER_PERSON_ID
)
AND T2.MAP_NUMBER IN (
SELECT MIN(S1.MAP_NUMBER) FROM WORKFLOW_DETAIL S1
WHERE S1.WORKFLOW_ID = T2.WORKFLOW_ID
AND   S1.APPROVAL_STATUS = 'W'
AND   S1.APPROVAL_STOP_NUMBER = T2.APPROVAL_STOP_NUMBER
AND   S1.APPROVER_PERSON_ID = T2.APPROVER_PERSON_ID
);
IF AV_ACTION_TYPE = 'R' THEN
UPDATE WORKFLOW_DETAIL
SET APPROVAL_STATUS = 'R' ,
UPDATE_USER = AV_UPDATE_USER,
UPDATE_TIMESTAMP = LS_DATE,
APPROVAL_COMMENT = AV_COMMENTS,
APPROVAL_DATE = LS_DATE
WHERE WORKFLOW_ID = LL_WORKFLOW_ID
AND MAP_ID = LL_MAP_ID
AND MAP_NUMBER = LL_MAP_NUMBER
AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
AND APPROVER_NUMBER = LL_APPROVER_NUMBER
AND APPROVAL_STATUS = 'W'
AND APPROVER_PERSON_ID = AV_PERSON_ID;
UPDATE WORKFLOW_DETAIL
SET APPROVAL_STATUS = 'J' ,
UPDATE_USER = AV_UPDATE_USER,
UPDATE_TIMESTAMP = LS_DATE,
APPROVAL_DATE = LS_DATE
WHERE WORKFLOW_ID = LL_WORKFLOW_ID
AND MAP_ID = LL_MAP_ID
AND MAP_NUMBER = LL_MAP_NUMBER
AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
AND APPROVER_NUMBER = LL_APPROVER_NUMBER
AND APPROVAL_STATUS = 'W'
AND APPROVER_PERSON_ID <> AV_PERSON_ID;
SELECT COUNT(*) INTO INBOX_ACTION_COUNT
FROM WORKFLOW_DETAIL
WHERE  WORKFLOW_ID = LL_WORKFLOW_ID
AND MAP_ID = LL_MAP_ID
AND MAP_NUMBER = LL_MAP_NUMBER
AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
AND APPROVER_NUMBER = LL_APPROVER_NUMBER
AND APPROVAL_STATUS IN('R','J')
AND (APPROVER_PERSON_ID = AV_PERSON_ID OR APPROVER_PERSON_ID <> AV_PERSON_ID);
IF INBOX_ACTION_COUNT > 0 THEN
UPDATE INBOX SET OPENED_FLAG = 'Y'
WHERE MODULE_CODE = AV_MODULE_CODE
AND MODULE_ITEM_KEY = AV_MODULE_ITEM_ID
AND SUB_MODULE_CODE = AV_SUBMODULE_CODE
AND SUB_MODULE_ITEM_KEY = AV_SUB_MODULE_ITEM_KEY
AND OPENED_FLAG = 'N' ;
END IF;
SET LS_DATE = utc_timestamp();
UPDATE WORKFLOW
SET WORKFLOW_END_PERSON = AV_PERSON_ID,
WORKFLOW_END_DATE = LS_DATE
WHERE WORKFLOW_ID = LL_WORKFLOW_ID
AND IS_WORKFLOW_ACTIVE = 'Y';
IF AV_MODULE_CODE IN (1,3,5,13,14,16)  AND AV_SUBMODULE_CODE <> 2 THEN
  
  SELECT PERSON_ID 
    INTO LS_PERSON_ID
    FROM PERSON 
    WHERE USER_NAME = LS_SUBMIT_USER;

    CALL ADD_TO_INBOX(AV_MODULE_CODE,AV_MODULE_ITEM_ID,LS_PERSON_ID,'R',LS_USER_MESSAGE,AV_UPDATE_USER,LS_MESSAGE_TYPE_CODE,AV_SUBMODULE_CODE,AV_SUB_MODULE_ITEM_KEY);
	
    IF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE <> 2 THEN

             SELECT USER_NAME,PERSON_ID INTO LS_PI_USER,LS_PI_PERSON_ID FROM PERSON 
            WHERE PERSON_ID IN (SELECT PERSON_ID FROM AWARD_PERSONS T1 
                                INNER JOIN AWARD T2 ON T2.AWARD_NUMBER = T1.AWARD_NUMBER 
                                AND (T2.AWARD_SEQUENCE_STATUS IN('ACTIVE')
                                OR (T2.AWARD_SEQUENCE_STATUS IN('PENDING') AND T2.AWARD_DOCUMENT_TYPE_CODE = 1))
                                WHERE T1.AWARD_ID = AV_MODULE_ITEM_ID AND PI_FLAG = 'Y');
    ELSE IF AV_MODULE_CODE = 3 AND AV_SUBMODULE_CODE <> 2  THEN      
            SELECT USER_NAME,PERSON_ID INTO LS_PI_USER,LS_PI_PERSON_ID FROM PERSON 
            WHERE PERSON_ID IN (SELECT PERSON_ID FROM EPS_PROPOSAL_PERSONS WHERE PROPOSAL_ID = AV_MODULE_ITEM_ID AND PI_FLAG = 'Y');
    END IF;
    END IF;
    IF LS_PI_USER IS NOT NULL AND LS_PI_USER <> LS_SUBMIT_USER THEN 

                CALL ADD_TO_INBOX(AV_MODULE_CODE,AV_MODULE_ITEM_ID,LS_PI_PERSON_ID,'R',LS_USER_MESSAGE,AV_UPDATE_USER,LS_MESSAGE_TYPE_CODE,AV_SUBMODULE_CODE,AV_SUB_MODULE_ITEM_KEY);

    END IF;

  END IF;
	
	IF AV_MODULE_CODE = 1 AND AV_SUBMODULE_CODE = 2 THEN
	
			SELECT ASSIGNEE_PERSON_ID  INTO LS_PERSON_ID FROM TASK 
			WHERE TASK_ID = AV_SUB_MODULE_ITEM_KEY ;
	
		    CALL ADD_TO_INBOX(AV_MODULE_CODE,AV_MODULE_ITEM_ID,LS_PERSON_ID,'R',LS_USER_MESSAGE,AV_UPDATE_USER,LS_MESSAGE_TYPE_CODE,AV_SUBMODULE_CODE,AV_SUB_MODULE_ITEM_KEY);
	
	END IF;

	ELSEIF AV_ACTION_TYPE = 'C' THEN 
	SELECT T2.WORKFLOW_DETAIL_ID,T1.WORKFLOW_ID,T2.MAP_ID,T2.MAP_NUMBER,T2.APPROVAL_STOP_NUMBER
    INTO LL_WORKFLOW_DETAIL_ID,LI_WORKFLOW_ID,LI_MAP_ID,LI_MAP_NUMBER,LI_APPROVAL_STOP_NUMBER
    FROM WORKFLOW T1
    INNER JOIN WORKFLOW_DETAIL T2 ON T1.WORKFLOW_ID = T2.WORKFLOW_ID
    WHERE T1.MODULE_ITEM_ID = AV_MODULE_ITEM_ID
    AND T1.SUB_MODULE_ITEM_ID = AV_SUB_MODULE_ITEM_KEY
    AND T1.SUB_MODULE_CODE = AV_SUBMODULE_CODE
    AND T1.IS_WORKFLOW_ACTIVE = 'Y'
    AND T2.APPROVAL_STATUS = 'W'
    AND T1.MODULE_CODE = AV_MODULE_CODE
    AND T2.APPROVER_NUMBER IN (
                              SELECT MIN(S1.APPROVER_NUMBER) FROM WORKFLOW_DETAIL S1
                              WHERE S1.WORKFLOW_ID = T2.WORKFLOW_ID
                              AND S1.APPROVAL_STOP_NUMBER = T2.APPROVAL_STOP_NUMBER
                              AND S1.APPROVAL_STATUS = T2.APPROVAL_STATUS
                              AND S1.APPROVER_PERSON_ID = T2.APPROVER_PERSON_ID                              
                            )
	  AND T2.MAP_NUMBER IN (
                           SELECT MIN(S1.MAP_NUMBER) FROM WORKFLOW_DETAIL S1
						   WHERE S1.WORKFLOW_ID = T2.WORKFLOW_ID 
                           AND   S1.APPROVAL_STATUS = 'W'
                           AND   S1.APPROVAL_STOP_NUMBER = T2.APPROVAL_STOP_NUMBER 
						   AND   S1.APPROVER_PERSON_ID = T2.APPROVER_PERSON_ID 
                           )
	  AND T2.WORKFLOW_DETAIL_ID IN(
	                           SELECT MIN(S1.WORKFLOW_DETAIL_ID) FROM WORKFLOW_DETAIL S1
						   WHERE S1.WORKFLOW_ID = T2.WORKFLOW_ID 
                           AND   S1.APPROVAL_STATUS = 'W'
	);

	UPDATE WORKFLOW_DETAIL
    SET APPROVAL_STATUS = 'C' , 
      UPDATE_USER = AV_UPDATE_USER,
      UPDATE_TIMESTAMP = LS_DATE,
      APPROVAL_COMMENT = AV_COMMENTS,
      APPROVAL_DATE = LS_DATE
    WHERE WORKFLOW_ID = LI_WORKFLOW_ID
    AND MAP_ID = LI_MAP_ID
    AND MAP_NUMBER = LI_MAP_NUMBER
    AND APPROVAL_STOP_NUMBER = LI_APPROVAL_STOP_NUMBER
    AND APPROVAL_STATUS = 'W';
	
	UPDATE INBOX SET OPENED_FLAG = 'Y'  
    WHERE MODULE_CODE = AV_MODULE_CODE
    AND MODULE_ITEM_KEY = AV_MODULE_ITEM_ID
    AND SUB_MODULE_CODE = AV_SUBMODULE_CODE
    AND SUB_MODULE_ITEM_KEY = AV_SUB_MODULE_ITEM_KEY
    AND OPENED_FLAG = 'N' ;
    
	UPDATE WORKFLOW
    SET WORKFLOW_END_PERSON = AV_PERSON_ID,
       WORKFLOW_END_DATE = LS_DATE
    WHERE WORKFLOW_ID = LI_WORKFLOW_ID
    AND IS_WORKFLOW_ACTIVE = 'Y'; 

ELSEIF AV_ACTION_TYPE IN ('A') THEN
    
	 SET LS_BYPASS_APPROVAL_STATUS = AV_ACTION_TYPE;
	 SELECT (CASE WHEN AV_ACTION_TYPE = 'A' THEN 'O'
				 WHEN AV_ACTION_TYPE = 'B' THEN 'K'
			END ) INTO LS_ALTERNATE_APPROVAL_STATUS FROM DUAL;

	SELECT COUNT(*) INTO LI_COUNT
    FROM WORKFLOW_DETAIL 
    WHERE WORKFLOW_ID = LL_WORKFLOW_ID
    AND MAP_ID = LL_MAP_ID
    AND MAP_NUMBER = LL_MAP_NUMBER
    AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
    AND APPROVER_NUMBER = LL_APPROVER_NUMBER
    AND APPROVAL_STATUS = 'W' 
	  AND APPROVER_PERSON_ID = AV_PERSON_ID;
	
	IF LI_COUNT = 0 THEN
	
		SET LL_WORKFLOW_DETAIL_ID = NULL;
		
		LEAVE EXIT_LABEL;

	END IF;
	
	UPDATE INBOX T1 INNER JOIN (SELECT INBOX_ID FROM INBOX  WHERE MODULE_CODE = AV_MODULE_CODE
        AND MODULE_ITEM_KEY = AV_MODULE_ITEM_ID
		AND SUB_MODULE_CODE = AV_SUBMODULE_CODE
		AND SUB_MODULE_ITEM_KEY = AV_SUB_MODULE_ITEM_KEY
        AND TO_PERSON_ID IN(
			SELECT APPROVER_PERSON_ID   FROM WORKFLOW_DETAIL 
								WHERE  WORKFLOW_ID = LL_WORKFLOW_ID
								AND MAP_ID = LL_MAP_ID
								AND MAP_NUMBER = LL_MAP_NUMBER
								AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
								AND APPROVER_NUMBER = LL_APPROVER_NUMBER
                                AND APPROVAL_STATUS='W') AND OPENED_FLAG = 'N' 
                                GROUP BY TO_PERSON_ID) T2
                                ON T1.INBOX_ID= T2.INBOX_ID
                                SET T1.OPENED_FLAG = 'Y' ;
	
	UPDATE WORKFLOW_DETAIL         
    SET APPROVAL_STATUS = LS_BYPASS_APPROVAL_STATUS, 
      UPDATE_USER = AV_UPDATE_USER,
      UPDATE_TIMESTAMP = LS_DATE,
      APPROVAL_COMMENT = AV_COMMENTS,
      APPROVAL_DATE = LS_DATE
    WHERE WORKFLOW_ID = LL_WORKFLOW_ID
    AND MAP_ID = LL_MAP_ID
    AND MAP_NUMBER = LL_MAP_NUMBER
    AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
    AND APPROVER_NUMBER = LL_APPROVER_NUMBER
    AND APPROVAL_STATUS = 'W' 
    AND APPROVER_PERSON_ID = AV_PERSON_ID;
    
	UPDATE WORKFLOW_DETAIL         
	SET APPROVAL_STATUS = LS_ALTERNATE_APPROVAL_STATUS, 
      UPDATE_USER = AV_UPDATE_USER,
      UPDATE_TIMESTAMP = LS_DATE,		
      APPROVAL_DATE = LS_DATE
    WHERE WORKFLOW_ID = LL_WORKFLOW_ID
    AND MAP_ID = LL_MAP_ID
    AND MAP_NUMBER = LL_MAP_NUMBER
    AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
    AND APPROVER_NUMBER = LL_APPROVER_NUMBER
    AND APPROVAL_STATUS = 'W' 
    AND APPROVER_PERSON_ID <> AV_PERSON_ID;

    SELECT COUNT(*)  INTO LL_CUR_STOP_WPERSON_COUNT   
      FROM WORKFLOW_DETAIL
      WHERE WORKFLOW_ID = LL_WORKFLOW_ID
      AND MAP_ID = LL_MAP_ID
      AND MAP_NUMBER = LL_MAP_NUMBER
      AND APPROVAL_STOP_NUMBER = LL_APPROVAL_STOP_NUMBER
      AND APPROVAL_STATUS IN ('W');
    
    IF LL_CUR_STOP_WPERSON_COUNT < 1 THEN     
    
                
        SELECT MIN(APPROVAL_STOP_NUMBER) INTO LL_NEXT_APPROVAL_STOP_NUMBER  
          FROM WORKFLOW_DETAIL 
          WHERE WORKFLOW_ID = LL_WORKFLOW_ID
          AND MAP_NUMBER = LL_MAP_NUMBER
          AND MAP_ID = LL_MAP_ID
          AND APPROVAL_STATUS = 'T' 
          AND APPROVAL_STOP_NUMBER > LL_APPROVAL_STOP_NUMBER;

			IF LL_NEXT_APPROVAL_STOP_NUMBER IS NOT NULL THEN 
			
					UPDATE WORKFLOW_DETAIL
            SET APPROVAL_STATUS = 'W' , 
              UPDATE_USER = AV_UPDATE_USER,
              UPDATE_TIMESTAMP = LS_DATE
            WHERE WORKFLOW_ID = LL_WORKFLOW_ID
            AND MAP_ID = LL_MAP_ID
            AND MAP_NUMBER = LL_MAP_NUMBER
            AND APPROVAL_STOP_NUMBER = LL_NEXT_APPROVAL_STOP_NUMBER
            AND APPROVAL_STATUS = 'T' ;

					SET LI_COUNT =  FN_WORKFLOW_HANDLE_DELEGATIONS(LL_WORKFLOW_ID,
												LL_MAP_NUMBER,
												LL_NEXT_APPROVAL_STOP_NUMBER,
												'W',
												AV_PERSON_ID,
												AV_UPDATE_USER);

			ELSE   
            
					SELECT MIN(MAP_NUMBER),MAP_ID INTO LL_NEXT_MAP_NUMBER,LL_NEXT_MAP_ID
					FROM WORKFLOW_DETAIL 
					WHERE WORKFLOW_ID = LL_WORKFLOW_ID
					AND APPROVAL_STATUS = 'T';
                    
				   IF LL_NEXT_MAP_NUMBER IS NOT NULL THEN
				   
				    SELECT MIN(APPROVAL_STOP_NUMBER) INTO LL_NEXT_APPROVAL_STOP_NUMBER 
						FROM WORKFLOW_DETAIL 
						WHERE WORKFLOW_ID = LL_WORKFLOW_ID
						AND MAP_ID = LL_NEXT_MAP_ID
						AND MAP_NUMBER = LL_NEXT_MAP_NUMBER
            AND APPROVAL_STATUS = 'T' ;
                        
            UPDATE WORKFLOW_DETAIL
              SET APPROVAL_STATUS = 'W' , 
                UPDATE_USER = AV_UPDATE_USER,
                UPDATE_TIMESTAMP = LS_DATE
              WHERE WORKFLOW_ID = LL_WORKFLOW_ID
              AND MAP_ID = LL_NEXT_MAP_ID
              AND MAP_NUMBER = LL_NEXT_MAP_NUMBER
              AND APPROVAL_STOP_NUMBER = LL_NEXT_APPROVAL_STOP_NUMBER 
              AND APPROVAL_STATUS = 'T' ;
						
						SET LI_COUNT =  FN_WORKFLOW_HANDLE_DELEGATIONS(LL_WORKFLOW_ID,
													LL_NEXT_MAP_NUMBER,
													LL_NEXT_APPROVAL_STOP_NUMBER,
													'W',
													AV_PERSON_ID,
													AV_UPDATE_USER);

                   END IF;
  
			END IF;
	
    END IF;

  		SELECT COUNT(*) INTO LI_COUNT 
		  FROM WORKFLOW 
		  WHERE  WORKFLOW_ID = LL_WORKFLOW_ID AND MAP_TYPE = 'E';	

		 IF LI_COUNT > 0 THEN
		 
			SELECT TITLE,CREATE_USER INTO LS_TITLE,LS_CREATE_USER 
			FROM EPS_PROPOSAL WHERE PROPOSAL_ID = AV_MODULE_ITEM_ID;
			SET LS_MESSAGE_TYPE_CODE= '125';
			SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;	
			SET LS_USER_MESSAGE = CONCAT('#',LS_MODULE_ITEM_ID,' : ',LS_TITLE);					
				 
		 END IF;	   
		  SELECT COUNT(T2.WORKFLOW_DETAIL_ID) INTO LI_COUNT 
		  FROM WORKFLOW T1
		  INNER JOIN WORKFLOW_DETAIL T2 ON T1.WORKFLOW_ID = T2.WORKFLOW_ID
		  WHERE T1.WORKFLOW_ID = LL_WORKFLOW_ID
		  AND T1.IS_WORKFLOW_ACTIVE = 'Y'
		  AND T2.APPROVAL_STATUS = 'W';	

		  IF LI_COUNT = 0 THEN  

			  SET LS_DATE = utc_timestamp();          
			  UPDATE WORKFLOW
			  SET WORKFLOW_END_PERSON = AV_PERSON_ID,
				  WORKFLOW_END_DATE = LS_DATE
			  WHERE WORKFLOW_ID = LL_WORKFLOW_ID
              AND IS_WORKFLOW_ACTIVE = 'Y';  
              
		  ELSE 
               BEGIN
					  DECLARE PERSON_ID_CURSOR CURSOR FOR
					  SELECT APPROVER_PERSON_ID
					  FROM WORKFLOW_DETAIL WHERE WORKFLOW_ID = LL_WORKFLOW_ID
					  AND APPROVAL_STOP_NUMBER = LL_NEXT_APPROVAL_STOP_NUMBER
					  AND APPROVAL_STATUS = 'W';
		   
					  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE1 = TRUE;

					  OPEN PERSON_ID_CURSOR;
						
					  PERSON_ID_CURSOR_LOOP : LOOP
						
								FETCH PERSON_ID_CURSOR INTO LS_PERSON_ID;
								
								IF DONE1 THEN
									LEAVE PERSON_ID_CURSOR_LOOP;
								END IF;
									
								
								CALL ADD_TO_INBOX(AV_MODULE_CODE,AV_MODULE_ITEM_ID,LS_PERSON_ID,'R',LS_USER_MESSAGE,AV_UPDATE_USER,LS_MESSAGE_TYPE_CODE,AV_SUBMODULE_CODE,AV_SUB_MODULE_ITEM_KEY);
								
						END LOOP;	
						
					   CLOSE PERSON_ID_CURSOR;
                       
			   END;
		   END IF;
ELSEIF AV_ACTION_TYPE = 'B' THEN 

SELECT T1.WORKFLOW_ID	
    INTO LL_WORKFLOW_ID
	FROM WORKFLOW T1
	WHERE T1.MODULE_ITEM_ID = AV_MODULE_ITEM_ID
	AND T1.SUB_MODULE_ITEM_ID = AV_SUB_MODULE_ITEM_KEY
	AND T1.SUB_MODULE_CODE = AV_SUBMODULE_CODE
	AND T1.IS_WORKFLOW_ACTIVE = 'Y'
    AND T1.MODULE_CODE = AV_MODULE_CODE;
	
	
	SELECT WORKFLOW_DETAIL_ID INTO LL_WORKFLOW_DETAIL_ID 
    FROM WORKFLOW_DETAIL T1
	WHERE T1.WORKFLOW_ID = LL_WORKFLOW_ID 
	AND T1.MAP_ID = AV_MAP_ID
	AND T1.MAP_NUMBER = AV_MAP_NUMBER
	AND T1.APPROVAL_STOP_NUMBER = AV_APPROVAL_STOP_NUMBER
	AND T1.APPROVER_NUMBER = AV_APPROVER_NUMBER
	AND T1.WORKFLOW_DETAIL_ID IN (SELECT MIN(T2.WORKFLOW_DETAIL_ID) FROM WORKFLOW_DETAIL T2 
								  WHERE T1.WORKFLOW_ID = T2.WORKFLOW_ID
                                    AND T1.MAP_ID = T2.MAP_ID
									AND T1.MAP_NUMBER = T2.MAP_NUMBER
									AND T1.APPROVAL_STOP_NUMBER = T2.APPROVAL_STOP_NUMBER
									AND T1.APPROVER_NUMBER = T2.APPROVER_NUMBER
								 );

	
	

	SET LS_BYPASS_APPROVAL_STATUS = AV_ACTION_TYPE;
	SELECT (CASE WHEN AV_ACTION_TYPE = 'B' THEN 'K'
			END ) INTO LS_ALTERNATE_APPROVAL_STATUS FROM DUAL;
            
	SELECT COUNT(*) INTO LI_COUNT
	FROM WORKFLOW_DETAIL 
	WHERE WORKFLOW_ID = LL_WORKFLOW_ID
	AND MAP_ID = AV_MAP_ID
	AND MAP_NUMBER = AV_MAP_NUMBER
	AND APPROVAL_STOP_NUMBER = AV_APPROVAL_STOP_NUMBER
	AND APPROVER_NUMBER = AV_APPROVER_NUMBER
	AND APPROVAL_STATUS IN('W','T');
	
	IF LI_COUNT = 0 THEN
			SET LL_WORKFLOW_DETAIL_ID = NULL;
		
		LEAVE EXIT_LABEL;

	END IF;


	UPDATE INBOX T1 INNER JOIN (SELECT INBOX_ID FROM INBOX  WHERE MODULE_CODE = AV_MODULE_CODE
        AND MODULE_ITEM_KEY = AV_MODULE_ITEM_ID
		AND SUB_MODULE_CODE = AV_SUBMODULE_CODE
		AND SUB_MODULE_ITEM_KEY = AV_SUB_MODULE_ITEM_KEY
        AND TO_PERSON_ID IN(
			SELECT APPROVER_PERSON_ID   FROM WORKFLOW_DETAIL 
								WHERE  WORKFLOW_ID = LL_WORKFLOW_ID
								AND MAP_ID = AV_MAP_ID
								AND MAP_NUMBER = AV_MAP_NUMBER
								AND APPROVAL_STOP_NUMBER = AV_APPROVAL_STOP_NUMBER
								AND APPROVER_NUMBER = AV_APPROVER_NUMBER
                                AND APPROVAL_STATUS='W') AND OPENED_FLAG = 'N' 
                                GROUP BY TO_PERSON_ID) T2
                                ON T1.INBOX_ID= T2.INBOX_ID
                                SET T1.OPENED_FLAG = 'Y' ;

	UPDATE WORKFLOW_DETAIL         
	SET APPROVAL_STATUS = LS_BYPASS_APPROVAL_STATUS, 
		UPDATE_USER = AV_UPDATE_USER,
		UPDATE_TIMESTAMP = LS_DATE,
		APPROVAL_COMMENT = AV_COMMENTS,
		APPROVAL_DATE = LS_DATE
	WHERE WORKFLOW_ID = LL_WORKFLOW_ID
	AND MAP_ID = AV_MAP_ID
	AND MAP_NUMBER = AV_MAP_NUMBER
	AND APPROVAL_STOP_NUMBER = AV_APPROVAL_STOP_NUMBER
	AND APPROVER_NUMBER = AV_APPROVER_NUMBER;
	
	SELECT COUNT(1) INTO LI_FLAG
	FROM WORKFLOW_DETAIL
	WHERE WORKFLOW_ID = LL_WORKFLOW_ID
	AND APPROVAL_STATUS = 'W';
	
	IF LI_FLAG = 0 THEN
		
			SELECT COUNT(1) INTO LI_FLAG  
			FROM WORKFLOW_DETAIL T1
			WHERE T1.WORKFLOW_ID = LL_WORKFLOW_ID
			AND T1.APPROVAL_STATUS = 'T' 
			AND T1.MAP_NUMBER <= AV_MAP_NUMBER; 
			
			IF LI_FLAG > 0 THEN
		
				
				SELECT MIN(APPROVAL_STOP_NUMBER),MAP_ID,MAP_NUMBER INTO LL_NEXT_APPROVAL_STOP_NUMBER,LI_NEXT_MAP_ID,LI_NEXT_MAP_NUMBER
				FROM WORKFLOW_DETAIL T1
				WHERE T1.WORKFLOW_ID = LL_WORKFLOW_ID
				AND T1.APPROVAL_STATUS = 'T' 
				AND T1.MAP_NUMBER <= AV_MAP_NUMBER
                AND T1.MAP_NUMBER IN(SELECT MIN(T2.MAP_NUMBER) FROM WORKFLOW_DETAIL T2
											WHERE T2.WORKFLOW_ID = T1.WORKFLOW_ID
                                            AND T2.APPROVAL_STATUS = 'T'
											AND T2.MAP_NUMBER <= AV_MAP_NUMBER
                                            );
			ELSE
			
				SELECT MIN(APPROVAL_STOP_NUMBER),MAP_ID,MAP_NUMBER INTO LL_NEXT_APPROVAL_STOP_NUMBER,LI_NEXT_MAP_ID,LI_NEXT_MAP_NUMBER
				FROM WORKFLOW_DETAIL T1
				WHERE T1.WORKFLOW_ID = LL_WORKFLOW_ID
				AND T1.APPROVAL_STATUS = 'T' 
				AND T1.MAP_NUMBER > AV_MAP_NUMBER
                AND T1.MAP_NUMBER IN(SELECT MIN(T2.MAP_NUMBER) FROM WORKFLOW_DETAIL T2
											WHERE T2.WORKFLOW_ID = T1.WORKFLOW_ID
                                            AND T2.APPROVAL_STATUS = 'T'
											AND T2.MAP_NUMBER > AV_MAP_NUMBER
                                            );
			
			END IF;


			IF LL_NEXT_APPROVAL_STOP_NUMBER IS NOT NULL THEN 
			
				
				UPDATE WORKFLOW_DETAIL
				SET APPROVAL_STATUS = 'W' , 
				UPDATE_USER = AV_UPDATE_USER,
				UPDATE_TIMESTAMP = LS_DATE
				WHERE WORKFLOW_ID = LL_WORKFLOW_ID
				AND MAP_ID = LI_NEXT_MAP_ID
				AND MAP_NUMBER = LI_NEXT_MAP_NUMBER
				AND APPROVAL_STOP_NUMBER = LL_NEXT_APPROVAL_STOP_NUMBER
				AND APPROVAL_STATUS = 'T';
				
				SET LI_COUNT =  FN_WORKFLOW_HANDLE_DELEGATIONS(LL_WORKFLOW_ID,
											LI_NEXT_MAP_NUMBER,
											LL_NEXT_APPROVAL_STOP_NUMBER,
											'W',
											AV_PERSON_ID,
											AV_UPDATE_USER);

           END IF;
				
				  SELECT COUNT(*) INTO LI_COUNT 
				  FROM WORKFLOW 
				  WHERE  WORKFLOW_ID = LL_WORKFLOW_ID AND MAP_TYPE = 'E';	

				 IF LI_COUNT > 0 THEN
				 
					SELECT TITLE,CREATE_USER INTO LS_TITLE,LS_CREATE_USER 
					FROM EPS_PROPOSAL WHERE PROPOSAL_ID = AV_MODULE_ITEM_ID;
					SET LS_MESSAGE_TYPE_CODE= '125';
					SET LS_MODULE_ITEM_ID = AV_MODULE_ITEM_ID;	
					SET LS_USER_MESSAGE = CONCAT('#',LS_MODULE_ITEM_ID,' : ',LS_TITLE);					
						 
				 END IF;				  
                  
                  SELECT COUNT(T2.WORKFLOW_DETAIL_ID) INTO LI_COUNT 
				  FROM WORKFLOW T1
				  INNER JOIN WORKFLOW_DETAIL T2 ON T1.WORKFLOW_ID = T2.WORKFLOW_ID
				  WHERE T1.WORKFLOW_ID = LL_WORKFLOW_ID
				  AND T1.IS_WORKFLOW_ACTIVE = 'Y'
				  AND T2.APPROVAL_STATUS = 'W';	

				  IF LI_COUNT = 0 THEN  

					  SET LS_DATE = utc_timestamp();          
					  UPDATE WORKFLOW
					  SET WORKFLOW_END_PERSON = AV_PERSON_ID,
						  WORKFLOW_END_DATE = LS_DATE
					  WHERE WORKFLOW_ID = LL_WORKFLOW_ID
					  AND IS_WORKFLOW_ACTIVE = 'Y';  
					  
				  ELSE 
					   BEGIN
							  DECLARE PERSON_ID_CURSOR CURSOR FOR
							  SELECT APPROVER_PERSON_ID
							  FROM WORKFLOW_DETAIL WHERE WORKFLOW_ID = LL_WORKFLOW_ID
							  AND APPROVAL_STOP_NUMBER = LL_NEXT_APPROVAL_STOP_NUMBER
							  AND APPROVAL_STATUS = 'W';
				   
							  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE1 = TRUE;

							  OPEN PERSON_ID_CURSOR;
								
							  PERSON_ID_CURSOR_LOOP : LOOP
								
										FETCH PERSON_ID_CURSOR INTO LS_PERSON_ID;
										
										IF DONE1 THEN
											LEAVE PERSON_ID_CURSOR_LOOP;
										END IF;
											
										
										CALL ADD_TO_INBOX(AV_MODULE_CODE,AV_MODULE_ITEM_ID,LS_PERSON_ID,'R',LS_USER_MESSAGE,AV_UPDATE_USER,LS_MESSAGE_TYPE_CODE,AV_SUBMODULE_CODE,AV_SUB_MODULE_ITEM_KEY);
										
								END LOOP;	
								
							   CLOSE PERSON_ID_CURSOR;

					   END;
				   END IF;

				
	

	END IF;

END IF;
END;

	 RETURN  LL_WORKFLOW_DETAIL_ID;
   
END 
//