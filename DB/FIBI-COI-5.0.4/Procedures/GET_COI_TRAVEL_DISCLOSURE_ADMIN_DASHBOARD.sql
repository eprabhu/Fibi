DELIMITER //
CREATE PROCEDURE `GET_COI_TRAVEL_DISCLOSURE_ADMIN_DASHBOARD`(
		AV_DISCLOSURE_PERSON_ID         VARCHAR(40),
		AV_END_DATE                     VARCHAR(10),
		AV_ENTITY_ID                  	VARCHAR(90),
		AV_CERTIFICATION_DATE           VARCHAR(10),
		AV_HOME_UNIT                    VARCHAR(8),
		AV_TRAVEL_STATUS_CODE       	VARCHAR(20),
		AV_DOCUMENT_STATUS_CODE			VARCHAR(20),
		AV_REVIEW_STATUS_CODE			VARCHAR(20),
		AV_COUNTRY_NAME					VARCHAR(40),
		AV_SATE							VARCHAR(40),
        AV_SORT_TYPE                    VARCHAR(500),
        AV_PAGED                        INT(10),
        AV_LIMIT                        INT(10),
        AV_UNLIMITED                    BOOLEAN,
		AV_TYPE                         VARCHAR(1),
		AV_IS_COUNT                    	BOOLEAN
		
)
BEGIN
DECLARE LS_DYN_SQL LONGTEXT;
DECLARE LS_FILTER_CONDITION LONGTEXT;
DECLARE LS_OFFSET_CONDITION VARCHAR(600);
DECLARE LS_OFFSET INT(11);
DECLARE TAB_QUERY LONGTEXT;
DECLARE JOIN_CONDITION LONGTEXT;
DECLARE SELECTED_FIELD_LIST LONGTEXT;
DECLARE LS_ADMIN_GROUP_FCOI_CONDITION LONGTEXT;
DECLARE LS_ADMIN_GROUP_PROJECT_CONDITION LONGTEXT;

SET LS_OFFSET = (AV_LIMIT * AV_PAGED);
SET LS_FILTER_CONDITION ='';
SET LS_DYN_SQL ='';
SET JOIN_CONDITION = '';
SET SELECTED_FIELD_LIST= '';
SET TAB_QUERY = '';

SET TAB_QUERY = CONCAT(TAB_QUERY,'WHERE T1.REVIEW_STATUS_CODE IN (2, 3, 6, 7) AND T1.VERSION_STATUS IN (''PENDING'',''ACTIVE'') ');

IF AV_TYPE ='A' THEN

				IF AV_DISCLOSURE_PERSON_ID IS NOT NULL AND AV_DISCLOSURE_PERSON_ID <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.PERSON_ID = ''',AV_DISCLOSURE_PERSON_ID,''' AND ');

				END IF;

				 IF AV_END_DATE IS NOT NULL AND AV_END_DATE <> '' THEN

					 SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' DATE(T.EXPIRATION_DATE) = ''', STR_TO_DATE(AV_END_DATE,'%Y-%m-%d'),''' AND ');
				  
				 END IF;

				IF AV_CERTIFICATION_DATE IS NOT NULL AND AV_CERTIFICATION_DATE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' DATE(T.CERTIFIED_AT) = ''', STR_TO_DATE(AV_CERTIFICATION_DATE,'%Y-%m-%d'),''' AND ');
				  
				END IF;
				 
				IF AV_ENTITY_ID IS NOT NULL  AND AV_ENTITY_ID <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.ENTITY_ID =',AV_ENTITY_ID, '  AND ');

				END IF;

				IF AV_HOME_UNIT IS NOT NULL AND AV_HOME_UNIT <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.UNIT = ''',AV_HOME_UNIT,''' AND ');

				END IF;

				IF AV_TRAVEL_STATUS_CODE IS NOT NULL  AND AV_TRAVEL_STATUS_CODE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.TRAVEL_STATUS_CODE IN (',AV_TRAVEL_STATUS_CODE,') AND ');
				  
				END IF;

				IF AV_DOCUMENT_STATUS_CODE IS NOT NULL  AND AV_DOCUMENT_STATUS_CODE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.DOCUMENT_STATUS_CODE IN (',AV_DOCUMENT_STATUS_CODE,') AND ');
				  
				END IF;

				IF AV_REVIEW_STATUS_CODE IS NOT NULL  AND AV_REVIEW_STATUS_CODE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.REVIEW_STATUS_CODE IN (',AV_REVIEW_STATUS_CODE,') AND ');
				  
				END IF;

				IF AV_COUNTRY_NAME IS NOT NULL AND AV_COUNTRY_NAME <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.DESTINATION_COUNTRY = ''',AV_COUNTRY_NAME,''' AND ');

				END IF;

				IF AV_SATE IS NOT NULL AND AV_SATE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.STATE LIKE ''%',AV_SATE,'%'' AND ');

				END IF;



END IF;

IF AV_IS_COUNT = FALSE THEN 
	IF AV_SORT_TYPE IS NULL OR AV_SORT_TYPE = '' THEN
			SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
	ELSE
		SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
	END IF;
ELSE 
	SET AV_SORT_TYPE = "";
END IF;

IF AV_UNLIMITED = TRUE OR AV_IS_COUNT = TRUE THEN
        SET LS_OFFSET_CONDITION = '';
ELSE
        SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);
END IF;

IF LS_FILTER_CONDITION <>'' THEN
        SET LS_FILTER_CONDITION = CONCAT(' WHERE ',LS_FILTER_CONDITION);
        SELECT TRIM(TRAILING 'AND ' FROM LS_FILTER_CONDITION) into LS_FILTER_CONDITION from dual;
END IF;


	SET SELECTED_FIELD_LIST= CONCAT(SELECTED_FIELD_LIST,'T1.TRAVEL_DISCLOSURE_ID, 
							T5.UNIT_NUMBER AS UNIT, 
							T5.UNIT_NAME, 
                            T4.REVIEW_STATUS_CODE, 
                            T4.DESCRIPTION AS REVIEW_STATUS_DESCRIPTION, 
                            T6.TRAVELER_TYPE_CODE, 
                            T9.RELATIONSHIP_TYPES AS TRAVELER_TYPE_DESCRIPTION, 
							T7.TRAVEL_DISCLOSURE_STATUS_CODE, 
                            T7.DESCRIPTION AS TRAVEL_DISCLOSURE_STATUS_DESCRIPTION, 
							T2.ENTITY_NAME AS TRAVEL_ENTITY_NAME, 
							T1.ENTITY_ID, 
							T3.FULL_NAME AS TRAVELLER_NAME, 
                            T1.TRAVEL_AMOUNT, 
							T1.SUBMISSION_DATE, 
                            T1.ACKNOWLEDGE_AT AS ACKNOWLEDGE_DATE, 
                            T1.EXPIRATION_DATE, 
                            T1.PURPOSE_OF_THE_TRIP, 
							T1.TRAVEL_START_DATE, 
                            T1.UPDATE_TIMESTAMP, 
                            T1.DESTINATION_CITY, 
                            T1.DESTINATION_COUNTRY, 
                            T1.STATE, 
                            T1.VERSION_STATUS, 
                            T1.CREATE_TIMESTAMP,
							T10.DOCUMENT_STATUS_CODE,
							T10.DESCRIPTION AS DOCUMENT_STATUS_DESCRIPTION,
							T1.CERTIFIED_AT,
							T1.ADMIN_PERSON_ID,
							T1.ADMIN_GROUP_ID,
							T1.TRAVEL_END_DATE, T1.TRAVEL_STATUS_CODE, T1.PERSON_ID ');
						
	SET JOIN_CONDITION = CONCAT(' LEFT JOIN ENTITY T2 ON T2.ENTITY_ID=T1.ENTITY_ID
								  LEFT JOIN COI_TRAVEL_REVIEW_STATUS T4 ON T4.REVIEW_STATUS_CODE=T1.REVIEW_STATUS_CODE
                             	  LEFT JOIN UNIT T5 ON T5.UNIT_NUMBER = T1.HOME_UNIT
								  LEFT JOIN(SELECT T1.TRAVEL_DISCLOSURE_ID, GROUP_CONCAT(DISTINCT T6.DESCRIPTION ORDER BY T6.TRAVELER_TYPE_CODE ASC) AS RELATIONSHIP_TYPES FROM COI_TRAVEL_DISCLOSURE T1 
								  LEFT JOIN COI_TRAVEL_DISCLOSURE_TRAVELER T8 ON T8.TRAVEL_DISCLOSURE_ID = T1.TRAVEL_DISCLOSURE_ID
								  LEFT JOIN COI_TRAVELER T6 ON T6.TRAVELER_TYPE_CODE = T8.TRAVELER_TYPE_CODE 
								  GROUP BY T1.TRAVEL_DISCLOSURE_ID)T9 ON T9.TRAVEL_DISCLOSURE_ID = T1.TRAVEL_DISCLOSURE_ID
                            	  LEFT JOIN COI_TRAVELER T6 ON T6.TRAVELER_TYPE_CODE = T1.TRAVELER_TYPE_CODE
								  LEFT JOIN COI_TRAVEL_DOCUMENT_STATUS T10 ON T10.DOCUMENT_STATUS_CODE = T1.DOCUMENT_STATUS_CODE
                            	  LEFT JOIN COI_TRAVEL_DISCLOSURE_STATUS T7 ON T7.TRAVEL_DISCLOSURE_STATUS_CODE = T1.TRAVEL_DISCLOSURE_STATUS_CODE
								  LEFT JOIN PERSON T3 ON T3.PERSON_ID=T1.PERSON_ID ');
                        
	IF AV_IS_COUNT = TRUE THEN
		SET LS_DYN_SQL = CONCAT('SELECT  DISTINCT COUNT(*)  FROM ');

	ELSE
		SET LS_DYN_SQL = CONCAT('SELECT  DISTINCT *  FROM ');
	
	END IF;
     SET LS_DYN_SQL = CONCAT(LS_DYN_SQL,'(SELECT DISTINCT ',SELECTED_FIELD_LIST,'
							FROM COI_TRAVEL_DISCLOSURE T1 ', JOIN_CONDITION, TAB_QUERY,
							' )T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);

SET @QUERY_STATEMENT = LS_DYN_SQL;
PREPARE EXECUTABLE_STAEMENT FROM @QUERY_STATEMENT;
EXECUTE EXECUTABLE_STAEMENT;

END
//