DELIMITER //
CREATE PROCEDURE `GET_COI_DISCLOSURE_DASHBOARD_COUNT`(
		AV_PERSON_ID                    VARCHAR(200),
        AV_SORT_TYPE                    VARCHAR(500),
        AV_PAGED                        INT(10),
        AV_LIMIT                        INT(10),
        AV_TAB_TYPE                     VARCHAR(40),
        AV_UNLIMITED                    BOOLEAN,
        AV_TYPE                         VARCHAR(1),
        AV_FILTER_TYPE					VARCHAR(10),
		AV_SEARCHWORD                   VARCHAR(100)
)
BEGIN
DECLARE LS_DYN_SQL LONGTEXT;
DECLARE LS_FILTER_CONDITION LONGTEXT;
DECLARE LS_OFFSET_CONDITION VARCHAR(600);
DECLARE LS_OFFSET INT(11);
DECLARE TAB_QUERY LONGTEXT;
DECLARE JOIN_CONDITION LONGTEXT;
DECLARE SELECTED_FIELD_LIST LONGTEXT;
DECLARE SEARCH_CONDITION    LONGTEXT;

SET LS_OFFSET = (AV_LIMIT * AV_PAGED);
SET LS_FILTER_CONDITION ='';
SET LS_DYN_SQL ='';
SET JOIN_CONDITION = '';
SET SELECTED_FIELD_LIST= '';
SET TAB_QUERY = '';
SET SEARCH_CONDITION = '';

IF AV_TAB_TYPE = 'IN_PROGRESS_DISCLOSURES' THEN

		IF AV_FILTER_TYPE = 'ALL' THEN

                SET TAB_QUERY = CONCAT(' AND T1.FCOI_TYPE_CODE IN (1,2,3) AND T1.REVIEW_STATUS_CODE != 4 
								AND T1.VERSION_STATUS = ''PENDING'' ');
                                
		
                                
		ELSEIF AV_FILTER_TYPE = 'FCOI' THEN
        
				SET TAB_QUERY = CONCAT(' AND T1.FCOI_TYPE_CODE IN (1,3) AND T1.REVIEW_STATUS_CODE != 4
								AND T1.VERSION_STATUS = ''PENDING'' ');
		
        ELSEIF AV_FILTER_TYPE = 'PROJECT' THEN
			
				SET TAB_QUERY = CONCAT(' AND T1.FCOI_TYPE_CODE = 2 AND T1.REVIEW_STATUS_CODE != 4
								AND T1.VERSION_STATUS = ''PENDING'' '); 
            
        END IF;
                
ELSEIF AV_TAB_TYPE = 'APPROVED_DISCLOSURES' THEN

		IF AV_FILTER_TYPE = 'ALL' THEN

				SET TAB_QUERY = CONCAT(' AND T1.FCOI_TYPE_CODE IN (1,2,3) AND T1.REVIEW_STATUS_CODE = 4
								AND T1.VERSION_STATUS = ''ACTIVE'' ');
                                
		
                                
		ELSEIF AV_FILTER_TYPE = 'FCOI' THEN
        
				SET TAB_QUERY = CONCAT(' AND T1.FCOI_TYPE_CODE IN (1,3) AND T1.REVIEW_STATUS_CODE = 4
								AND T1.VERSION_STATUS = ''ACTIVE'' ');
		
        ELSEIF AV_FILTER_TYPE = 'PROJECT' THEN
			
				SET TAB_QUERY = CONCAT(' AND T1.FCOI_TYPE_CODE = 2 AND T1.REVIEW_STATUS_CODE = 4
								AND T1.VERSION_STATUS = ''ACTIVE'' '); 
        
        END IF;
				
ELSEIF AV_TAB_TYPE = 'TRAVEL_DISCLOSURES' THEN
                IF AV_FILTER_TYPE = 'ALL' THEN
					SET TAB_QUERY = CONCAT(' AND T21.VERSION_STATUS IN (''PENDING'',''ACTIVE'') ');
            
				END IF;
								
ELSEIF AV_TAB_TYPE = 'DISCLOSURE_HISTORY' THEN

				SET TAB_QUERY = CONCAT(' AND T1.VERSION_STATUS = ''ARCHIVED'' ');

END IF;
				                                        
				SET JOIN_CONDITION =  CONCAT(JOIN_CONDITION,' LEFT JOIN COI_DISCL_PROJECTS T9 ON T9.DISCLOSURE_ID = T1.DISCLOSURE_ID
										LEFT JOIN (SELECT EXTERNAL_SYSTEM_REF_ID AS PROPOSAL_IDS,
												  TITLE  AS PROPOSAL_TITLES, EXTERNAL_SYSTEM_REF_ID FROM COI_PROJECT_PROPOSAL_V ) T14 ON T14.EXTERNAL_SYSTEM_REF_ID = T9.MODULE_ITEM_KEY
										LEFT  JOIN (SELECT AWARD_NUMBER, EXTERNAL_SYSTEM_REF_ID,
												   TITLE AS AWARD_TITLES FROM COI_PROJECT_AWARD_V )T15  ON T15.AWARD_NUMBER = T9.MODULE_ITEM_KEY
										LEFT  JOIN (SELECT PROPOSAL_NUMBER  AS IP_NUMBER, EXTERNAL_SYSTEM_REF_ID,
												   TITLE AS IP_TITLE FROM COI_PROJECT_INSTITUTE_PROPOSAL_V )T16  ON T16.IP_NUMBER = T9.MODULE_ITEM_KEY ');


IF AV_SORT_TYPE IS NULL THEN
        SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
ELSE
    SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
END IF;

IF AV_UNLIMITED = TRUE THEN
        SET LS_OFFSET_CONDITION = '';
ELSE
        SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);
END IF;

IF LS_FILTER_CONDITION <>'' THEN
        SET LS_FILTER_CONDITION = CONCAT(' WHERE ',LS_FILTER_CONDITION);
        SELECT TRIM(TRAILING 'AND ' FROM LS_FILTER_CONDITION) into LS_FILTER_CONDITION from dual;
END IF;

IF AV_TAB_TYPE = 'CONSULTING_DISCLOSURES' THEN

IF AV_SEARCHWORD IS NOT NULL THEN
            SET AV_SEARCHWORD = CONCAT('''%',AV_SEARCHWORD, '%''');
            SET SEARCH_CONDITION = CONCAT(' AND (T50.DISCLOSURE_ID LIKE ',AV_SEARCHWORD, ' OR T54.PRIMARY_NAME LIKE ',AV_SEARCHWORD, ' OR
			T51.UNIT_NAME LIKE ', AV_SEARCHWORD, ' OR T51.UNIT_NUMBER LIKE ', AV_SEARCHWORD, ' OR T52.DESCRIPTION LIKE ', AV_SEARCHWORD, '  OR T56.DESCRIPTION LIKE ', AV_SEARCHWORD,
			' OR T58.ADMIN_GROUP_NAME LIKE ', AV_SEARCHWORD,' OR T59.FULL_NAME LIKE ', AV_SEARCHWORD,' )');
        END IF;

		SET LS_DYN_SQL = CONCAT(' SELECT COUNT(*) FROM(SELECT DISTINCT
							T50.DISCLOSURE_ID,
							T51.UNIT_NUMBER AS UNIT,
							T51.UNIT_NAME,
                            T52.REVIEW_STATUS_CODE,
                            T52.DESCRIPTION AS REVIEW_STATUS_DESCRIPTION,
							T56.DISPOSITION_STATUS_CODE,
                            T56.DESCRIPTION AS DISPOSITION_STATUS_DESCRIPTION,
							T54.PRIMARY_NAME as ENTITY_NAME,
							T55.FULL_NAME,
							T50.CERTIFIED_AT,
                            T50.CERTIFIED_BY,
                            T50.EXPIRATION_DATE,
                            T50.UPDATE_TIMESTAMP,
                            T50.CREATE_TIMESTAMP,
							T50.UPDATE_USER,
							T57.FULL_NAME AS UPDATE_USER_FULL_NAME,
							T58.ADMIN_GROUP_NAME,
                            T59.FULL_NAME AS ADMINISTRATOR ' ,SELECTED_FIELD_LIST,'
							FROM CONSULTING_DISCLOSURE T50
							LEFT JOIN PERSON_ENTITY T53 ON T53.PERSON_ENTITY_ID = T50.PERSON_ENTITY_ID
							LEFT JOIN ENTITY T54 on T54.ENTITY_ID = T53.ENTITY_ID
							LEFT JOIN ADMIN_GROUP T58 ON T58.ADMIN_GROUP_ID = T50.ADMIN_GROUP_ID
							LEFT JOIN PERSON T59 ON T59.PERSON_ID = T50.ADMIN_PERSON_ID
                            INNER JOIN CONSULTING_DISCL_REVIEW_STATUS_TYPE T52 ON T52.REVIEW_STATUS_CODE = T50.REVIEW_STATUS_CODE
                            INNER JOIN UNIT T51 ON T51.UNIT_NUMBER = T50.HOME_UNIT
                            INNER JOIN CONSULTING_DISCL_DISPOSITION_STATUS_TYPE T56 ON T56.DISPOSITION_STATUS_CODE = T50.DISPOSITION_STATUS_CODE
							INNER JOIN PERSON T57 ON T57.USER_NAME = T50.UPDATE_USER
							INNER JOIN PERSON T55 ON T55.PERSON_ID=T50.PERSON_ID WHERE T50.PERSON_ID = ''',AV_PERSON_ID,'''',TAB_QUERY, SEARCH_CONDITION,
										' GROUP BY T50.DISCLOSURE_ID)T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);

ELSEIF AV_TAB_TYPE = 'TRAVEL_DISCLOSURES' THEN

		IF AV_SEARCHWORD IS NOT NULL THEN
            SET AV_SEARCHWORD = CONCAT('''%',AV_SEARCHWORD, '%''');
            SET SEARCH_CONDITION = CONCAT(' AND (T21.TRAVEL_DISCLOSURE_ID LIKE ',AV_SEARCHWORD, ' OR T22.PRIMARY_NAME LIKE ',AV_SEARCHWORD, ' OR
			T5.UNIT_NAME LIKE ', AV_SEARCHWORD, ' OR T5.UNIT_NUMBER LIKE ', AV_SEARCHWORD, ' OR T24.DESCRIPTION LIKE ', AV_SEARCHWORD, '  OR T29.RELATIONSHIP_TYPES LIKE ', AV_SEARCHWORD,
			' OR T21.PURPOSE_OF_THE_TRIP LIKE ', AV_SEARCHWORD,' OR T32.DESCRIPTION LIKE ', AV_SEARCHWORD,
			' OR T21.DESTINATION_COUNTRY LIKE ', AV_SEARCHWORD, ' OR T21.STATE LIKE ', AV_SEARCHWORD,' OR T21.DESTINATION_CITY LIKE ', AV_SEARCHWORD,' )');
        END IF;

		SET LS_DYN_SQL = CONCAT(' SELECT DISTINCT COUNT(*)  FROM(SELECT DISTINCT
							T21.TRAVEL_DISCLOSURE_ID,
							T5.UNIT_NUMBER AS UNIT,
							T5.UNIT_NAME,
                            T24.REVIEW_STATUS_CODE,
                            T24.DESCRIPTION AS REVIEW_STATUS_DESCRIPTION,
                            T25.TRAVELER_TYPE_CODE,
                            T29.RELATIONSHIP_TYPES AS TRAVELER_TYPE_DESCRIPTION,
							T26.TRAVEL_DISCLOSURE_STATUS_CODE,
                            T26.DESCRIPTION AS TRAVEL_DISCLOSURE_STATUS_DESCRIPTION,
							T22.PRIMARY_NAME AS TRAVEL_ENTITY_NAME,
							T23.FULL_NAME AS TRAVELLER_NAME,
                            T21.TRAVEL_AMOUNT,
							T21.SUBMISSION_DATE,
                            T21.ACKNOWLEDGE_AT AS ACKNOWLEDGE_DATE,
                            T21.EXPIRATION_DATE,
                            T21.PURPOSE_OF_THE_TRIP,
							T21.TRAVEL_START_DATE,
                            T21.UPDATE_TIMESTAMP,
                            T21.DESTINATION_CITY,
                            T21.DESTINATION_COUNTRY,
                            T21.STATE,
                            T21.VERSION_STATUS,
                            T21.CREATE_TIMESTAMP,
							T32.DOCUMENT_STATUS_CODE,
							T32.DESCRIPTION AS DOCUMENT_STATUS_DESCRIPTION,
							T21.CERTIFIED_AT,
							T21.TRAVEL_END_DATE ' ,SELECTED_FIELD_LIST,'
							FROM COI_TRAVEL_DISCLOSURE T21
							LEFT JOIN ENTITY T22 ON T22.ENTITY_ID=T21.ENTITY_ID
                            LEFT JOIN COI_TRAVEL_REVIEW_STATUS T24 ON T24.REVIEW_STATUS_CODE=T21.REVIEW_STATUS_CODE
                            LEFT JOIN UNIT T5 ON T5.UNIT_NUMBER = T21.HOME_UNIT
							LEFT JOIN(SELECT T21.TRAVEL_DISCLOSURE_ID, GROUP_CONCAT(DISTINCT T25.DESCRIPTION ORDER BY T25.TRAVELER_TYPE_CODE ASC) AS RELATIONSHIP_TYPES FROM COI_TRAVEL_DISCLOSURE T21
							LEFT JOIN COI_TRAVEL_DISCLOSURE_TRAVELER T27 ON T27.TRAVEL_DISCLOSURE_ID = T21.TRAVEL_DISCLOSURE_ID
							LEFT JOIN COI_TRAVELER T25 ON T25.TRAVELER_TYPE_CODE = T27.TRAVELER_TYPE_CODE
							GROUP BY T21.TRAVEL_DISCLOSURE_ID)T29 ON T29.TRAVEL_DISCLOSURE_ID = T21.TRAVEL_DISCLOSURE_ID
                            LEFT JOIN COI_TRAVELER T25 ON T25.TRAVELER_TYPE_CODE = T21.TRAVELER_TYPE_CODE
							LEFT JOIN COI_TRAVEL_DOCUMENT_STATUS T32 ON T32.DOCUMENT_STATUS_CODE = T21.DOCUMENT_STATUS_CODE
                            LEFT JOIN COI_TRAVEL_DISCLOSURE_STATUS T26 ON T26.TRAVEL_DISCLOSURE_STATUS_CODE = T21.TRAVEL_DISCLOSURE_STATUS_CODE
							LEFT JOIN PERSON T23 ON T23.PERSON_ID=T21.PERSON_ID WHERE T21.PERSON_ID = ''',AV_PERSON_ID,'''',TAB_QUERY, SEARCH_CONDITION,
										' GROUP BY T21.TRAVEL_DISCLOSURE_ID)T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);
ELSE

		IF AV_SEARCHWORD IS NOT NULL THEN
            SET AV_SEARCHWORD = CONCAT('''%',AV_SEARCHWORD, '%''');
            SET SEARCH_CONDITION = CONCAT(' AND (T1.DISCLOSURE_NUMBER LIKE ',AV_SEARCHWORD, ' OR T1.DISCLOSURE_ID LIKE ',AV_SEARCHWORD, ' OR
			T20.UNIT_NAME LIKE ', AV_SEARCHWORD, ' OR T20.UNIT_NUMBER LIKE ', AV_SEARCHWORD, ' OR T14.PROPOSAL_TITLES LIKE ', AV_SEARCHWORD, '  OR T15.AWARD_TITLES LIKE ', AV_SEARCHWORD,  '  OR T16.IP_TITLE LIKE ', AV_SEARCHWORD,
			' OR T4.DESCRIPTION LIKE', AV_SEARCHWORD, ' OR T1.VERSION_STATUS LIKE ', AV_SEARCHWORD, ' OR T3.DESCRIPTION LIKE ', AV_SEARCHWORD,
			' OR T2.DESCRIPTION LIKE ', AV_SEARCHWORD, ' )');
        END IF;

        SET LS_DYN_SQL =CONCAT('SELECT DISTINCT COUNT(*)  FROM(SELECT DISTINCT
										T1.DISCLOSURE_ID,
										T1.DISCLOSURE_NUMBER,
										T1.VERSION_NUMBER,
										T1.PERSON_ID,
                                        T1.CONFLICT_STATUS_CODE,
										T2.DESCRIPTION AS DISCLOSURE_STATUS,
                                        T1.DISPOSITION_STATUS_CODE, 
										T3.DESCRIPTION AS DISPOSITION_STATUS,
                                        T1.FCOI_TYPE_CODE,
										T10.DESCRIPTION AS DISCLOSURE_CATEGORY_TYPE,
                                        T1.REVIEW_STATUS_CODE,
										T4.DESCRIPTION AS REVIEW_STATUS,
                                        T1.VERSION_STATUS,
										T1.CERTIFICATION_TEXT, 
										T1.CERTIFIED_AT,
										T1.UPDATE_TIMESTAMP,
                                        T1.CREATE_TIMESTAMP,
										T1.EXPIRATION_DATE, T20.UNIT_NAME ' ,SELECTED_FIELD_LIST,'
                                        FROM COI_DISCLOSURE T1 
										LEFT JOIN COI_CONFLICT_STATUS_TYPE T2 ON T2.CONFLICT_STATUS_CODE=T1.CONFLICT_STATUS_CODE
										INNER JOIN COI_DISPOSITION_STATUS_TYPE T3 ON T3.DISPOSITION_STATUS_CODE = T1.DISPOSITION_STATUS_CODE
										INNER JOIN COI_REVIEW_STATUS_TYPE T4 ON T4.REVIEW_STATUS_CODE = T1.REVIEW_STATUS_CODE
                                        INNER JOIN COI_DISCLOSURE_FCOI_TYPE T10 ON T10.FCOI_TYPE_CODE = T1.FCOI_TYPE_CODE
										LEFT JOIN UNIT T20 ON T20.UNIT_NUMBER = T1.HOME_UNIT ',JOIN_CONDITION,
										' WHERE T1.PERSON_ID = ''',AV_PERSON_ID,'''',' AND T1.DISPOSITION_STATUS_CODE != ''2''', TAB_QUERY, SEARCH_CONDITION,
										' GROUP BY T1.DISCLOSURE_ID)T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);

END IF;
SET @QUERY_STATEMENT = LS_DYN_SQL;
PREPARE EXECUTABLE_STAEMENT FROM @QUERY_STATEMENT;
EXECUTE EXECUTABLE_STAEMENT;

END
//