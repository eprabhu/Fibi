DELIMITER //
CREATE PROCEDURE `GET_HEIR_PROJECT_TREE`(
    IN AV_MODULE_CODE INT,
    IN AV_PROJECT_NUMBER VARCHAR(20)
)
BEGIN
	DECLARE LS_COUNT INT;
    DECLARE LS_PROJECT_NUMBER VARCHAR(20);
    DECLARE LS_MODULE_CODE VARCHAR(1);
	DECLARE LS_PROJ_NUM VARCHAR(20);

/*
   Determine the project number and module code based on the input `moduleCode` and `projectNumber`. 
   The procedure checks if there is an award associated with an IP or a proposal, and based on that, 
   retrieves the hierarchy data related to the project.
*/

-- Check whether the input project is in any of the staging tables then avoid the execution of fibi tables
	SELECT 
    (SELECT COUNT(*) FROM COI_INT_STAGE_AWARD WHERE PROJECT_NUMBER = AV_PROJECT_NUMBER) +
    (SELECT COUNT(*) FROM COI_INT_STAGE_PROPOSAL WHERE PROJECT_NUMBER = AV_PROJECT_NUMBER) +
    (SELECT COUNT(*) FROM COI_INT_STAGE_DEV_PROPOSAL WHERE PROPOSAL_NUMBER = AV_PROJECT_NUMBER) INTO LS_COUNT FROM DUAL;

	SET LS_MODULE_CODE = AV_MODULE_CODE;
    SET LS_PROJECT_NUMBER = AV_PROJECT_NUMBER;

IF LS_COUNT > 0 THEN

	    IF AV_MODULE_CODE = 2 THEN
	
	-- Check if the project (IP) is linked to an award. If yes, hierarchy data is fetched based on the award number.
        SELECT LINKED_AWARD_PROJECT_NUMBER 
        INTO LS_PROJ_NUM 
        FROM COI_INT_STAGE_PROPOSAL T1
		INNER JOIN COI_INT_STAGE_AWARD T2 ON T2.PROJECT_NUMBER= T1.LINKED_AWARD_PROJECT_NUMBER
        WHERE T1.PROJECT_NUMBER = AV_PROJECT_NUMBER;

        IF LS_PROJ_NUM IS NOT NULL THEN 
            SET LS_MODULE_CODE = 1;
			SET LS_PROJECT_NUMBER = LS_PROJ_NUM;
        END IF;

    ELSEIF AV_MODULE_CODE = 3 THEN
	
		-- Check if proposal has award through linked IP If exists then hierarchy data is fetched based award number
        SELECT T1.LINKED_AWARD_PROJECT_NUMBER
		INTO LS_PROJ_NUM
		FROM COI_INT_STAGE_PROPOSAL T1
		INNER JOIN COI_INT_STAGE_DEV_PROPOSAL T2 ON T1.PROJECT_NUMBER = T2.IP_NUMBER
		INNER JOIN COI_INT_STAGE_AWARD T3 ON T3.PROJECT_NUMBER = T1.LINKED_AWARD_PROJECT_NUMBER
		WHERE T2.PROPOSAL_NUMBER = AV_PROJECT_NUMBER;

        IF LS_PROJ_NUM IS NULL THEN 
		
			-- Check if proposal has linked IP , If exists then hierarchy data is fetched based ip number
			SELECT T1.IP_NUMBER
			INTO LS_PROJ_NUM
			FROM COI_INT_STAGE_DEV_PROPOSAL T1
			INNER JOIN COI_INT_STAGE_PROPOSAL T2 ON T2.PROJECT_NUMBER = T1.IP_NUMBER
			WHERE T1.PROPOSAL_NUMBER = AV_PROJECT_NUMBER;
					
				IF LS_PROJ_NUM IS NOT NULL THEN 
					SET LS_MODULE_CODE = 2;
					SET LS_PROJECT_NUMBER = LS_PROJ_NUM;
				END IF;
                
        ELSE
            SET LS_MODULE_CODE = 1;
			SET LS_PROJECT_NUMBER = LS_PROJ_NUM;
        END IF;

    END IF;

    -- Main query to get the hierarchy structure
    IF LS_MODULE_CODE = 1 THEN
        
		SELECT IFNULL(T1.PROJECT_NUMBER,NULL) AS AWARD_NUMBER, IFNULL(T2.PROJECT_NUMBER,NULL) IP_NUMBER, IFNULL(T3.PROPOSAL_NUMBER, NULL) AS PROPOSAL_NUMBER
        FROM COI_INT_STAGE_AWARD T1
        LEFT JOIN COI_INT_STAGE_PROPOSAL T2 ON T2.LINKED_AWARD_PROJECT_NUMBER= T1.PROJECT_NUMBER
        LEFT JOIN COI_INT_STAGE_DEV_PROPOSAL T3 ON T3.IP_NUMBER=T2.PROJECT_NUMBER
		WHERE T1.PROJECT_NUMBER = LS_PROJECT_NUMBER;        

    ELSEIF LS_MODULE_CODE = 2 THEN
        
		SELECT IFNULL(T3.PROJECT_NUMBER,NULL) AS AWARD_NUMBER, IFNULL(T1.PROJECT_NUMBER,NULL) IP_NUMBER, IFNULL(T2.PROPOSAL_NUMBER, NULL) AS PROPOSAL_NUMBER
        FROM COI_INT_STAGE_PROPOSAL T1 
        LEFT JOIN COI_INT_STAGE_DEV_PROPOSAL T2 ON T2.IP_NUMBER = T1.PROJECT_NUMBER
        LEFT JOIN COI_INT_STAGE_AWARD T3 ON T3.PROJECT_NUMBER = T1.LINKED_AWARD_PROJECT_NUMBER
		WHERE T1.PROJECT_NUMBER = LS_PROJECT_NUMBER;

    ELSEIF LS_MODULE_CODE = 3 THEN
        		
		SELECT IFNULL(T3.PROJECT_NUMBER,NULL) AS AWARD_NUMBER, IFNULL(T2.PROJECT_NUMBER,NULL) IP_NUMBER, IFNULL(T1.PROPOSAL_NUMBER, NULL) AS PROPOSAL_NUMBER
        FROM COI_INT_STAGE_DEV_PROPOSAL T1
        LEFT JOIN COI_INT_STAGE_PROPOSAL T2 ON T1.IP_NUMBER=T2.PROJECT_NUMBER
        LEFT JOIN COI_INT_STAGE_AWARD T3 ON T3.PROJECT_NUMBER =T2.LINKED_AWARD_PROJECT_NUMBER
		WHERE T1.PROPOSAL_NUMBER = LS_PROJECT_NUMBER;
    END IF;

ELSE

	IF AV_MODULE_CODE = 2 THEN
	
	-- Check if the project (IP) is linked to an award. If yes, hierarchy data is fetched based on the award number.
        SELECT DISTINCT T2.AWARD_NUMBER INTO LS_PROJ_NUM
        FROM AWARD_FUNDING_PROPOSALS T1
        INNER JOIN AWARD T2 ON T2.AWARD_ID=T1.AWARD_ID
        INNER JOIN PROPOSAL T3 ON T3.PROPOSAL_ID =T1.PROPOSAL_ID
        WHERE T3.PROPOSAL_NUMBER = AV_PROJECT_NUMBER 
		AND (T2.AWARD_SEQUENCE_STATUS = 'ACTIVE' OR (T2.AWARD_SEQUENCE_STATUS = 'PENDING' AND T2.SEQUENCE_NUMBER= 1))
		ORDER BY T1.UPDATE_TIMESTAMP DESC LIMIT 1;

        IF LS_PROJ_NUM IS NOT NULL THEN 
			SET LS_MODULE_CODE = 1;
			SET LS_PROJECT_NUMBER = LS_PROJ_NUM;
        END IF;
	ELSEIF AV_MODULE_CODE = 3 THEN
	
		-- Check if proposal has award through linked IP If exists then hierarchy data is fetched based award number
        SELECT DISTINCT T2.AWARD_NUMBER INTO LS_PROJ_NUM
        FROM AWARD_FUNDING_PROPOSALS T1
        INNER JOIN AWARD T2 ON T2.AWARD_ID=T1.AWARD_ID
        INNER JOIN PROPOSAL T3 ON T3.PROPOSAL_ID =T1.PROPOSAL_ID
		INNER JOIN EPS_PROPOSAL T4 ON T4.IP_NUMBER=T3.PROPOSAL_NUMBER
        WHERE T4.PROPOSAL_ID = AV_PROJECT_NUMBER 
		AND (T2.AWARD_SEQUENCE_STATUS = 'ACTIVE' OR (T2.AWARD_SEQUENCE_STATUS = 'PENDING' AND T2.SEQUENCE_NUMBER= 1))
		ORDER BY T1.UPDATE_TIMESTAMP DESC LIMIT 1;
		
        IF LS_PROJ_NUM IS NULL THEN 
		
			-- Check if proposal has linked IP , If exists then hierarchy data is fetched based ip number
			SELECT DISTINCT T1.IP_NUMBER
			INTO LS_PROJ_NUM
			FROM EPS_PROPOSAL T1
			INNER JOIN PROPOSAL T2 ON T2.PROPOSAL_NUMBER = T1.IP_NUMBER
			WHERE T1.PROPOSAL_ID = AV_PROJECT_NUMBER  
			AND (T2.PROPOSAL_SEQUENCE_STATUS = 'PENDING' OR T2.PROPOSAL_SEQUENCE_STATUS = 'ACTIVE');
					
				IF LS_PROJ_NUM IS NOT NULL THEN 
					SET LS_MODULE_CODE = 2;
					SET LS_PROJECT_NUMBER = LS_PROJ_NUM;
				END IF;
                
        ELSE
            SET LS_MODULE_CODE = 1;
			SET LS_PROJECT_NUMBER = LS_PROJ_NUM;
        END IF;
	
	END IF;
	
	IF LS_MODULE_CODE = 1 THEN
        
        SELECT IFNULL(T1.AWARD_NUMBER,NULL) AS AWARD_NUMBER, IFNULL(T3.PROPOSAL_NUMBER, NULL) AS IP_NUMBER, IFNULL(T4.PROPOSAL_ID,NULL) AS PROPOSAL_NUMBER 
        FROM AWARD T1
        LEFT JOIN AWARD_FUNDING_PROPOSALS T2 ON T2.AWARD_ID=T1.AWARD_ID
        LEFT JOIN PROPOSAL T3 ON T3.PROPOSAL_ID=T2.PROPOSAL_ID
        LEFT JOIN EPS_PROPOSAL T4 ON T4.IP_NUMBER=T3.PROPOSAL_NUMBER
        WHERE (T1.AWARD_SEQUENCE_STATUS = 'ACTIVE' OR (T1.AWARD_SEQUENCE_STATUS = 'PENDING' AND T1.SEQUENCE_NUMBER= 1))
		AND T1.AWARD_NUMBER = LS_PROJECT_NUMBER;

    ELSEIF LS_MODULE_CODE = 2 THEN
        
        SELECT DISTINCT IFNULL(T4.AWARD_NUMBER,NULL) AS AWARD_NUMBER,IFNULL(T1.PROPOSAL_NUMBER,NULL) AS IP_NUMBER,IFNULL(T2.PROPOSAL_ID,NULL) AS PROPOSAL_NUMBER
        FROM PROPOSAL T1
        LEFT JOIN EPS_PROPOSAL T2 ON T2.IP_NUMBER=T1.PROPOSAL_NUMBER
        LEFT JOIN AWARD_FUNDING_PROPOSALS T3 ON T3.PROPOSAL_ID=T1.PROPOSAL_ID
        LEFT JOIN AWARD T4 ON T4.AWARD_ID=T3.AWARD_ID
        WHERE (T1.PROPOSAL_SEQUENCE_STATUS = 'PENDING' OR T1.PROPOSAL_SEQUENCE_STATUS = 'ACTIVE') 
		AND T1.PROPOSAL_NUMBER = LS_PROJECT_NUMBER;

    ELSEIF LS_MODULE_CODE = 3 THEN
     
        SELECT DISTINCT IFNULL(T4.AWARD_NUMBER,NULL) AS AWARD_NUMBER,IFNULL(PROPOSAL_NUMBER,NULL) AS IP_NUMBER,IFNULL(T1.PROPOSAL_ID,NULL) AS PROPOSAL_NUMBER
        FROM EPS_PROPOSAL T1
        LEFT JOIN PROPOSAL T2 ON T2.PROPOSAL_NUMBER=T1.IP_NUMBER
        LEFT JOIN AWARD_FUNDING_PROPOSALS T3 ON T3.PROPOSAL_ID=T2.PROPOSAL_ID
        LEFT JOIN AWARD T4 ON T4.AWARD_ID = T3.AWARD_ID
        WHERE DOCUMENT_STATUS_CODE <> '3' AND T1.PROPOSAL_ID = LS_PROJECT_NUMBER;
		
    END IF;

END IF;


END //

DELIMITER ;
