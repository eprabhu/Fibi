DELIMITER //
CREATE FUNCTION COI_INT_PROP_DISCL_STATUS(
AV_PROPOSAL_NUMBER VARCHAR(20)) RETURNS INT
    DETERMINISTIC
BEGIN
    DECLARE LS_KEY_PERSON_ID            VARCHAR(40);
    DECLARE LS_DISCLOSURE_REQUIRED_FLAG VARCHAR(20);
    DECLARE LS_REVIEW_STATUS            VARCHAR(200);
    DECLARE NOT_FOUND                   INT DEFAULT 0;
	DECLARE LI_COUNT 					INT DEFAULT 0;


    DECLARE SEL_PERSONS CURSOR FOR
		SELECT CIDEV.KEY_PERSON_ID, CIDEV.DISCLOSURE_REQUIRED_FLAG 
		FROM COI_INT_STAGE_DEV_PROPOSAL_PERSON CIDEV
		WHERE PROPOSAL_NUMBER = AV_PROPOSAL_NUMBER
		AND CIDEV.KEY_PERSON_ID IS NOT NULL;
	
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;
	
	
	
	SELECT COUNT(1) INTO LI_COUNT 
	FROM COI_INT_STAGE_DEV_PROPOSAL_PERSON CIDEV
	WHERE CIDEV.PROPOSAL_NUMBER = AV_PROPOSAL_NUMBER
	AND CIDEV.KEY_PERSON_ID IS NOT NULL ;
    
    IF LI_COUNT = 0 THEN 
		RETURN -1;
    END IF;
	

    OPEN SEL_PERSONS;
    SEL_PERSONS_LOOP: LOOP
        SET NOT_FOUND = 0;
        FETCH SEL_PERSONS INTO LS_KEY_PERSON_ID, LS_DISCLOSURE_REQUIRED_FLAG;


        IF NOT_FOUND = 1 THEN
            LEAVE SEL_PERSONS_LOOP;
        END IF;

        IF UPPER(LS_DISCLOSURE_REQUIRED_FLAG) = 'REQUIRED' OR UPPER(LS_DISCLOSURE_REQUIRED_FLAG) = 'TO_BE_DETERMINED' THEN 
        
			SELECT CRST.DESCRIPTION INTO LS_REVIEW_STATUS  
			FROM COI_DISCL_PROJECTS CDP
			INNER JOIN COI_DISCLOSURE CD ON CD.DISCLOSURE_ID = CDP.DISCLOSURE_ID
			INNER JOIN COI_REVIEW_STATUS_TYPE CRST ON CRST.REVIEW_STATUS_CODE = CD.REVIEW_STATUS_CODE
			WHERE CDP.MODULE_CODE = '3'
			  AND CD.FCOI_TYPE_CODE = '2' 
			  AND CDP.MODULE_ITEM_KEY = AV_PROPOSAL_NUMBER
			  AND CD.PERSON_ID =  LS_KEY_PERSON_ID
			  AND CD.DISPOSITION_STATUS_CODE <> 2
			  AND CD.DISCLOSURE_ID = (SELECT MAX(CD2.DISCLOSURE_ID)
									  FROM COI_DISCLOSURE CD2
									  INNER JOIN COI_DISCL_PROJECTS CDP2 ON CDP2.DISCLOSURE_ID = CD2.DISCLOSURE_ID
									  WHERE CDP2.MODULE_CODE = '3'
										AND CD2.FCOI_TYPE_CODE = '2'
										AND CDP2.MODULE_ITEM_KEY = CDP.MODULE_ITEM_KEY
										AND CD2.PERSON_ID = CD.PERSON_ID
										AND CD2.DISPOSITION_STATUS_CODE <> 2);
										
            IF UPPER(LS_REVIEW_STATUS) = 'PENDING' OR LS_REVIEW_STATUS IS NULL THEN 
                RETURN -1;			
            END IF;
			
			
        END IF;
		
    END LOOP SEL_PERSONS_LOOP;
    CLOSE SEL_PERSONS;
	
RETURN 1;
	
END
//
