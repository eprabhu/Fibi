DELIMITER //
CREATE  PROCEDURE `GET_CONSULTING_DISCLOSURE_ADMIN_DASHBOARD`(
		AV_DISCLOSURE_PERSON_ID         VARCHAR(40),
		AV_ENTITY_ID                  	VARCHAR(90),
		AV_CERTIFICATION_DATE           VARCHAR(10),
		AV_HOME_UNIT                    VARCHAR(8),
		AV_DISPOSITION_STATUS_CODE       	VARCHAR(20),
		AV_REVIEW_STATUS_CODE			VARCHAR(20),
        AV_SORT_TYPE                    VARCHAR(500),
        AV_PAGED                        INT(10),
        AV_LIMIT                        INT(10),
        AV_UNLIMITED                    BOOLEAN,
		AV_TYPE                         VARCHAR(1),
        AV_PERSON_ID					VARCHAR(40),
		AV_IS_COUNT                    	BOOLEAN
)
BEGIN
DECLARE LS_DYN_SQL LONGTEXT;
DECLARE LS_FILTER_CONDITION LONGTEXT;
DECLARE LS_OFFSET_CONDITION VARCHAR(600);
DECLARE LS_OFFSET INT(11);
DECLARE TAB_QUERY LONGTEXT;
DECLARE JOIN_CONDITION LONGTEXT;
DECLARE SELECTED_FIELD_LIST LONGTEXT;
DECLARE LS_ADMIN_GROUP_FCOI_CONDITION LONGTEXT;
DECLARE LS_ADMIN_GROUP_PROJECT_CONDITION LONGTEXT;

SET LS_OFFSET = (AV_LIMIT * AV_PAGED);
SET LS_FILTER_CONDITION ='';
SET LS_DYN_SQL ='';
SET JOIN_CONDITION = '';
SET SELECTED_FIELD_LIST= '';
SET TAB_QUERY = '';

IF AV_TYPE ='A' THEN

				IF AV_DISCLOSURE_PERSON_ID IS NOT NULL AND AV_DISCLOSURE_PERSON_ID <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.PERSON_ID = ''',AV_DISCLOSURE_PERSON_ID,''' AND ');

				END IF;

				IF AV_CERTIFICATION_DATE IS NOT NULL AND AV_CERTIFICATION_DATE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' DATE(T.CERTIFIED_AT) = ''', STR_TO_DATE(AV_CERTIFICATION_DATE,'%Y-%m-%d'),''' AND ');
				  
				END IF;
				 
				IF AV_ENTITY_ID IS NOT NULL  AND AV_ENTITY_ID <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.ENTITY_ID =',AV_ENTITY_ID, '  AND ');

				END IF;

				IF AV_HOME_UNIT IS NOT NULL AND AV_HOME_UNIT <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.UNIT = ''',AV_HOME_UNIT,''' AND ');

				END IF;

				IF AV_REVIEW_STATUS_CODE IS NOT NULL  AND AV_REVIEW_STATUS_CODE <> '' THEN

					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.REVIEW_STATUS_CODE IN (',AV_REVIEW_STATUS_CODE,') AND ');
				  
				END IF;
                
                IF AV_DISPOSITION_STATUS_CODE IS NOT NULL  AND AV_DISPOSITION_STATUS_CODE <> '' THEN
					SET LS_FILTER_CONDITION = CONCAT(LS_FILTER_CONDITION,' T.DISPOSITION_STATUS_CODE IN (',AV_DISPOSITION_STATUS_CODE,') AND ');
				END IF;



END IF;

IF AV_IS_COUNT = FALSE THEN 
	IF AV_SORT_TYPE IS NULL OR AV_SORT_TYPE = '' THEN
			SET AV_SORT_TYPE =  CONCAT(' ORDER BY T.UPDATE_TIMESTAMP DESC ');
	ELSE
		SET AV_SORT_TYPE = CONCAT(' ORDER BY ',AV_SORT_TYPE);
	END IF;
ELSE 
	SET AV_SORT_TYPE = "";
END IF;

IF AV_UNLIMITED = TRUE OR AV_IS_COUNT = TRUE THEN
        SET LS_OFFSET_CONDITION = '';
ELSE
        SET LS_OFFSET_CONDITION = CONCAT(' LIMIT ',AV_LIMIT,' OFFSET ',LS_OFFSET);
END IF;

IF LS_FILTER_CONDITION <>'' THEN
        SET LS_FILTER_CONDITION = CONCAT(' WHERE ',LS_FILTER_CONDITION);
        SELECT TRIM(TRAILING 'AND ' FROM LS_FILTER_CONDITION) into LS_FILTER_CONDITION from dual;
END IF;


	SET SELECTED_FIELD_LIST= CONCAT(SELECTED_FIELD_LIST,'T50.DISCLOSURE_ID,
							T50.PERSON_ID,
                            T54.ENTITY_ID,
							T51.UNIT_NUMBER AS UNIT,
							T51.UNIT_NAME,
                            T52.REVIEW_STATUS_CODE,
                            T52.DESCRIPTION AS REVIEW_STATUS_DESCRIPTION,
							T56.DISPOSITION_STATUS_CODE,
                            T56.DESCRIPTION AS DISPOSITION_STATUS_DESCRIPTION,
							T54.PRIMARY_NAME as ENTITY_NAME,
							T55.FULL_NAME,
							T50.CERTIFIED_AT,
                            T50.CERTIFIED_BY,
                            T50.EXPIRATION_DATE,
                            T50.UPDATE_TIMESTAMP,
							T50.UPDATE_USER,
							T57.FULL_NAME AS UPDATE_USER_FULL_NAME,
							T58.ADMIN_GROUP_NAME, 
                            T59.FULL_NAME AS ADMINISTRATOR ');
						
	SET JOIN_CONDITION = CONCAT(' LEFT JOIN PERSON_ENTITY T53 ON T53.PERSON_ENTITY_ID = T50.PERSON_ENTITY_ID
							LEFT JOIN ENTITY T54 on T54.ENTITY_ID = T53.ENTITY_ID
							LEFT JOIN ADMIN_GROUP T58 ON T58.ADMIN_GROUP_ID = T50.ADMIN_GROUP_ID 
							LEFT JOIN PERSON T59 ON T59.PERSON_ID = T50.ADMIN_PERSON_ID
                            INNER JOIN CONSULTING_DISCL_REVIEW_STATUS_TYPE T52 ON T52.REVIEW_STATUS_CODE = T50.REVIEW_STATUS_CODE
                            INNER JOIN UNIT T51 ON T51.UNIT_NUMBER = T50.HOME_UNIT
                            INNER JOIN CONSULTING_DISCL_DISPOSITION_STATUS_TYPE T56 ON T56.DISPOSITION_STATUS_CODE = T50.DISPOSITION_STATUS_CODE
							INNER JOIN PERSON T57 ON T57.USER_NAME = T50.UPDATE_USER 
							INNER JOIN PERSON T55 ON T55.PERSON_ID=T50.PERSON_ID ');
	
    SET LS_DYN_SQL = CONCAT('WITH ACCESS_TMP AS ( SELECT UNIT_NUMBER
							FROM PERSON_ROLES T1
							INNER JOIN ROLE_RIGHTS T2 ON T1.ROLE_ID = T2.ROLE_ID
							INNER JOIN RIGHTS T3 ON T2.RIGHT_ID = T3.RIGHT_ID 
							WHERE T1.DESCEND_FLAG = ''N'' AND T1.PERSON_ID = ''',AV_PERSON_ID,'''
							AND RIGHT_NAME IN (''VIEW_CONSULTING_DISCLOSURE'', ''MANAGE_CONSULTING_DISCLOSURE'') 
							UNION SELECT T1.UNIT_NUMBER FROM PERSON_ROLES T1 
                            INNER JOIN ADMIN_GROUP T2 ON T2.ROLE_ID = T1.ROLE_ID 
							WHERE T2.MODULE_CODE=27 AND T1.PERSON_ID = ''',AV_PERSON_ID,''' 
							UNION SELECT CHILD_UNIT_NUMBER FROM UNIT_WITH_CHILDREN 
							WHERE UNIT_NUMBER IN ( SELECT UNIT_NUMBER
							FROM PERSON_ROLES T1
							INNER JOIN ROLE_RIGHTS T2 ON T1.ROLE_ID = T2.ROLE_ID
							INNER JOIN RIGHTS T3 ON T2.RIGHT_ID = T3.RIGHT_ID 
							WHERE T1.DESCEND_FLAG = ''Y'' AND T1.PERSON_ID = ''',AV_PERSON_ID,'''
							AND RIGHT_NAME IN (''VIEW_CONSULTING_DISCLOSURE'', ''MANAGE_CONSULTING_DISCLOSURE'') 
                            ))');
                        
	IF AV_IS_COUNT = TRUE THEN
		SET LS_DYN_SQL = CONCAT(LS_DYN_SQL, ' SELECT COUNT(*) FROM ( SELECT DISTINCT ');
	ELSE
		SET LS_DYN_SQL = CONCAT(LS_DYN_SQL, ' SELECT * FROM ( SELECT DISTINCT ');
	END IF;
     SET LS_DYN_SQL = CONCAT(LS_DYN_SQL,SELECTED_FIELD_LIST,' FROM CONSULTING_DISCLOSURE T50 ', JOIN_CONDITION, TAB_QUERY,
							' GROUP BY T50.DISCLOSURE_ID)T ',LS_FILTER_CONDITION,' ',AV_SORT_TYPE,' ',LS_OFFSET_CONDITION);

SET @QUERY_STATEMENT = LS_DYN_SQL;
PREPARE EXECUTABLE_STAEMENT FROM @QUERY_STATEMENT;
EXECUTE EXECUTABLE_STAEMENT;

END
//
