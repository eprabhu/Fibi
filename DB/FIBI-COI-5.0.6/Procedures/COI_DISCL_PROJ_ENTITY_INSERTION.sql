DELIMITER //
CREATE PROCEDURE `COI_DISCL_PROJ_ENTITY_INSERTION`(
	AV_COI_DISCL_PROJECTS_ID          	INT,
    	AV_DISCLOSURE_ID 					INT,
    	AV_DISCLOSURE_NUMBER 				INT,
    	AV_MODULE_CODE						INT(10),
    	AV_MODULE_ITEM_KEY					VARCHAR(100),
    	AV_PERSON_ID        				VARCHAR(40),
        AV_UPDATED_BY        				VARCHAR(40),
    	AV_SFI_JSON_ARRAY      				JSON
    )
    BEGIN

    	DECLARE i INT DEFAULT 0;
            DECLARE array_length INT DEFAULT JSON_LENGTH(AV_SFI_JSON_ARRAY);

        	DECLARE LS_COMMENT TEXT;
        	DECLARE LS_COMMET_UPDATE_USER VARCHAR(60);
        	DECLARE LS_PROJECT_CONFLICT_STATUS_CODE VARCHAR(10);


            WHILE i < array_length DO

                SET @json_obj = JSON_EXTRACT(AV_SFI_JSON_ARRAY, CONCAT('$[', i, ']'));

                SET @LI_ENTITY_ID = JSON_UNQUOTE(JSON_EXTRACT(@json_obj, '$.ENTITY_ID'));
                SET @LI_PERSON_ENTITY_ID = JSON_UNQUOTE(JSON_EXTRACT(@json_obj, '$.PERSON_ENTITY_ID'));
                SET @LI_PERSON_ENTITY_NUMBER = JSON_UNQUOTE(JSON_EXTRACT(@json_obj, '$.PERSON_ENTITY_NUMBER'));


        		SET LS_COMMENT = null;
        		SET LS_PROJECT_CONFLICT_STATUS_CODE = null;

        		/* SELECT DISTINCT T1.PROJECT_CONFLICT_STATUS_CODE, T3.COMMENT, T3.UPDATE_USER INTO LS_PROJECT_CONFLICT_STATUS_CODE, LS_COMMENT, LS_COMMET_UPDATE_USER
        			FROM COI_DISCL_PROJECT_ENTITY_REL T1
        			INNER JOIN COI_DISCL_PROJECTS T2 ON T2.COI_DISCL_PROJECTS_ID = T1.COI_DISCL_PROJECTS_ID
        			INNER JOIN (
        				SELECT COMMENT, MODULE_ITEM_KEY, MODULE_ITEM_NUMBER, SUB_MODULE_ITEM_KEY, UPDATE_USER
        					FROM DISCL_COMMENT
							WHERE COMPONENT_TYPE_CODE = '1' AND MODULE_CODE = 8
        			) T3 ON T3.MODULE_ITEM_KEY = T2.DISCLOSURE_ID AND T3.SUB_MODULE_ITEM_KEY = T1.COI_DISCL_PROJECT_ENTITY_REL_ID
        			WHERE T1.PERSON_ENTITY_NUMBER = @LI_PERSON_ENTITY_NUMBER
					AND T1.ENTITY_ID = @LI_ENTITY_ID
        			AND ((T2.MODULE_CODE = AV_MODULE_CODE AND T2.MODULE_ITEM_KEY = AV_MODULE_ITEM_KEY)
						OR (T1.COI_DISCL_PROJECTS_ID IN (SELECT t1.COI_DISCL_PROJECTS_ID FROM COI_DISCL_PROJECTS t1
							LEFT JOIN COI_PROJECT_INSTITUTE_PROPOSAL_V t2 ON t2.LINKED_AWARD_PROJECT_NUMBER = AV_MODULE_ITEM_KEY AND t1.MODULE_CODE = 2
							LEFT JOIN COI_PROJECT_PROPOSAL_V t3 ON t3.LINKED_IP_NUMBER = AV_MODULE_ITEM_KEY AND t1.MODULE_CODE = 3
							WHERE t2.PROPOSAL_NUMBER = t1.MODULE_ITEM_KEY OR t3.PROPOSAL_NUMBER = t1.MODULE_ITEM_KEY ))
					)ORDER BY T1.UPDATE_TIMESTAMP DESC LIMIT 1; */
        		START TRANSACTION;
        			INSERT INTO COI_DISCL_PROJECT_ENTITY_REL(COI_DISCL_PROJECTS_ID, PERSON_ENTITY_ID, PERSON_ENTITY_NUMBER, ENTITY_ID,
        				PROJECT_CONFLICT_STATUS_CODE, UPDATED_BY, UPDATE_TIMESTAMP)
        				values (AV_COI_DISCL_PROJECTS_ID, @LI_PERSON_ENTITY_ID, @LI_PERSON_ENTITY_NUMBER, @LI_ENTITY_ID,
        				LS_PROJECT_CONFLICT_STATUS_CODE, AV_UPDATED_BY, UTC_TIMESTAMP());

        			/* SET @project_ent_rel_id = LAST_INSERT_ID();

        			INSERT INTO DISCL_COMMENT(COMMENT, MODULE_CODE, MODULE_ITEM_KEY, MODULE_ITEM_NUMBER, SUB_MODULE_ITEM_KEY, COMPONENT_TYPE_CODE,
        				DOCUMENT_OWNER_PERSON_ID, COMMENT_BY_PERSON_ID, UPDATE_USER, UPDATE_TIMESTAMP)
        				VALUES(LS_COMMENT, 8, AV_DISCLOSURE_ID, AV_DISCLOSURE_NUMBER, @project_ent_rel_id, '1',
        				AV_PERSON_ID, AV_PERSON_ID, LS_COMMET_UPDATE_USER, UTC_TIMESTAMP() ); */

        		COMMIT;
                SET i = i + 1;
            END WHILE;
        	UPDATE COI_DISCLOSURE SET SYNC_NEEDED = "N" WHERE DISCLOSURE_ID = AV_DISCLOSURE_ID;
END
//