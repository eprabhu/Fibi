DELIMITER //
CREATE FUNCTION `FN_CHK_DISCL_SYNC_FLAG_REQ_IN_AWD`(
    AV_PROJECT_NUMBER  VARCHAR(12),
    AV_PROJECT_STATUS_CODE VARCHAR(12),
    AV_SPONSOR_CODE VARCHAR(10),
    AV_PRIME_SPONSOR_CODE VARCHAR(10),
    AV_ATTRIBUTE_1_VALUE VARCHAR(10),
    AV_LINKED_INST_PROP_NMBRS VARCHAR(200)
) RETURNS tinyint
    DETERMINISTIC
BEGIN
     
DECLARE LS_COUNT INT DEFAULT '0';

	  SELECT COUNT(*) INTO LS_COUNT FROM COI_INT_STAGE_AWARD WHERE PROJECT_NUMBER = AV_PROJECT_NUMBER;
	  
		  IF LS_COUNT = 0 THEN
			RETURN 1;
		  END IF; 
	  
	 
	 SELECT COUNT(*) INTO LS_COUNT FROM COI_INT_STAGE_AWARD
	 WHERE PROJECT_NUMBER = AV_PROJECT_NUMBER
	 AND (PROJECT_STATUS_CODE != AV_PROJECT_STATUS_CODE OR SPONSOR_CODE != AV_SPONSOR_CODE)
		  OR (SPONSOR_CODE IS NOT NULL AND AV_SPONSOR_CODE IS NULL)
		  OR (PROJECT_STATUS_CODE IS NOT NULL AND AV_PROJECT_STATUS_CODE IS NULL);

		 IF LS_COUNT > 0 THEN
			RETURN 1;
		 END IF;
	  
		
			-- Check if prime sponsor code matches
	 SELECT COUNT(*) INTO LS_COUNT FROM COI_INT_STAGE_AWARD
		WHERE PROJECT_NUMBER = AV_PROJECT_NUMBER
	 AND (PRIME_SPONSOR_CODE IS NOT NULL AND PRIME_SPONSOR_CODE != AV_PRIME_SPONSOR_CODE
	 OR (PRIME_SPONSOR_CODE IS NOT NULL  AND AV_PRIME_SPONSOR_CODE IS NULL)
	 OR (PRIME_SPONSOR_CODE IS NULL  AND AV_PRIME_SPONSOR_CODE IS NOT NULL));

		 IF LS_COUNT > 0 THEN
			RETURN 1;
		 END IF;
    
    -- Check if PCK flag data matches
	
	SELECT COUNT(*) INTO LS_COUNT FROM COI_INT_STAGE_AWARD
	WHERE PROJECT_NUMBER = AV_PROJECT_NUMBER
	 AND (ATTRIBUTE_1_VALUE IS NOT NULL AND ATTRIBUTE_1_VALUE != AV_ATTRIBUTE_1_VALUE
	 OR (ATTRIBUTE_1_VALUE IS NOT NULL  AND AV_ATTRIBUTE_1_VALUE IS NULL)
	 OR (ATTRIBUTE_1_VALUE IS NULL  AND AV_ATTRIBUTE_1_VALUE IS NOT NULL));

        IF LS_COUNT > 0 THEN
            RETURN 1;
        END IF;
    
	SELECT COUNT(*) INTO LS_COUNT FROM COI_INT_STAGE_PROPOSAL 
	WHERE LINKED_AWARD_PROJECT_NUMBER = AV_PROJECT_NUMBER
	AND AV_LINKED_INST_PROP_NMBRS IS NULL ;
	
		IF LS_COUNT > 0 THEN
			RETURN 1;
		END IF;
	
	
	IF AV_LINKED_INST_PROP_NMBRS <> '' THEN
    
		SELECT CASE
		-- Condition 1: Check if there are any new proposals in the incoming list
		WHEN (
			SELECT COUNT(*)
			FROM COI_INT_STAGE_PROPOSAL
			WHERE LINKED_AWARD_PROJECT_NUMBER = AV_PROJECT_NUMBER
			  AND FIND_IN_SET(PROJECT_NUMBER, AV_LINKED_INST_PROP_NMBRS) > 0
		) != (LENGTH(AV_LINKED_INST_PROP_NMBRS) - LENGTH(REPLACE(AV_LINKED_INST_PROP_NMBRS, ',', '')) + 1)
		THEN 1
		
		-- Condition 2: Check if there are any existing proposals in the table that are not in the incoming list
		WHEN EXISTS (
			SELECT 1
			FROM COI_INT_STAGE_PROPOSAL
			WHERE LINKED_AWARD_PROJECT_NUMBER = AV_PROJECT_NUMBER
			  AND FIND_IN_SET(PROJECT_NUMBER, AV_LINKED_INST_PROP_NMBRS) = 0
		)
		THEN 1
		
		ELSE 0
		END INTO LS_COUNT;


            IF LS_COUNT = 1 THEN
                RETURN 1;
            END IF;
	  END IF;
  
 
RETURN 0;

END
//
