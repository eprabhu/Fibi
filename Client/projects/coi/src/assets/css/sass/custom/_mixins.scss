@mixin spread-map($map: ()) {
    @each $key, $value in $map {
        #{$key}: $value;
    }
}

$breakpoints: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px,
    xxxl: 1800px
);

$unit: '%';
// Utility class for width sizes
@each $breakKey, $breakValue in $breakpoints {
    @each $size in (25, 50, 75, 90, 100) {
        .w-#{$breakKey}-#{$size} {
            @media (min-width: $breakValue) {
                width: #{$size}#{$unit} !important;
            }
        }
    }
}

@for $i from 1 through 10 {

    // Generate normal grid classes
    .coi-grid-#{$i} {
        $columns: '';

        @for $j from 1 through $i {
            $columns: #{$columns} (1fr);
        }

        grid-template-columns: $columns;
    }

    // Generate responsive grid classes
    @each $bp, $width in $breakpoints {
        .coi-grid-#{$bp}-#{$i} {
            $columns: '';

            @for $j from 1 through $i {
                $columns: #{$columns} (1fr);
            }

            @media (min-width: $width) {
                grid-template-columns: $columns;
            }
        }
    }
}

/* Custom styles for xxxl screens */
@media (min-width: 1800px) {
    @for $i from 1 through 12 {
        .col-xxxl-#{$i} {
            $width: percentage(1 / 12 * $i);
            flex: 0 0 calc(#{$width}) !important;
            max-width: calc(#{$width}) !important;
        }
    }
}
